//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Unique.NetApi.Generated.Model.pallet_evm.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> withdraw
        /// See [`Pallet::withdraw`].
        /// </summary>
        withdraw = 0,
        
        /// <summary>
        /// >> call
        /// See [`Pallet::call`].
        /// </summary>
        call = 1,
        
        /// <summary>
        /// >> create
        /// See [`Pallet::create`].
        /// </summary>
        create = 2,
        
        /// <summary>
        /// >> create2
        /// See [`Pallet::create2`].
        /// </summary>
        create2 = 3,
    }
    
    /// <summary>
    /// >> 326 - Variant[pallet_evm.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Unique.NetApi.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Primitive.U128>>(Call.withdraw);
				AddTypeDecoder<BaseTuple<Unique.NetApi.Generated.Model.primitive_types.H160, Unique.NetApi.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>, Unique.NetApi.Generated.Model.primitive_types.U256, Substrate.NetApi.Model.Types.Primitive.U64, Unique.NetApi.Generated.Model.primitive_types.U256, Substrate.NetApi.Model.Types.Base.BaseOpt<Unique.NetApi.Generated.Model.primitive_types.U256>, Substrate.NetApi.Model.Types.Base.BaseOpt<Unique.NetApi.Generated.Model.primitive_types.U256>, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Unique.NetApi.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Base.BaseVec<Unique.NetApi.Generated.Model.primitive_types.H256>>>>>(Call.call);
				AddTypeDecoder<BaseTuple<Unique.NetApi.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>, Unique.NetApi.Generated.Model.primitive_types.U256, Substrate.NetApi.Model.Types.Primitive.U64, Unique.NetApi.Generated.Model.primitive_types.U256, Substrate.NetApi.Model.Types.Base.BaseOpt<Unique.NetApi.Generated.Model.primitive_types.U256>, Substrate.NetApi.Model.Types.Base.BaseOpt<Unique.NetApi.Generated.Model.primitive_types.U256>, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Unique.NetApi.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Base.BaseVec<Unique.NetApi.Generated.Model.primitive_types.H256>>>>>(Call.create);
				AddTypeDecoder<BaseTuple<Unique.NetApi.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>, Unique.NetApi.Generated.Model.primitive_types.H256, Unique.NetApi.Generated.Model.primitive_types.U256, Substrate.NetApi.Model.Types.Primitive.U64, Unique.NetApi.Generated.Model.primitive_types.U256, Substrate.NetApi.Model.Types.Base.BaseOpt<Unique.NetApi.Generated.Model.primitive_types.U256>, Substrate.NetApi.Model.Types.Base.BaseOpt<Unique.NetApi.Generated.Model.primitive_types.U256>, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Unique.NetApi.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Base.BaseVec<Unique.NetApi.Generated.Model.primitive_types.H256>>>>>(Call.create2);
        }
    }
}
