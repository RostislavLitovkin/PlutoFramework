//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace BifrostPolkadot.NetApi.Generated.Model.bifrost_slpx.types
{
    
    
    /// <summary>
    /// >> 965 - Composite[bifrost_slpx.types.EthereumCallConfiguration]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class EthereumCallConfiguration : BaseType
    {
        
        /// <summary>
        /// >> xcm_fee
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 XcmFee { get; set; }
        /// <summary>
        /// >> xcm_weight
        /// </summary>
        public BifrostPolkadot.NetApi.Generated.Model.sp_weights.weight_v2.Weight XcmWeight { get; set; }
        /// <summary>
        /// >> period
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Period { get; set; }
        /// <summary>
        /// >> last_block
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LastBlock { get; set; }
        /// <summary>
        /// >> contract
        /// </summary>
        public BifrostPolkadot.NetApi.Generated.Model.primitive_types.H160 Contract { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "EthereumCallConfiguration";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(XcmFee.Encode());
            result.AddRange(XcmWeight.Encode());
            result.AddRange(Period.Encode());
            result.AddRange(LastBlock.Encode());
            result.AddRange(Contract.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            XcmFee = new Substrate.NetApi.Model.Types.Primitive.U128();
            XcmFee.Decode(byteArray, ref p);
            XcmWeight = new BifrostPolkadot.NetApi.Generated.Model.sp_weights.weight_v2.Weight();
            XcmWeight.Decode(byteArray, ref p);
            Period = new Substrate.NetApi.Model.Types.Primitive.U32();
            Period.Decode(byteArray, ref p);
            LastBlock = new Substrate.NetApi.Model.Types.Primitive.U32();
            LastBlock.Decode(byteArray, ref p);
            Contract = new BifrostPolkadot.NetApi.Generated.Model.primitive_types.H160();
            Contract.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
