//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace BifrostPolkadot.NetApi.Generated.Model.bifrost_farming.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> NotNullable
        /// The field tokens_proportion cannot be empty.
        /// </summary>
        NotNullable = 0,
        
        /// <summary>
        /// >> PoolDoesNotExist
        /// The pool does not exist.
        /// </summary>
        PoolDoesNotExist = 1,
        
        /// <summary>
        /// >> GaugePoolNotExist
        /// The gauge pool does not exist.
        /// </summary>
        GaugePoolNotExist = 2,
        
        /// <summary>
        /// >> GaugeInfoNotExist
        /// The gauge info does not exist.
        /// </summary>
        GaugeInfoNotExist = 3,
        
        /// <summary>
        /// >> InvalidPoolState
        /// The pool is not in the correct state.
        /// </summary>
        InvalidPoolState = 4,
        
        /// <summary>
        /// >> CanNotClaim
        /// claim_limit_time exceeded
        /// </summary>
        CanNotClaim = 5,
        
        /// <summary>
        /// >> GaugeMaxBlockOverflow
        /// gauge pool max_block exceeded
        /// </summary>
        GaugeMaxBlockOverflow = 6,
        
        /// <summary>
        /// >> WithdrawLimitCountExceeded
        /// withdraw_limit_time exceeded
        /// </summary>
        WithdrawLimitCountExceeded = 7,
        
        /// <summary>
        /// >> ShareInfoNotExists
        /// User's personal share info does not exist
        /// </summary>
        ShareInfoNotExists = 8,
        
        /// <summary>
        /// >> CanNotDeposit
        /// The current block height needs to be greater than the field after_block_to_start in
        /// order to execute deposit.
        /// </summary>
        CanNotDeposit = 9,
        
        /// <summary>
        /// >> WhitelistEmpty
        /// Whitelist cannot be empty
        /// </summary>
        WhitelistEmpty = 10,
        
        /// <summary>
        /// >> RoundNotOver
        /// When starting a round, the field end_round needs to be 0 to indicate that the previous
        /// round has ended.
        /// </summary>
        RoundNotOver = 11,
        
        /// <summary>
        /// >> RoundLengthNotSet
        /// The round length needs to be set when starting a round
        /// </summary>
        RoundLengthNotSet = 12,
        
        /// <summary>
        /// >> WhitelistLimitExceeded
        /// Whitelist maximum limit exceeded
        /// </summary>
        WhitelistLimitExceeded = 13,
        
        /// <summary>
        /// >> NobodyVoting
        /// No one voted for this pool.
        /// </summary>
        NobodyVoting = 14,
        
        /// <summary>
        /// >> NotInWhitelist
        /// The pool is not in the whitelist
        /// </summary>
        NotInWhitelist = 15,
        
        /// <summary>
        /// >> PercentOverflow
        /// The total voting percentage of users cannot exceed 100%.
        /// </summary>
        PercentOverflow = 16,
        
        /// <summary>
        /// >> PoolNotCleared
        /// The pool cannot be cleaned completely
        /// </summary>
        PoolNotCleared = 17,
        
        /// <summary>
        /// >> InvalidRemoveAmount
        /// Invalid remove amount
        /// </summary>
        InvalidRemoveAmount = 18,
        
        /// <summary>
        /// >> UserFarmingPoolOverflow
        /// User farming pool overflow
        /// </summary>
        UserFarmingPoolOverflow = 19,
    }
    
    /// <summary>
    /// >> 943 - Variant[bifrost_farming.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnum<Error>
    {
    }
}
