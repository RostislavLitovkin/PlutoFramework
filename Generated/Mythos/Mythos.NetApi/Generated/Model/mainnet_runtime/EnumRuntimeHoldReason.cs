//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Mythos.NetApi.Generated.Model.mainnet_runtime
{
    
    
    /// <summary>
    /// >> RuntimeHoldReason
    /// </summary>
    public enum RuntimeHoldReason
    {
        
        /// <summary>
        /// >> Preimage
        /// </summary>
        Preimage = 6,
        
        /// <summary>
        /// >> Marketplace
        /// </summary>
        Marketplace = 13,
        
        /// <summary>
        /// >> Council
        /// </summary>
        Council = 16,
        
        /// <summary>
        /// >> Escrow
        /// </summary>
        Escrow = 50,
        
        /// <summary>
        /// >> MythProxy
        /// </summary>
        MythProxy = 51,
    }
    
    /// <summary>
    /// >> 391 - Variant[mainnet_runtime.RuntimeHoldReason]
    /// </summary>
    public sealed class EnumRuntimeHoldReason : BaseEnumRust<RuntimeHoldReason>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumRuntimeHoldReason()
        {
				AddTypeDecoder<Mythos.NetApi.Generated.Model.pallet_preimage.pallet.EnumHoldReason>(RuntimeHoldReason.Preimage);
				AddTypeDecoder<Mythos.NetApi.Generated.Model.pallet_marketplace.pallet.EnumHoldReason>(RuntimeHoldReason.Marketplace);
				AddTypeDecoder<Mythos.NetApi.Generated.Model.pallet_collective.pallet.EnumHoldReason>(RuntimeHoldReason.Council);
				AddTypeDecoder<Mythos.NetApi.Generated.Model.pallet_escrow.pallet.EnumHoldReason>(RuntimeHoldReason.Escrow);
				AddTypeDecoder<Mythos.NetApi.Generated.Model.pallet_myth_proxy.pallet.EnumHoldReason>(RuntimeHoldReason.MythProxy);
        }
    }
}
