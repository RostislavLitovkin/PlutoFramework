//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace InvArch.NetApi.Generated.Model.pallet_dao_staking.pallet
{
    
    
    /// <summary>
    /// >> Event
    /// The `Event` enum of this pallet
    /// </summary>
    public enum Event
    {
        
        /// <summary>
        /// >> Staked
        /// Account has staked funds to a dao.
        /// </summary>
        Staked = 0,
        
        /// <summary>
        /// >> Unstaked
        /// Account has unstaked funds from a dao.
        /// </summary>
        Unstaked = 1,
        
        /// <summary>
        /// >> Withdrawn
        /// Account has withdrawn unbonded funds.
        /// </summary>
        Withdrawn = 2,
        
        /// <summary>
        /// >> DaoRegistered
        /// New dao registered for staking.
        /// </summary>
        DaoRegistered = 3,
        
        /// <summary>
        /// >> DaoUnregistered
        /// DAO unregistered.
        /// </summary>
        DaoUnregistered = 4,
        
        /// <summary>
        /// >> NewEra
        /// Beginning of a new era.
        /// </summary>
        NewEra = 5,
        
        /// <summary>
        /// >> StakerClaimed
        /// Staker claimed rewards.
        /// </summary>
        StakerClaimed = 6,
        
        /// <summary>
        /// >> DaoClaimed
        /// Rewards claimed for dao.
        /// </summary>
        DaoClaimed = 7,
        
        /// <summary>
        /// >> HaltChanged
        /// Halt status changed.
        /// </summary>
        HaltChanged = 8,
        
        /// <summary>
        /// >> MetadataChanged
        /// DAO metadata changed.
        /// </summary>
        MetadataChanged = 9,
        
        /// <summary>
        /// >> StakeMoved
        /// Staker moved an amount of stake to another dao.
        /// </summary>
        StakeMoved = 10,
        
        /// <summary>
        /// >> DaoUnregistrationQueueStarted
        /// DAO is being unregistered.
        /// </summary>
        DaoUnregistrationQueueStarted = 11,
        
        /// <summary>
        /// >> DaoUnregistrationChunksProcessed
        /// DAO ungregistration chunk was processed.
        /// </summary>
        DaoUnregistrationChunksProcessed = 12,
        
        /// <summary>
        /// >> DaoUnregistrationQueueFinished
        /// Sharded execution of the dao unregistration process finished.
        /// </summary>
        DaoUnregistrationQueueFinished = 13,
        
        /// <summary>
        /// >> ErroredOnMessageQueue
        /// Bookeeping in case something unpredictable happens to a user mid unregistration.
        /// </summary>
        ErroredOnMessageQueue = 14,
    }
    
    /// <summary>
    /// >> 146 - Variant[pallet_dao_staking.pallet.Event]
    /// The `Event` enum of this pallet
    /// </summary>
    public sealed class EnumEvent : BaseEnumRust<Event>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumEvent()
        {
				AddTypeDecoder<BaseTuple<InvArch.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.Staked);
				AddTypeDecoder<BaseTuple<InvArch.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.Unstaked);
				AddTypeDecoder<BaseTuple<InvArch.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.Withdrawn);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U32>(Event.DaoRegistered);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U32>(Event.DaoUnregistered);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U32>(Event.NewEra);
				AddTypeDecoder<BaseTuple<InvArch.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.StakerClaimed);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, InvArch.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.DaoClaimed);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.Bool>(Event.HaltChanged);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, InvArch.NetApi.Generated.Model.pallet_dao_staking.primitives.DaoMetadataT1, InvArch.NetApi.Generated.Model.pallet_dao_staking.primitives.DaoMetadataT1>>(Event.MetadataChanged);
				AddTypeDecoder<BaseTuple<InvArch.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.StakeMoved);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U32>(Event.DaoUnregistrationQueueStarted);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U64>>(Event.DaoUnregistrationChunksProcessed);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U32>(Event.DaoUnregistrationQueueFinished);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.Str, Substrate.NetApi.Model.Types.Base.BaseOpt<InvArch.NetApi.Generated.Model.sp_core.crypto.AccountId32>>>(Event.ErroredOnMessageQueue);
        }
    }
}
