//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace XcavatePaseo.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> CommunityLoanPoolStorage
    /// </summary>
    public sealed class CommunityLoanPoolStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> CommunityLoanPoolStorage Constructor
        /// </summary>
        public CommunityLoanPoolStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "VotingCommittee"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "LoanCount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "ProposalCount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "MilestoneProposalCount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "DeletionProposalCount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "TotalLoanAmount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "TotalLoanInterests"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "ReservedLoanAmount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "OngoingLoans"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "Proposals"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.Proposal)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "MilestoneProposals"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "MilestoneInfo"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.MilestoneProposalInfo)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "DeletionProposals"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "Loans"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.LoanInfo)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "OngoingVotes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "OngoingMilestoneVotes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "OngoingDeletionVotes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "UserVotes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "UserMilestoneVotes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "UserDeletionVotes"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "RoundsExpiring"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "MilestoneRoundsExpiring"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("CommunityLoanPool", "DeletionRoundsExpiring"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39)));
        }
        
        /// <summary>
        /// >> VotingCommitteeParams
        ///  Vec of admins who are able to vote.
        /// </summary>
        public static string VotingCommitteeParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "VotingCommittee", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> VotingCommitteeDefault
        /// Default value as hex string
        /// </summary>
        public static string VotingCommitteeDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> VotingCommittee
        ///  Vec of admins who are able to vote.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38> VotingCommittee(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.VotingCommitteeParams();
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> LoanCountParams
        ///  Number of loans that have been made.
        /// </summary>
        public static string LoanCountParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "LoanCount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> LoanCountDefault
        /// Default value as hex string
        /// </summary>
        public static string LoanCountDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> LoanCount
        ///  Number of loans that have been made.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> LoanCount(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.LoanCountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ProposalCountParams
        ///  Number of proposals that have been made.
        /// </summary>
        public static string ProposalCountParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "ProposalCount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> ProposalCountDefault
        /// Default value as hex string
        /// </summary>
        public static string ProposalCountDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> ProposalCount
        ///  Number of proposals that have been made.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> ProposalCount(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.ProposalCountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> MilestoneProposalCountParams
        ///  Number of milestone proposals that have been made.
        /// </summary>
        public static string MilestoneProposalCountParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "MilestoneProposalCount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> MilestoneProposalCountDefault
        /// Default value as hex string
        /// </summary>
        public static string MilestoneProposalCountDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> MilestoneProposalCount
        ///  Number of milestone proposals that have been made.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> MilestoneProposalCount(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.MilestoneProposalCountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> DeletionProposalCountParams
        ///  Number of deletion proposals that have been made.
        /// </summary>
        public static string DeletionProposalCountParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "DeletionProposalCount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> DeletionProposalCountDefault
        /// Default value as hex string
        /// </summary>
        public static string DeletionProposalCountDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> DeletionProposalCount
        ///  Number of deletion proposals that have been made.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> DeletionProposalCount(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.DeletionProposalCountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TotalLoanAmountParams
        ///  Total amount of loan funds.
        /// </summary>
        public static string TotalLoanAmountParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "TotalLoanAmount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> TotalLoanAmountDefault
        /// Default value as hex string
        /// </summary>
        public static string TotalLoanAmountDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> TotalLoanAmount
        ///  Total amount of loan funds.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> TotalLoanAmount(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.TotalLoanAmountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TotalLoanInterestsParams
        ///  Total amount of not paid interests.
        /// </summary>
        public static string TotalLoanInterestsParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "TotalLoanInterests", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> TotalLoanInterestsDefault
        /// Default value as hex string
        /// </summary>
        public static string TotalLoanInterestsDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> TotalLoanInterests
        ///  Total amount of not paid interests.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> TotalLoanInterests(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.TotalLoanInterestsParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ReservedLoanAmountParams
        ///  Amount of founds that is still on the pallet but is reserved for loan.
        /// </summary>
        public static string ReservedLoanAmountParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "ReservedLoanAmount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> ReservedLoanAmountDefault
        /// Default value as hex string
        /// </summary>
        public static string ReservedLoanAmountDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> ReservedLoanAmount
        ///  Amount of founds that is still on the pallet but is reserved for loan.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> ReservedLoanAmount(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.ReservedLoanAmountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OngoingLoansParams
        ///  All currently ongoing loans.
        /// </summary>
        public static string OngoingLoansParams()
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "OngoingLoans", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> OngoingLoansDefault
        /// Default value as hex string
        /// </summary>
        public static string OngoingLoansDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OngoingLoans
        ///  All currently ongoing loans.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39> OngoingLoans(string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.OngoingLoansParams();
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ProposalsParams
        ///  Proposals that have been made.
        /// </summary>
        public static string ProposalsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "Proposals", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ProposalsDefault
        /// Default value as hex string
        /// </summary>
        public static string ProposalsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Proposals
        ///  Proposals that have been made.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.Proposal> Proposals(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.ProposalsParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.Proposal>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> MilestoneProposalsParams
        ///  Milestone proposals that has been made.
        /// </summary>
        public static string MilestoneProposalsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "MilestoneProposals", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MilestoneProposalsDefault
        /// Default value as hex string
        /// </summary>
        public static string MilestoneProposalsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> MilestoneProposals
        ///  Milestone proposals that has been made.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> MilestoneProposals(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.MilestoneProposalsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> MilestoneInfoParams
        ///  Milestone proposal that has been made.
        /// </summary>
        public static string MilestoneInfoParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "MilestoneInfo", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MilestoneInfoDefault
        /// Default value as hex string
        /// </summary>
        public static string MilestoneInfoDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> MilestoneInfo
        ///  Milestone proposal that has been made.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.MilestoneProposalInfo> MilestoneInfo(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.MilestoneInfoParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.MilestoneProposalInfo>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> DeletionProposalsParams
        ///  Deletion proposals that have been made.
        /// </summary>
        public static string DeletionProposalsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "DeletionProposals", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> DeletionProposalsDefault
        /// Default value as hex string
        /// </summary>
        public static string DeletionProposalsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> DeletionProposals
        ///  Deletion proposals that have been made.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> DeletionProposals(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.DeletionProposalsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> LoansParams
        ///  Mapping of ongoing loans.
        /// </summary>
        public static string LoansParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "Loans", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> LoansDefault
        /// Default value as hex string
        /// </summary>
        public static string LoansDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Loans
        ///  Mapping of ongoing loans.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.LoanInfo> Loans(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.LoansParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.LoanInfo>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OngoingVotesParams
        ///  Mapping of ongoing votes.
        /// </summary>
        public static string OngoingVotesParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "OngoingVotes", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> OngoingVotesDefault
        /// Default value as hex string
        /// </summary>
        public static string OngoingVotesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OngoingVotes
        ///  Mapping of ongoing votes.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats> OngoingVotes(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.OngoingVotesParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OngoingMilestoneVotesParams
        ///  Mapping of ongoing milstone votes.
        /// </summary>
        public static string OngoingMilestoneVotesParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "OngoingMilestoneVotes", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> OngoingMilestoneVotesDefault
        /// Default value as hex string
        /// </summary>
        public static string OngoingMilestoneVotesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OngoingMilestoneVotes
        ///  Mapping of ongoing milstone votes.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats> OngoingMilestoneVotes(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.OngoingMilestoneVotesParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OngoingDeletionVotesParams
        ///  Mapping of ongoing deletion votes.
        /// </summary>
        public static string OngoingDeletionVotesParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "OngoingDeletionVotes", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> OngoingDeletionVotesDefault
        /// Default value as hex string
        /// </summary>
        public static string OngoingDeletionVotesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OngoingDeletionVotes
        ///  Mapping of ongoing deletion votes.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats> OngoingDeletionVotes(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.OngoingDeletionVotesParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.VoteStats>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> UserVotesParams
        ///  Mapping of user who voted for a proposal.
        /// </summary>
        public static string UserVotesParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "UserVotes", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> UserVotesDefault
        /// Default value as hex string
        /// </summary>
        public static string UserVotesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> UserVotes
        ///  Mapping of user who voted for a proposal.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote> UserVotes(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.UserVotesParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> UserMilestoneVotesParams
        ///  Mapping of user who voted for a milestone proposal.
        /// </summary>
        public static string UserMilestoneVotesParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "UserMilestoneVotes", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> UserMilestoneVotesDefault
        /// Default value as hex string
        /// </summary>
        public static string UserMilestoneVotesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> UserMilestoneVotes
        ///  Mapping of user who voted for a milestone proposal.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote> UserMilestoneVotes(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.UserMilestoneVotesParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> UserDeletionVotesParams
        ///  Mapping of user who voted for a deletion proposal.
        /// </summary>
        public static string UserDeletionVotesParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "UserDeletionVotes", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> UserDeletionVotesDefault
        /// Default value as hex string
        /// </summary>
        public static string UserDeletionVotesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> UserDeletionVotes
        ///  Mapping of user who voted for a deletion proposal.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote> UserDeletionVotes(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.UserDeletionVotesParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> RoundsExpiringParams
        ///  Stores the project keys and round types ending on a given block.
        /// </summary>
        public static string RoundsExpiringParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "RoundsExpiring", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> RoundsExpiringDefault
        /// Default value as hex string
        /// </summary>
        public static string RoundsExpiringDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> RoundsExpiring
        ///  Stores the project keys and round types ending on a given block.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39> RoundsExpiring(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.RoundsExpiringParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> MilestoneRoundsExpiringParams
        ///  Stores the project keys and round types ending on a given block for milestone votings.
        /// </summary>
        public static string MilestoneRoundsExpiringParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "MilestoneRoundsExpiring", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MilestoneRoundsExpiringDefault
        /// Default value as hex string
        /// </summary>
        public static string MilestoneRoundsExpiringDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> MilestoneRoundsExpiring
        ///  Stores the project keys and round types ending on a given block for milestone votings.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39> MilestoneRoundsExpiring(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.MilestoneRoundsExpiringParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> DeletionRoundsExpiringParams
        ///  Stores the project keys and round types ending on a given block for deletion votings.
        /// </summary>
        public static string DeletionRoundsExpiringParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("CommunityLoanPool", "DeletionRoundsExpiring", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> DeletionRoundsExpiringDefault
        /// Default value as hex string
        /// </summary>
        public static string DeletionRoundsExpiringDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> DeletionRoundsExpiring
        ///  Stores the project keys and round types ending on a given block for deletion votings.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39> DeletionRoundsExpiring(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = CommunityLoanPoolStorage.DeletionRoundsExpiringParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> CommunityLoanPoolCalls
    /// </summary>
    public sealed class CommunityLoanPoolCalls
    {
        
        /// <summary>
        /// >> propose
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Propose(Substrate.NetApi.Model.Types.Primitive.U128 amount, XcavatePaseo.NetApi.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress beneficiary, Substrate.NetApi.Model.Types.Primitive.U64 developer_experience, Substrate.NetApi.Model.Types.Primitive.U64 loan_term)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(amount.Encode());
            byteArray.AddRange(beneficiary.Encode());
            byteArray.AddRange(developer_experience.Encode());
            byteArray.AddRange(loan_term.Encode());
            return new Method(122, "CommunityLoanPool", 0, "propose", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> propose_milestone
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ProposeMilestone(Substrate.NetApi.Model.Types.Primitive.U32 loan_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(loan_id.Encode());
            return new Method(122, "CommunityLoanPool", 1, "propose_milestone", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> propose_deletion
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ProposeDeletion(Substrate.NetApi.Model.Types.Primitive.U32 loan_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(loan_id.Encode());
            return new Method(122, "CommunityLoanPool", 2, "propose_deletion", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> withdraw
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Withdraw(Substrate.NetApi.Model.Types.Primitive.U32 loan_id, Substrate.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(loan_id.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(122, "CommunityLoanPool", 3, "withdraw", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> repay
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Repay(Substrate.NetApi.Model.Types.Primitive.U32 loan_id, Substrate.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(loan_id.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(122, "CommunityLoanPool", 4, "repay", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_milestones
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetMilestones(Substrate.NetApi.Model.Types.Primitive.U32 proposal_index, XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT13 proposed_milestones)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(proposal_index.Encode());
            byteArray.AddRange(proposed_milestones.Encode());
            return new Method(122, "CommunityLoanPool", 5, "set_milestones", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> vote_on_proposal
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method VoteOnProposal(Substrate.NetApi.Model.Types.Primitive.U32 proposal_index, XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote vote)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(proposal_index.Encode());
            byteArray.AddRange(vote.Encode());
            return new Method(122, "CommunityLoanPool", 6, "vote_on_proposal", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> vote_on_milestone_proposal
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method VoteOnMilestoneProposal(Substrate.NetApi.Model.Types.Primitive.U32 proposal_index, XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote vote)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(proposal_index.Encode());
            byteArray.AddRange(vote.Encode());
            return new Method(122, "CommunityLoanPool", 7, "vote_on_milestone_proposal", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> vote_on_deletion_proposal
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method VoteOnDeletionProposal(Substrate.NetApi.Model.Types.Primitive.U32 proposal_index, XcavatePaseo.NetApi.Generated.Model.pallet_community_loan_pool.pallet.EnumVote vote)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(proposal_index.Encode());
            byteArray.AddRange(vote.Encode());
            return new Method(122, "CommunityLoanPool", 8, "vote_on_deletion_proposal", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_committee_member
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method AddCommitteeMember(XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32 member)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(member.Encode());
            return new Method(122, "CommunityLoanPool", 9, "add_committee_member", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> CommunityLoanPoolConstants
    /// </summary>
    public sealed class CommunityLoanPoolConstants
    {
        
        /// <summary>
        /// >> ProposalBond
        ///  Fraction of a proposal's value that should be bonded in order to place the proposal.
        ///  An accepted proposal gets these back. A rejected proposal does not.
        /// </summary>
        public XcavatePaseo.NetApi.Generated.Model.sp_arithmetic.per_things.Permill ProposalBond()
        {
            var result = new XcavatePaseo.NetApi.Generated.Model.sp_arithmetic.per_things.Permill();
            result.Create("0x50C30000");
            return result;
        }
        
        /// <summary>
        /// >> ProposalBondMinimum
        ///  Minimum amount of funds that should be placed in a deposit for making a proposal.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 ProposalBondMinimum()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x00407A10F35A00000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> ProposalBondMaximum
        ///  Maximum amount of funds that should be placed in a deposit for making a proposal.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> ProposalBondMaximum()
        {
            var result = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128>();
            result.Create("0x00");
            return result;
        }
        
        /// <summary>
        /// >> PalletId
        ///  The community-loan-pool's pallet id, used for deriving its sovereign account ID.
        /// </summary>
        public XcavatePaseo.NetApi.Generated.Model.frame_support.PalletId PalletId()
        {
            var result = new XcavatePaseo.NetApi.Generated.Model.frame_support.PalletId();
            result.Create("0x70792F6C6F616E61");
            return result;
        }
        
        /// <summary>
        /// >> MaxOngoingLoans
        ///  The maximum amount of loans that can run at the same time.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxOngoingLoans()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0xE8030000");
            return result;
        }
    }
    
    /// <summary>
    /// >> CommunityLoanPoolErrors
    /// </summary>
    public enum CommunityLoanPoolErrors
    {
        
        /// <summary>
        /// >> InsufficientProposersBalance
        /// Proposer's balance is too low.
        /// </summary>
        InsufficientProposersBalance,
        
        /// <summary>
        /// >> InsufficientLoanPoolBalance
        /// Loan pool's balance is too low.
        /// </summary>
        InsufficientLoanPoolBalance,
        
        /// <summary>
        /// >> InvalidIndex
        /// No proposal index.
        /// </summary>
        InvalidIndex,
        
        /// <summary>
        /// >> InsufficientPermission
        /// The caller doesn't have enough permission.
        /// </summary>
        InsufficientPermission,
        
        /// <summary>
        /// >> TooManyLoans
        /// Max amount of ongoing loan reached.
        /// </summary>
        TooManyLoans,
        
        /// <summary>
        /// >> AlreadyVoted
        /// User has already voted.
        /// </summary>
        AlreadyVoted,
        
        /// <summary>
        /// >> NotApproved
        /// Loan got not approved.
        /// </summary>
        NotApproved,
        
        /// <summary>
        /// >> AlreadyMember
        /// The account is already a member in the voting committee.
        /// </summary>
        AlreadyMember,
        
        /// <summary>
        /// >> TooManyMembers
        /// There are already enough committee members.
        /// </summary>
        TooManyMembers,
        
        /// <summary>
        /// >> NotEnoughFundsToWithdraw
        /// There are not enough funds available in the loan.
        /// </summary>
        NotEnoughFundsToWithdraw,
        
        /// <summary>
        /// >> LoanStillOngoing
        /// The loan is still ongoing.
        /// </summary>
        LoanStillOngoing,
        
        /// <summary>
        /// >> NoMilestonesLeft
        /// All milestones have been accomplished.
        /// </summary>
        NoMilestonesLeft,
        
        /// <summary>
        /// >> MilestonesHaveToCoverLoan
        /// Milestones of the loan have to be 100 % in sum
        /// </summary>
        MilestonesHaveToCoverLoan,
        
        /// <summary>
        /// >> DeletionVotingOngoing
        /// Withdrawl is locked during ongoing voting for deletion.
        /// </summary>
        DeletionVotingOngoing,
        
        /// <summary>
        /// >> WantsToRepayTooMuch
        /// The beneficiary didn't borrow that much funds.
        /// </summary>
        WantsToRepayTooMuch,
        
        /// <summary>
        /// >> NotEnoughLoanFundsAvailable
        /// There are not enough funds available in the loan pallet.
        /// </summary>
        NotEnoughLoanFundsAvailable,
        
        /// <summary>
        /// >> MilestonesAlreadySet
        /// The Milestones for the proposal have already been set.
        /// </summary>
        MilestonesAlreadySet,
        
        /// <summary>
        /// >> NoMilestones
        /// There has been no milestones set in the proposal.
        /// </summary>
        NoMilestones,
        
        /// <summary>
        /// >> UnknownCollection
        /// There is an issue by calling the next collection id.
        /// </summary>
        UnknownCollection,
        
        /// <summary>
        /// >> ConversionError
        /// Error by convertion to balance type.
        /// </summary>
        ConversionError,
        
        /// <summary>
        /// >> ArithmeticUnderflow
        /// </summary>
        ArithmeticUnderflow,
        
        /// <summary>
        /// >> DivisionError
        /// Error by dividing a number.
        /// </summary>
        DivisionError,
        
        /// <summary>
        /// >> NoLoanFound
        /// This loan does not exist
        /// </summary>
        NoLoanFound,
        
        /// <summary>
        /// >> UserNotWhitelisted
        /// User has not passed the kyc.
        /// </summary>
        UserNotWhitelisted,
    }
}
