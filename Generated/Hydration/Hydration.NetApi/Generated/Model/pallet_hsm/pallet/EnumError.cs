//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Hydration.NetApi.Generated.Model.pallet_hsm.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> AssetNotApproved
        /// Asset is not approved as collateral
        /// 
        /// The operation attempted to use an asset that is not registered as an approved collateral.
        /// </summary>
        AssetNotApproved = 0,
        
        /// <summary>
        /// >> AssetAlreadyApproved
        /// Asset is already approved as collateral
        /// 
        /// Attempted to add an asset that is already registered as a collateral.
        /// </summary>
        AssetAlreadyApproved = 1,
        
        /// <summary>
        /// >> PoolAlreadyHasCollateral
        /// Another asset from the same pool is already approved
        /// 
        /// Only one asset from each StableSwap pool can be used as collateral.
        /// </summary>
        PoolAlreadyHasCollateral = 2,
        
        /// <summary>
        /// >> InvalidAssetPair
        /// Invalid asset pair, must be Hollar and approved collateral
        /// 
        /// The asset pair for buy/sell operations must include Hollar as one side and an approved collateral as the other.
        /// </summary>
        InvalidAssetPair = 3,
        
        /// <summary>
        /// >> MaxBuyPriceExceeded
        /// Max buy price exceeded
        /// 
        /// The calculated buy price exceeds the maximum allowed buy price for the collateral.
        /// </summary>
        MaxBuyPriceExceeded = 4,
        
        /// <summary>
        /// >> MaxBuyBackExceeded
        /// Max buy back amount in single block exceeded
        /// 
        /// The amount of Hollar being sold to HSM exceeds the maximum allowed in a single block for this collateral.
        /// </summary>
        MaxBuyBackExceeded = 5,
        
        /// <summary>
        /// >> MaxHoldingExceeded
        /// Max holding amount for collateral exceeded
        /// 
        /// The operation would cause the HSM to hold more of the collateral than the configured maximum.
        /// </summary>
        MaxHoldingExceeded = 6,
        
        /// <summary>
        /// >> SlippageLimitExceeded
        /// Slippage limit exceeded
        /// 
        /// The calculated amount is worse than the provided slippage limit.
        /// </summary>
        SlippageLimitExceeded = 7,
        
        /// <summary>
        /// >> InvalidEVMInteraction
        /// Invalid EVM contract interaction
        /// 
        /// The call to the EVM contract (GHO Hollar token) failed.
        /// </summary>
        InvalidEVMInteraction = 8,
        
        /// <summary>
        /// >> DecimalRetrievalFailed
        /// Decimal retrieval failed
        /// 
        /// Failed to retrieve the decimal information for an asset.
        /// </summary>
        DecimalRetrievalFailed = 9,
        
        /// <summary>
        /// >> NoArbitrageOpportunity
        /// No arbitrage opportunity
        /// 
        /// There is no profitable arbitrage opportunity for the specified collateral.
        /// </summary>
        NoArbitrageOpportunity = 10,
        
        /// <summary>
        /// >> OffchainLockError
        /// Offchain lock error
        /// 
        /// Failed to acquire the lock for offchain workers, likely because another operation is in progress.
        /// </summary>
        OffchainLockError = 11,
        
        /// <summary>
        /// >> AssetNotFound
        /// Asset not in the pool
        /// 
        /// The specified asset was not found in the pool.
        /// </summary>
        AssetNotFound = 12,
        
        /// <summary>
        /// >> InvalidPoolState
        /// Provided pool state is invalid
        /// 
        /// The retrieved pool state has inconsistent or invalid data.
        /// </summary>
        InvalidPoolState = 13,
        
        /// <summary>
        /// >> CollateralNotEmpty
        /// Collateral is not empty
        /// 
        /// Cannot remove a collateral asset that still has a non-zero balance in the HSM account.
        /// </summary>
        CollateralNotEmpty = 14,
        
        /// <summary>
        /// >> AssetNotInPool
        /// Asset not in the pool
        /// 
        /// The collateral asset is not present in the specified pool.
        /// </summary>
        AssetNotInPool = 15,
        
        /// <summary>
        /// >> HollarNotInPool
        /// Hollar is not in the pool
        /// 
        /// The Hollar asset is not present in the specified pool.
        /// </summary>
        HollarNotInPool = 16,
        
        /// <summary>
        /// >> InsufficientCollateralBalance
        /// Insufficient collateral balance
        /// 
        /// The HSM does not have enough of the collateral asset to complete the operation.
        /// </summary>
        InsufficientCollateralBalance = 17,
        
        /// <summary>
        /// >> HollarContractAddressNotFound
        /// GHO Contract address not found
        /// 
        /// The EVM address for the GHO (Hollar) token contract was not found.
        /// </summary>
        HollarContractAddressNotFound = 18,
        
        /// <summary>
        /// >> MaxNumberOfCollateralsReached
        /// HSM contains maximum number of allowed collateral assets.
        /// </summary>
        MaxNumberOfCollateralsReached = 19,
        
        /// <summary>
        /// >> FlashMinterNotSet
        /// Flash minter address not set
        /// </summary>
        FlashMinterNotSet = 20,
        
        /// <summary>
        /// >> InvalidArbitrageData
        /// Provided arbitrage data is invalid
        /// </summary>
        InvalidArbitrageData = 21,
    }
    
    /// <summary>
    /// >> 701 - Variant[pallet_hsm.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnum<Error>
    {
    }
}
