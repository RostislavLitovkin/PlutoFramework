//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Hydration.NetApi.Generated.Model.pallet_liquidity_mining.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> GlobalFarmNotFound
        /// Global farm does not exist.
        /// </summary>
        GlobalFarmNotFound = 0,
        
        /// <summary>
        /// >> YieldFarmNotFound
        /// Yield farm does not exist.
        /// </summary>
        YieldFarmNotFound = 1,
        
        /// <summary>
        /// >> DoubleClaimInPeriod
        /// Multiple claims in the same period is not allowed.
        /// </summary>
        DoubleClaimInPeriod = 2,
        
        /// <summary>
        /// >> LiquidityMiningCanceled
        /// Liquidity mining is canceled.
        /// </summary>
        LiquidityMiningCanceled = 3,
        
        /// <summary>
        /// >> LiquidityMiningIsActive
        /// Liquidity mining is not canceled.
        /// </summary>
        LiquidityMiningIsActive = 4,
        
        /// <summary>
        /// >> LiquidityMiningIsNotStopped
        /// Liquidity mining is in `active` or `terminated` state and action cannot be completed.
        /// </summary>
        LiquidityMiningIsNotStopped = 5,
        
        /// <summary>
        /// >> Forbidden
        /// Account is not allowed to perform action.
        /// </summary>
        Forbidden = 6,
        
        /// <summary>
        /// >> InvalidMultiplier
        /// Yield farm multiplier can't be 0.
        /// </summary>
        InvalidMultiplier = 7,
        
        /// <summary>
        /// >> YieldFarmAlreadyExists
        /// Yield farm with given `amm_pool_id` already exists in global farm.
        /// </summary>
        YieldFarmAlreadyExists = 8,
        
        /// <summary>
        /// >> InvalidInitialRewardPercentage
        /// Loyalty curve's initial reward percentage is not valid. Valid range is: [0, 1).
        /// </summary>
        InvalidInitialRewardPercentage = 9,
        
        /// <summary>
        /// >> GlobalFarmIsNotEmpty
        /// One or more yield farms exist in global farm.
        /// </summary>
        GlobalFarmIsNotEmpty = 10,
        
        /// <summary>
        /// >> MissingIncentivizedAsset
        /// Farm's `incentivized_asset` is missing in provided asset pair.
        /// </summary>
        MissingIncentivizedAsset = 11,
        
        /// <summary>
        /// >> InsufficientRewardCurrencyBalance
        /// Reward currency balance is not sufficient.
        /// </summary>
        InsufficientRewardCurrencyBalance = 12,
        
        /// <summary>
        /// >> InvalidBlocksPerPeriod
        /// Blocks per period can't be 0.
        /// </summary>
        InvalidBlocksPerPeriod = 13,
        
        /// <summary>
        /// >> InvalidYieldPerPeriod
        /// Yield per period can't be 0.
        /// </summary>
        InvalidYieldPerPeriod = 14,
        
        /// <summary>
        /// >> InvalidTotalRewards
        /// Total rewards is less than `MinTotalFarmRewards`.
        /// </summary>
        InvalidTotalRewards = 15,
        
        /// <summary>
        /// >> InvalidPlannedYieldingPeriods
        /// Planned yielding periods is less than `MinPlannedYieldingPeriods`.
        /// </summary>
        InvalidPlannedYieldingPeriods = 16,
        
        /// <summary>
        /// >> MaxEntriesPerDeposit
        /// Maximum number of locks reached for deposit.
        /// </summary>
        MaxEntriesPerDeposit = 17,
        
        /// <summary>
        /// >> DoubleLock
        /// Trying to lock LP shares into already locked yield farm.
        /// </summary>
        DoubleLock = 18,
        
        /// <summary>
        /// >> YieldFarmEntryNotFound
        /// Yield farm entry doesn't exist for given deposit.
        /// </summary>
        YieldFarmEntryNotFound = 19,
        
        /// <summary>
        /// >> GlobalFarmIsFull
        /// Max number of yield farms in global farm was reached. Global farm can't accept new
        /// yield farms until some yield farm is not removed from storage.
        /// </summary>
        GlobalFarmIsFull = 20,
        
        /// <summary>
        /// >> InvalidMinDeposit
        /// Invalid min. deposit was set for global farm.
        /// </summary>
        InvalidMinDeposit = 21,
        
        /// <summary>
        /// >> InvalidPriceAdjustment
        /// Price adjustment multiplier can't be 0.
        /// </summary>
        InvalidPriceAdjustment = 22,
        
        /// <summary>
        /// >> ErrorGetAccountId
        /// Account creation from id failed.
        /// </summary>
        ErrorGetAccountId = 23,
        
        /// <summary>
        /// >> IncorrectValuedShares
        /// Value of deposited shares amount in reward currency is bellow min. limit.
        /// </summary>
        IncorrectValuedShares = 24,
        
        /// <summary>
        /// >> RewardCurrencyNotRegistered
        /// `reward_currency` is not registered in asset registry.
        /// </summary>
        RewardCurrencyNotRegistered = 25,
        
        /// <summary>
        /// >> IncentivizedAssetNotRegistered
        /// `incentivized_asset` is not registered in asset registry.
        /// </summary>
        IncentivizedAssetNotRegistered = 26,
        
        /// <summary>
        /// >> InconsistentState
        /// Action cannot be completed because unexpected error has occurred. This should be reported
        /// to protocol maintainers.
        /// </summary>
        InconsistentState = 27,
    }
    
    /// <summary>
    /// >> 742 - Variant[pallet_liquidity_mining.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnumRust<Error>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumError()
        {
				AddTypeDecoder<BaseVoid>(Error.GlobalFarmNotFound);
				AddTypeDecoder<BaseVoid>(Error.YieldFarmNotFound);
				AddTypeDecoder<BaseVoid>(Error.DoubleClaimInPeriod);
				AddTypeDecoder<BaseVoid>(Error.LiquidityMiningCanceled);
				AddTypeDecoder<BaseVoid>(Error.LiquidityMiningIsActive);
				AddTypeDecoder<BaseVoid>(Error.LiquidityMiningIsNotStopped);
				AddTypeDecoder<BaseVoid>(Error.Forbidden);
				AddTypeDecoder<BaseVoid>(Error.InvalidMultiplier);
				AddTypeDecoder<BaseVoid>(Error.YieldFarmAlreadyExists);
				AddTypeDecoder<BaseVoid>(Error.InvalidInitialRewardPercentage);
				AddTypeDecoder<BaseVoid>(Error.GlobalFarmIsNotEmpty);
				AddTypeDecoder<BaseVoid>(Error.MissingIncentivizedAsset);
				AddTypeDecoder<BaseVoid>(Error.InsufficientRewardCurrencyBalance);
				AddTypeDecoder<BaseVoid>(Error.InvalidBlocksPerPeriod);
				AddTypeDecoder<BaseVoid>(Error.InvalidYieldPerPeriod);
				AddTypeDecoder<BaseVoid>(Error.InvalidTotalRewards);
				AddTypeDecoder<BaseVoid>(Error.InvalidPlannedYieldingPeriods);
				AddTypeDecoder<BaseVoid>(Error.MaxEntriesPerDeposit);
				AddTypeDecoder<BaseVoid>(Error.DoubleLock);
				AddTypeDecoder<BaseVoid>(Error.YieldFarmEntryNotFound);
				AddTypeDecoder<BaseVoid>(Error.GlobalFarmIsFull);
				AddTypeDecoder<BaseVoid>(Error.InvalidMinDeposit);
				AddTypeDecoder<BaseVoid>(Error.InvalidPriceAdjustment);
				AddTypeDecoder<BaseVoid>(Error.ErrorGetAccountId);
				AddTypeDecoder<BaseVoid>(Error.IncorrectValuedShares);
				AddTypeDecoder<BaseVoid>(Error.RewardCurrencyNotRegistered);
				AddTypeDecoder<BaseVoid>(Error.IncentivizedAssetNotRegistered);
				AddTypeDecoder<Hydration.NetApi.Generated.Model.pallet_liquidity_mining.pallet.EnumInconsistentStateError>(Error.InconsistentState);
        }
    }
}
