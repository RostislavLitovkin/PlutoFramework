//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace KiltPeregrine.NetApi.Generated.Model.pallet_dip_provider.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> CommitmentNotFound
        /// The specified commitment cannot be found.
        /// </summary>
        CommitmentNotFound = 0,
        
        /// <summary>
        /// >> IdentityProvider
        /// Error when retrieving the identity details of the provided subject.
        /// </summary>
        IdentityProvider = 1,
        
        /// <summary>
        /// >> IdentityCommitmentGenerator
        /// Error when generating a commitment for the retrieved identity.
        /// </summary>
        IdentityCommitmentGenerator = 2,
        
        /// <summary>
        /// >> Hook
        /// Error inside the external hook logic.
        /// </summary>
        Hook = 3,
    }
    
    /// <summary>
    /// >> 657 - Variant[pallet_dip_provider.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnumRust<Error>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumError()
        {
				AddTypeDecoder<BaseVoid>(Error.CommitmentNotFound);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U16>(Error.IdentityProvider);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U16>(Error.IdentityCommitmentGenerator);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U16>(Error.Hook);
        }
    }
}
