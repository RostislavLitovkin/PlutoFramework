//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace KiltPeregrine.NetApi.Generated.Model.pallet_ismp.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> handle_unsigned
        /// Execute the provided batch of ISMP messages, this will short-circuit and revert if any
        /// of the provided messages are invalid. This is an unsigned extrinsic that permits anyone
        /// execute ISMP messages for free, provided they have valid proofs and the messages have
        /// not been previously processed.
        /// 
        /// The dispatch origin for this call must be an unsigned one.
        /// 
        /// - `messages`: the messages to handle or process.
        /// 
        /// Emits different message events based on the Message received if successful.
        /// </summary>
        handle_unsigned = 0,
        
        /// <summary>
        /// >> create_consensus_client
        /// Create a consensus client, using a subjectively chosen consensus state. This can also
        /// be used to overwrite an existing consensus state. The dispatch origin for this
        /// call must be `T::AdminOrigin`.
        /// 
        /// - `message`: [`CreateConsensusState`] struct.
        /// 
        /// Emits [`Event::ConsensusClientCreated`] if successful.
        /// </summary>
        create_consensus_client = 2,
        
        /// <summary>
        /// >> update_consensus_state
        /// Modify the unbonding period and challenge period for a consensus state.
        /// The dispatch origin for this call must be `T::AdminOrigin`.
        /// 
        /// - `message`: `UpdateConsensusState` struct.
        /// </summary>
        update_consensus_state = 3,
        
        /// <summary>
        /// >> fund_message
        /// Add more funds to a message (request or response) to be used for delivery and execution.
        /// 
        /// Should not be called on a message that has been completed (delivered or timed-out) as
        /// those funds will be lost forever.
        /// </summary>
        fund_message = 4,
    }
    
    /// <summary>
    /// >> 451 - Variant[pallet_ismp.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<Substrate.NetApi.Model.Types.Base.BaseVec<KiltPeregrine.NetApi.Generated.Model.ismp.messaging.EnumMessage>>(Call.handle_unsigned);
				AddTypeDecoder<KiltPeregrine.NetApi.Generated.Model.ismp.messaging.CreateConsensusState>(Call.create_consensus_client);
				AddTypeDecoder<KiltPeregrine.NetApi.Generated.Model.pallet_ismp.utils.UpdateConsensusState>(Call.update_consensus_state);
				AddTypeDecoder<KiltPeregrine.NetApi.Generated.Model.pallet_ismp.utils.FundMessageParams>(Call.fund_message);
        }
    }
}
