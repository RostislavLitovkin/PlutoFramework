//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace KiltPeregrine.NetApi.Generated.Model.ctype.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> add
        /// Create a new CType from the given unique CType hash and associates
        /// it with its creator.
        /// 
        /// A CType with the same hash must not be stored on chain.
        /// 
        /// Emits `CTypeCreated`.
        /// 
        /// # <weight>
        /// Weight: O(1)
        /// - Reads: Ctypes, Balance
        /// - Writes: Ctypes, Balance
        /// # </weight>
        /// </summary>
        add = 0,
        
        /// <summary>
        /// >> set_block_number
        /// Set the creation block number for a given CType, if found.
        /// 
        /// Emits `CTypeUpdated`.
        /// </summary>
        set_block_number = 1,
    }
    
    /// <summary>
    /// >> 332 - Variant[ctype.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>(Call.add);
				AddTypeDecoder<BaseTuple<KiltPeregrine.NetApi.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Primitive.U64>>(Call.set_block_number);
        }
    }
}
