//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace KiltPeregrine.NetApi.Generated.Model.did.did_details
{
    
    
    /// <summary>
    /// >> 342 - Composite[did.did_details.DidCreationDetails]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class DidCreationDetails : BaseType
    {
        
        /// <summary>
        /// >> did
        /// </summary>
        public KiltPeregrine.NetApi.Generated.Model.sp_core.crypto.AccountId32 Did { get; set; }
        /// <summary>
        /// >> submitter
        /// </summary>
        public KiltPeregrine.NetApi.Generated.Model.sp_core.crypto.AccountId32 Submitter { get; set; }
        /// <summary>
        /// >> new_key_agreement_keys
        /// </summary>
        public KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT1 NewKeyAgreementKeys { get; set; }
        /// <summary>
        /// >> new_attestation_key
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<KiltPeregrine.NetApi.Generated.Model.did.did_details.EnumDidVerificationKey> NewAttestationKey { get; set; }
        /// <summary>
        /// >> new_delegation_key
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<KiltPeregrine.NetApi.Generated.Model.did.did_details.EnumDidVerificationKey> NewDelegationKey { get; set; }
        /// <summary>
        /// >> new_service_details
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<KiltPeregrine.NetApi.Generated.Model.did.service_endpoints.DidEndpoint> NewServiceDetails { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "DidCreationDetails";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Did.Encode());
            result.AddRange(Submitter.Encode());
            result.AddRange(NewKeyAgreementKeys.Encode());
            result.AddRange(NewAttestationKey.Encode());
            result.AddRange(NewDelegationKey.Encode());
            result.AddRange(NewServiceDetails.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Did = new KiltPeregrine.NetApi.Generated.Model.sp_core.crypto.AccountId32();
            Did.Decode(byteArray, ref p);
            Submitter = new KiltPeregrine.NetApi.Generated.Model.sp_core.crypto.AccountId32();
            Submitter.Decode(byteArray, ref p);
            NewKeyAgreementKeys = new KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT1();
            NewKeyAgreementKeys.Decode(byteArray, ref p);
            NewAttestationKey = new Substrate.NetApi.Model.Types.Base.BaseOpt<KiltPeregrine.NetApi.Generated.Model.did.did_details.EnumDidVerificationKey>();
            NewAttestationKey.Decode(byteArray, ref p);
            NewDelegationKey = new Substrate.NetApi.Model.Types.Base.BaseOpt<KiltPeregrine.NetApi.Generated.Model.did.did_details.EnumDidVerificationKey>();
            NewDelegationKey.Decode(byteArray, ref p);
            NewServiceDetails = new Substrate.NetApi.Model.Types.Base.BaseVec<KiltPeregrine.NetApi.Generated.Model.did.service_endpoints.DidEndpoint>();
            NewServiceDetails.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
