//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace KiltPeregrine.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> DepositStorageStorage
    /// </summary>
    public sealed class DepositStorageStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> DepositStorageStorage Constructor
        /// </summary>
        public DepositStorageStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("DepositStorage", "Deposits"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<KiltPeregrine.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace, KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10>), typeof(KiltPeregrine.NetApi.Generated.Model.pallet_deposit_storage.deposit.DepositEntry)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("DepositStorage", "SystemDeposits"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<KiltPeregrine.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace, KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10>), typeof(KiltPeregrine.NetApi.Generated.Model.pallet_deposit_storage.deposit.DepositEntry)));
        }
        
        /// <summary>
        /// >> DepositsParams
        ///  Storage of all deposits. Its first key is a namespace, and the second
        ///  one the deposit key. Its value includes the details associated to a
        ///  deposit instance.
        /// </summary>
        public static string DepositsParams(Substrate.NetApi.Model.Types.Base.BaseTuple<KiltPeregrine.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace, KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10> key)
        {
            return RequestGenerator.GetStorage("DepositStorage", "Deposits", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> DepositsDefault
        /// Default value as hex string
        /// </summary>
        public static string DepositsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Deposits
        ///  Storage of all deposits. Its first key is a namespace, and the second
        ///  one the deposit key. Its value includes the details associated to a
        ///  deposit instance.
        /// </summary>
        public async Task<KiltPeregrine.NetApi.Generated.Model.pallet_deposit_storage.deposit.DepositEntry> Deposits(Substrate.NetApi.Model.Types.Base.BaseTuple<KiltPeregrine.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace, KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10> key, string blockhash, CancellationToken token)
        {
            string parameters = DepositStorageStorage.DepositsParams(key);
            var result = await _client.GetStorageAsync<KiltPeregrine.NetApi.Generated.Model.pallet_deposit_storage.deposit.DepositEntry>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> SystemDepositsParams
        ///  Storage of all system deposits. They are the same as user deposits, but
        ///  cannot be claimed back by the payers. Instead, some on chain logic must
        ///  trigger their release.
        /// </summary>
        public static string SystemDepositsParams(Substrate.NetApi.Model.Types.Base.BaseTuple<KiltPeregrine.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace, KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10> key)
        {
            return RequestGenerator.GetStorage("DepositStorage", "SystemDeposits", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> SystemDepositsDefault
        /// Default value as hex string
        /// </summary>
        public static string SystemDepositsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> SystemDeposits
        ///  Storage of all system deposits. They are the same as user deposits, but
        ///  cannot be claimed back by the payers. Instead, some on chain logic must
        ///  trigger their release.
        /// </summary>
        public async Task<KiltPeregrine.NetApi.Generated.Model.pallet_deposit_storage.deposit.DepositEntry> SystemDeposits(Substrate.NetApi.Model.Types.Base.BaseTuple<KiltPeregrine.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace, KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10> key, string blockhash, CancellationToken token)
        {
            string parameters = DepositStorageStorage.SystemDepositsParams(key);
            var result = await _client.GetStorageAsync<KiltPeregrine.NetApi.Generated.Model.pallet_deposit_storage.deposit.DepositEntry>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> DepositStorageCalls
    /// </summary>
    public sealed class DepositStorageCalls
    {
        
        /// <summary>
        /// >> reclaim_deposit
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ReclaimDeposit(KiltPeregrine.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace @namespace, KiltPeregrine.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10 key)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(@namespace.Encode());
            byteArray.AddRange(key.Encode());
            return new Method(72, "DepositStorage", 0, "reclaim_deposit", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> DepositStorageConstants
    /// </summary>
    public sealed class DepositStorageConstants
    {
        
        /// <summary>
        /// >> MaxKeyLength
        ///  The maximum length of keys.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxKeyLength()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x23000000");
            return result;
        }
    }
    
    /// <summary>
    /// >> DepositStorageErrors
    /// </summary>
    public enum DepositStorageErrors
    {
        
        /// <summary>
        /// >> DepositNotFound
        /// The deposit with the provided key was not found within the specified
        /// namespace.
        /// </summary>
        DepositNotFound,
        
        /// <summary>
        /// >> DepositExisting
        /// A deposit with the provided key already exists within the specified
        /// namespace.
        /// </summary>
        DepositExisting,
        
        /// <summary>
        /// >> Unauthorized
        /// The origin was not authorized to perform the operation on the
        /// specified deposit entry.
        /// </summary>
        Unauthorized,
        
        /// <summary>
        /// >> FailedToHold
        /// The origin did not have enough fund to pay for the deposit.
        /// </summary>
        FailedToHold,
        
        /// <summary>
        /// >> FailedToRelease
        /// Error when trying to release a previously-reserved deposit.
        /// </summary>
        FailedToRelease,
        
        /// <summary>
        /// >> Hook
        /// The external hook failed.
        /// </summary>
        Hook,
        
        /// <summary>
        /// >> Internal
        /// Internal error.
        /// </summary>
        Internal,
    }
}
