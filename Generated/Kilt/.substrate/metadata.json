{
  "Origin": "",
  "Magic": "0x6D657461",
  "Version": 14,
  "NodeMetadata": {
    "Types": {
      "0": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "sp_core",
          "crypto",
          "AccountId32"
        ],
        "TypeDef": "Composite"
      },
      "1": {
        "Length": 32,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "2": {
        "Primitive": "U8",
        "TypeDef": "Primitive"
      },
      "3": {
        "TypeFields": [
          {
            "Name": "nonce",
            "TypeName": "Nonce",
            "TypeId": 4
          },
          {
            "Name": "consumers",
            "TypeName": "RefCount",
            "TypeId": 8
          },
          {
            "Name": "providers",
            "TypeName": "RefCount",
            "TypeId": 8
          },
          {
            "Name": "sufficients",
            "TypeName": "RefCount",
            "TypeId": 8
          },
          {
            "Name": "data",
            "TypeName": "AccountData",
            "TypeId": 5
          }
        ],
        "Path": [
          "frame_system",
          "AccountInfo"
        ],
        "TypeParams": [
          {
            "Name": "Nonce",
            "TypeId": 4
          },
          {
            "Name": "AccountData",
            "TypeId": 5
          }
        ],
        "TypeDef": "Composite"
      },
      "4": {
        "Primitive": "U64",
        "TypeDef": "Primitive"
      },
      "5": {
        "TypeFields": [
          {
            "Name": "free",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "reserved",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "frozen",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "flags",
            "TypeName": "ExtraFlags",
            "TypeId": 7
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "AccountData"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "6": {
        "Primitive": "U128",
        "TypeDef": "Primitive"
      },
      "7": {
        "TypeFields": [
          {
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "ExtraFlags"
        ],
        "TypeDef": "Composite"
      },
      "8": {
        "Primitive": "U32",
        "TypeDef": "Primitive"
      },
      "9": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 10
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 10
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 10
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 10
          }
        ],
        "TypeDef": "Composite"
      },
      "10": {
        "TypeFields": [
          {
            "Name": "ref_time",
            "TypeName": "u64",
            "TypeId": 11
          },
          {
            "Name": "proof_size",
            "TypeName": "u64",
            "TypeId": 11
          }
        ],
        "Path": [
          "sp_weights",
          "weight_v2",
          "Weight"
        ],
        "TypeDef": "Composite"
      },
      "11": {
        "TypeId": 4,
        "TypeDef": "Compact"
      },
      "12": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "primitive_types",
          "H256"
        ],
        "TypeDef": "Composite"
      },
      "13": {
        "TypeId": 2,
        "TypeDef": "Sequence"
      },
      "14": {
        "TypeFields": [
          {
            "Name": "logs",
            "TypeName": "Vec<DigestItem>",
            "TypeId": 15
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "digest",
          "Digest"
        ],
        "TypeDef": "Composite"
      },
      "15": {
        "TypeId": 16,
        "TypeDef": "Sequence"
      },
      "16": {
        "Variants": [
          {
            "Name": "PreRuntime",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 6
          },
          {
            "Name": "Consensus",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 4
          },
          {
            "Name": "Seal",
            "TypeFields": [
              {
                "TypeName": "ConsensusEngineId",
                "TypeId": 17
              },
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 5
          },
          {
            "Name": "Other",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0
          },
          {
            "Name": "RuntimeEnvironmentUpdated",
            "TypeFields": null,
            "Index": 8
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "digest",
          "DigestItem"
        ],
        "TypeDef": "Variant"
      },
      "17": {
        "Length": 4,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "18": {
        "TypeId": 19,
        "TypeDef": "Sequence"
      },
      "19": {
        "TypeFields": [
          {
            "Name": "phase",
            "TypeName": "Phase",
            "TypeId": 217
          },
          {
            "Name": "event",
            "TypeName": "E",
            "TypeId": 20
          },
          {
            "Name": "topics",
            "TypeName": "Vec<T>",
            "TypeId": 155
          }
        ],
        "Path": [
          "frame_system",
          "EventRecord"
        ],
        "TypeParams": [
          {
            "Name": "E",
            "TypeId": 20
          },
          {
            "Name": "T",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "20": {
        "Variants": [
          {
            "Name": "System",
            "TypeFields": [
              {
                "TypeName": "frame_system::Event<Runtime>",
                "TypeId": 21
              }
            ],
            "Index": 0
          },
          {
            "Name": "Indices",
            "TypeFields": [
              {
                "TypeName": "pallet_indices::Event<Runtime>",
                "TypeId": 31
              }
            ],
            "Index": 5
          },
          {
            "Name": "Balances",
            "TypeFields": [
              {
                "TypeName": "pallet_balances::Event<Runtime>",
                "TypeId": 32
              }
            ],
            "Index": 6
          },
          {
            "Name": "TransactionPayment",
            "TypeFields": [
              {
                "TypeName": "pallet_transaction_payment::Event<Runtime>",
                "TypeId": 34
              }
            ],
            "Index": 7
          },
          {
            "Name": "Session",
            "TypeFields": [
              {
                "TypeName": "pallet_session::Event",
                "TypeId": 35
              }
            ],
            "Index": 22
          },
          {
            "Name": "ParachainStaking",
            "TypeFields": [
              {
                "TypeName": "parachain_staking::Event<Runtime>",
                "TypeId": 36
              }
            ],
            "Index": 21
          },
          {
            "Name": "Democracy",
            "TypeFields": [
              {
                "TypeName": "pallet_democracy::Event<Runtime>",
                "TypeId": 38
              }
            ],
            "Index": 30
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                "TypeId": 43
              }
            ],
            "Index": 31
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                "TypeId": 46
              }
            ],
            "Index": 32
          },
          {
            "Name": "TechnicalMembership",
            "TypeFields": [
              {
                "TypeName": "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                "TypeId": 47
              }
            ],
            "Index": 34
          },
          {
            "Name": "Treasury",
            "TypeFields": [
              {
                "TypeName": "pallet_treasury::Event<Runtime>",
                "TypeId": 48
              }
            ],
            "Index": 35
          },
          {
            "Name": "Utility",
            "TypeFields": [
              {
                "TypeName": "pallet_utility::Event",
                "TypeId": 49
              }
            ],
            "Index": 40
          },
          {
            "Name": "Vesting",
            "TypeFields": [
              {
                "TypeName": "pallet_vesting::Event<Runtime>",
                "TypeId": 50
              }
            ],
            "Index": 41
          },
          {
            "Name": "Scheduler",
            "TypeFields": [
              {
                "TypeName": "pallet_scheduler::Event<Runtime>",
                "TypeId": 51
              }
            ],
            "Index": 42
          },
          {
            "Name": "Proxy",
            "TypeFields": [
              {
                "TypeName": "pallet_proxy::Event<Runtime>",
                "TypeId": 54
              }
            ],
            "Index": 43
          },
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "pallet_preimage::Event<Runtime>",
                "TypeId": 57
              }
            ],
            "Index": 44
          },
          {
            "Name": "TipsMembership",
            "TypeFields": [
              {
                "TypeName": "pallet_membership::Event<Runtime, pallet_membership::Instance2>",
                "TypeId": 58
              }
            ],
            "Index": 45
          },
          {
            "Name": "Tips",
            "TypeFields": [
              {
                "TypeName": "pallet_tips::Event<Runtime>",
                "TypeId": 59
              }
            ],
            "Index": 46
          },
          {
            "Name": "Multisig",
            "TypeFields": [
              {
                "TypeName": "pallet_multisig::Event<Runtime>",
                "TypeId": 60
              }
            ],
            "Index": 47
          },
          {
            "Name": "AssetSwitchPool1",
            "TypeFields": [
              {
                "TypeName": "pallet_asset_switch::Event<Runtime, pallet_asset_switch::Instance1>",
                "TypeId": 62
              }
            ],
            "Index": 48
          },
          {
            "Name": "Fungibles",
            "TypeFields": [
              {
                "TypeName": "pallet_assets::Event<Runtime>",
                "TypeId": 110
              }
            ],
            "Index": 49
          },
          {
            "Name": "Ctype",
            "TypeFields": [
              {
                "TypeName": "ctype::Event<Runtime>",
                "TypeId": 111
              }
            ],
            "Index": 61
          },
          {
            "Name": "Attestation",
            "TypeFields": [
              {
                "TypeName": "attestation::Event<Runtime>",
                "TypeId": 112
              }
            ],
            "Index": 62
          },
          {
            "Name": "Delegation",
            "TypeFields": [
              {
                "TypeName": "delegation::Event<Runtime>",
                "TypeId": 115
              }
            ],
            "Index": 63
          },
          {
            "Name": "Did",
            "TypeFields": [
              {
                "TypeName": "did::Event<Runtime>",
                "TypeId": 117
              }
            ],
            "Index": 64
          },
          {
            "Name": "DidLookup",
            "TypeFields": [
              {
                "TypeName": "pallet_did_lookup::Event<Runtime>",
                "TypeId": 118
              }
            ],
            "Index": 67
          },
          {
            "Name": "Web3Names",
            "TypeFields": [
              {
                "TypeName": "pallet_web3_names::Event<Runtime>",
                "TypeId": 121
              }
            ],
            "Index": 68
          },
          {
            "Name": "PublicCredentials",
            "TypeFields": [
              {
                "TypeName": "public_credentials::Event<Runtime>",
                "TypeId": 124
              }
            ],
            "Index": 69
          },
          {
            "Name": "Migration",
            "TypeFields": [
              {
                "TypeName": "pallet_migration::Event<Runtime>",
                "TypeId": 151
              }
            ],
            "Index": 70
          },
          {
            "Name": "DipProvider",
            "TypeFields": [
              {
                "TypeName": "pallet_dip_provider::Event<Runtime>",
                "TypeId": 165
              }
            ],
            "Index": 71
          },
          {
            "Name": "DepositStorage",
            "TypeFields": [
              {
                "TypeName": "pallet_deposit_storage::Event<Runtime>",
                "TypeId": 166
              }
            ],
            "Index": 72
          },
          {
            "Name": "ParachainSystem",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                "TypeId": 180
              }
            ],
            "Index": 80
          },
          {
            "Name": "XcmpQueue",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                "TypeId": 181
              }
            ],
            "Index": 82
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "pallet_xcm::Event<Runtime>",
                "TypeId": 182
              }
            ],
            "Index": 83
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcm::Event<Runtime>",
                "TypeId": 212
              }
            ],
            "Index": 84
          },
          {
            "Name": "MessageQueue",
            "TypeFields": [
              {
                "TypeName": "pallet_message_queue::Event<Runtime>",
                "TypeId": 213
              }
            ],
            "Index": 86
          }
        ],
        "Path": [
          "spiritnet_runtime",
          "RuntimeEvent"
        ],
        "TypeDef": "Variant"
      },
      "21": {
        "Variants": [
          {
            "Name": "ExtrinsicSuccess",
            "TypeFields": [
              {
                "Name": "dispatch_info",
                "TypeName": "DispatchInfo",
                "TypeId": 22
              }
            ],
            "Index": 0,
            "Docs": [
              "An extrinsic completed successfully."
            ]
          },
          {
            "Name": "ExtrinsicFailed",
            "TypeFields": [
              {
                "Name": "dispatch_error",
                "TypeName": "DispatchError",
                "TypeId": 25
              },
              {
                "Name": "dispatch_info",
                "TypeName": "DispatchInfo",
                "TypeId": 22
              }
            ],
            "Index": 1,
            "Docs": [
              "An extrinsic failed."
            ]
          },
          {
            "Name": "CodeUpdated",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "`:code` was updated."
            ]
          },
          {
            "Name": "NewAccount",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3,
            "Docs": [
              "A new account was created."
            ]
          },
          {
            "Name": "KilledAccount",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "An account was reaped."
            ]
          },
          {
            "Name": "Remarked",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "On on-chain remark happened."
            ]
          },
          {
            "Name": "UpgradeAuthorized",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "check_version",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 6,
            "Docs": [
              "An upgrade was authorized."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Event for the System pallet."
        ]
      },
      "22": {
        "TypeFields": [
          {
            "Name": "weight",
            "TypeName": "Weight",
            "TypeId": 10
          },
          {
            "Name": "class",
            "TypeName": "DispatchClass",
            "TypeId": 23
          },
          {
            "Name": "pays_fee",
            "TypeName": "Pays",
            "TypeId": 24
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "DispatchInfo"
        ],
        "TypeDef": "Composite"
      },
      "23": {
        "Variants": [
          {
            "Name": "Normal",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Operational",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Mandatory",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "DispatchClass"
        ],
        "TypeDef": "Variant"
      },
      "24": {
        "Variants": [
          {
            "Name": "Yes",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "No",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "Pays"
        ],
        "TypeDef": "Variant"
      },
      "25": {
        "Variants": [
          {
            "Name": "Other",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "CannotLookup",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Module",
            "TypeFields": [
              {
                "TypeName": "ModuleError",
                "TypeId": 26
              }
            ],
            "Index": 3
          },
          {
            "Name": "ConsumerRemaining",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "NoProviders",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "TooManyConsumers",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Token",
            "TypeFields": [
              {
                "TypeName": "TokenError",
                "TypeId": 27
              }
            ],
            "Index": 7
          },
          {
            "Name": "Arithmetic",
            "TypeFields": [
              {
                "TypeName": "ArithmeticError",
                "TypeId": 28
              }
            ],
            "Index": 8
          },
          {
            "Name": "Transactional",
            "TypeFields": [
              {
                "TypeName": "TransactionalError",
                "TypeId": 29
              }
            ],
            "Index": 9
          },
          {
            "Name": "Exhausted",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "Corruption",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "Unavailable",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "RootNotAllowed",
            "TypeFields": null,
            "Index": 13
          }
        ],
        "Path": [
          "sp_runtime",
          "DispatchError"
        ],
        "TypeDef": "Variant"
      },
      "26": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "error",
            "TypeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
            "TypeId": 17
          }
        ],
        "Path": [
          "sp_runtime",
          "ModuleError"
        ],
        "TypeDef": "Composite"
      },
      "27": {
        "Variants": [
          {
            "Name": "FundsUnavailable",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "OnlyProvider",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "BelowMinimum",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "CannotCreate",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "UnknownAsset",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Frozen",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Unsupported",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "CannotCreateHold",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "NotExpendable",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Blocked",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "sp_runtime",
          "TokenError"
        ],
        "TypeDef": "Variant"
      },
      "28": {
        "Variants": [
          {
            "Name": "Underflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "DivisionByZero",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "sp_arithmetic",
          "ArithmeticError"
        ],
        "TypeDef": "Variant"
      },
      "29": {
        "Variants": [
          {
            "Name": "LimitReached",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NoLayer",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "sp_runtime",
          "TransactionalError"
        ],
        "TypeDef": "Variant"
      },
      "30": {
        "Primitive": "Bool",
        "TypeDef": "Primitive"
      },
      "31": {
        "Variants": [
          {
            "Name": "IndexAssigned",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "A account index was assigned."
            ]
          },
          {
            "Name": "IndexFreed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "A account index has been freed up (unassigned)."
            ]
          },
          {
            "Name": "IndexFrozen",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "A account index has been frozen to its current account ID."
            ]
          }
        ],
        "Path": [
          "pallet_indices",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "32": {
        "Variants": [
          {
            "Name": "Endowed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free_balance",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "An account was created with some free balance."
            ]
          },
          {
            "Name": "DustLost",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "An account was removed whose balance was non-zero but below ExistentialDeposit,",
              "resulting in an outright loss."
            ]
          },
          {
            "Name": "Transfer",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Transfer succeeded."
            ]
          },
          {
            "Name": "BalanceSet",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "free",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "A balance was set by root."
            ]
          },
          {
            "Name": "Reserved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Some balance was reserved (moved from free to reserved)."
            ]
          },
          {
            "Name": "Unreserved",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Some balance was unreserved (moved from reserved to free)."
            ]
          },
          {
            "Name": "ReserveRepatriated",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "destination_status",
                "TypeName": "Status",
                "TypeId": 33
              }
            ],
            "Index": 6,
            "Docs": [
              "Some balance was moved from the reserve of the first account to the second account.",
              "Final argument indicates the destination balance type."
            ]
          },
          {
            "Name": "Deposit",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "Some amount was deposited (e.g. for transaction fees)."
            ]
          },
          {
            "Name": "Withdraw",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "Some amount was withdrawn from the account (e.g. for transaction fees)."
            ]
          },
          {
            "Name": "Slashed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "Some amount was removed from the account (e.g. for misbehavior)."
            ]
          },
          {
            "Name": "Minted",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "Some amount was minted into an account."
            ]
          },
          {
            "Name": "Burned",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "Some amount was burned from an account."
            ]
          },
          {
            "Name": "Suspended",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 12,
            "Docs": [
              "Some amount was suspended from an account (it can be restored later)."
            ]
          },
          {
            "Name": "Restored",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 13,
            "Docs": [
              "Some amount was restored into an account."
            ]
          },
          {
            "Name": "Upgraded",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 14,
            "Docs": [
              "An account was upgraded."
            ]
          },
          {
            "Name": "Issued",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 15,
            "Docs": [
              "Total issuance was increased by `amount`, creating a credit to be balanced."
            ]
          },
          {
            "Name": "Rescinded",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 16,
            "Docs": [
              "Total issuance was decreased by `amount`, creating a debt to be balanced."
            ]
          },
          {
            "Name": "Locked",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 17,
            "Docs": [
              "Some balance was locked."
            ]
          },
          {
            "Name": "Unlocked",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 18,
            "Docs": [
              "Some balance was unlocked."
            ]
          },
          {
            "Name": "Frozen",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 19,
            "Docs": [
              "Some balance was frozen."
            ]
          },
          {
            "Name": "Thawed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 20,
            "Docs": [
              "Some balance was thawed."
            ]
          },
          {
            "Name": "TotalIssuanceForced",
            "TypeFields": [
              {
                "Name": "old",
                "TypeName": "T::Balance",
                "TypeId": 6
              },
              {
                "Name": "new",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 21,
            "Docs": [
              "The `TotalIssuance` was forcefully changed."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "33": {
        "Variants": [
          {
            "Name": "Free",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Reserved",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "tokens",
          "misc",
          "BalanceStatus"
        ],
        "TypeDef": "Variant"
      },
      "34": {
        "Variants": [
          {
            "Name": "TransactionFeePaid",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "actual_fee",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "Name": "tip",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
              "has been paid by `who`."
            ]
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "35": {
        "Variants": [
          {
            "Name": "NewSession",
            "TypeFields": [
              {
                "Name": "session_index",
                "TypeName": "SessionIndex",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "New session has happened. Note that the argument is the session index, not the",
              "block number as the type might suggest."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "36": {
        "Variants": [
          {
            "Name": "NewRound",
            "TypeFields": [
              {
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "TypeName": "SessionIndex",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "A new staking round has started.",
              "\\[block number, round number\\]"
            ]
          },
          {
            "Name": "EnteredTopCandidates",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "A new account has joined the set of top candidates.",
              "\\[account\\]"
            ]
          },
          {
            "Name": "LeftTopCandidates",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "An account was removed from the set of top candidates.",
              "\\[account\\]"
            ]
          },
          {
            "Name": "JoinedCollatorCandidates",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "A new account has joined the set of collator candidates.",
              "\\[account, amount staked by the new candidate\\]"
            ]
          },
          {
            "Name": "CollatorStakedMore",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "A collator candidate has increased the amount of funds at stake.",
              "\\[collator's account, previous stake, new stake\\]"
            ]
          },
          {
            "Name": "CollatorStakedLess",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "A collator candidate has decreased the amount of funds at stake.",
              "\\[collator's account, previous stake, new stake\\]"
            ]
          },
          {
            "Name": "CollatorScheduledExit",
            "TypeFields": [
              {
                "TypeName": "SessionIndex",
                "TypeId": 8
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "SessionIndex",
                "TypeId": 8
              }
            ],
            "Index": 6,
            "Docs": [
              "A collator candidate has started the process to leave the set of",
              "candidates. \\[round number, collator's account, round number when",
              "the collator will be effectively removed from the set of",
              "candidates\\]"
            ]
          },
          {
            "Name": "CollatorCanceledExit",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "A collator candidate has canceled the process to leave the set of",
              "candidates and was added back to the candidate pool. \\[collator's",
              "account\\]"
            ]
          },
          {
            "Name": "CandidateLeft",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "An account has left the set of collator candidates.",
              "\\[account, amount of funds un-staked\\]"
            ]
          },
          {
            "Name": "CollatorRemoved",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 9,
            "Docs": [
              "An account was forcedly removed from the  set of collator",
              "candidates. \\[account, amount of funds un-staked\\]"
            ]
          },
          {
            "Name": "MaxCandidateStakeChanged",
            "TypeFields": [
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "The maximum candidate stake has been changed.",
              "\\[new max amount\\]"
            ]
          },
          {
            "Name": "DelegatorStakedMore",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "A delegator has increased the amount of funds at stake for a",
              "collator. \\[delegator's account, collator's account, previous",
              "delegation stake, new delegation stake\\]"
            ]
          },
          {
            "Name": "DelegatorStakedLess",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 12,
            "Docs": [
              "A delegator has decreased the amount of funds at stake for a",
              "collator. \\[delegator's account, collator's account, previous",
              "delegation stake, new delegation stake\\]"
            ]
          },
          {
            "Name": "DelegatorLeft",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 13,
            "Docs": [
              "An account has left the set of delegators.",
              "\\[account, amount of funds un-staked\\]"
            ]
          },
          {
            "Name": "Delegation",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 14,
            "Docs": [
              "An account has delegated a new collator candidate.",
              "\\[account, amount of funds staked, total amount of delegators' funds",
              "staked for the collator candidate\\]"
            ]
          },
          {
            "Name": "DelegationReplaced",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 15,
            "Docs": [
              "A new delegation has replaced an existing one in the set of ongoing",
              "delegations for a collator candidate. \\[new delegator's account,",
              "amount of funds staked in the new delegation, replaced delegator's",
              "account, amount of funds staked in the replace delegation, collator",
              "candidate's account, new total amount of delegators' funds staked",
              "for the collator candidate\\]"
            ]
          },
          {
            "Name": "DelegatorLeftCollator",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 16,
            "Docs": [
              "An account has stopped delegating a collator candidate.",
              "\\[account, collator candidate's account, old amount of delegators'",
              "funds staked, new amount of delegators' funds staked\\]"
            ]
          },
          {
            "Name": "Rewarded",
            "TypeFields": [
              {
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 17,
            "Docs": [
              "A collator or a delegator has received a reward.",
              "\\[account, amount of reward\\]"
            ]
          },
          {
            "Name": "RoundInflationSet",
            "TypeFields": [
              {
                "TypeName": "Perquintill",
                "TypeId": 37
              },
              {
                "TypeName": "Perquintill",
                "TypeId": 37
              },
              {
                "TypeName": "Perquintill",
                "TypeId": 37
              },
              {
                "TypeName": "Perquintill",
                "TypeId": 37
              }
            ],
            "Index": 18,
            "Docs": [
              "Inflation configuration for future validation rounds has changed.",
              "\\[maximum collator's staking rate, maximum collator's reward rate,",
              "maximum delegator's staking rate, maximum delegator's reward rate\\]"
            ]
          },
          {
            "Name": "MaxSelectedCandidatesSet",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 19,
            "Docs": [
              "The maximum number of collator candidates selected in future",
              "validation rounds has changed. \\[old value, new value\\]"
            ]
          },
          {
            "Name": "BlocksPerRoundSet",
            "TypeFields": [
              {
                "TypeName": "SessionIndex",
                "TypeId": 8
              },
              {
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 20,
            "Docs": [
              "The length in blocks for future validation rounds has changed.",
              "\\[round number, first block in the current round, old value, new",
              "value\\]"
            ]
          }
        ],
        "Path": [
          "parachain_staking",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "37": {
        "TypeFields": [
          {
            "TypeName": "u64",
            "TypeId": 4
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Perquintill"
        ],
        "TypeDef": "Composite"
      },
      "38": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "PropIndex",
                "TypeId": 8
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion has been proposed by a public account."
            ]
          },
          {
            "Name": "Tabled",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "PropIndex",
                "TypeId": 8
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "A public proposal has been tabled for referendum vote."
            ]
          },
          {
            "Name": "ExternalTabled",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "An external proposal has been tabled."
            ]
          },
          {
            "Name": "Started",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              },
              {
                "Name": "threshold",
                "TypeName": "VoteThreshold",
                "TypeId": 39
              }
            ],
            "Index": 3,
            "Docs": [
              "A referendum has begun."
            ]
          },
          {
            "Name": "Passed",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              }
            ],
            "Index": 4,
            "Docs": [
              "A proposal has been approved by referendum."
            ]
          },
          {
            "Name": "NotPassed",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              }
            ],
            "Index": 5,
            "Docs": [
              "A proposal has been rejected by referendum."
            ]
          },
          {
            "Name": "Cancelled",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              }
            ],
            "Index": 6,
            "Docs": [
              "A referendum has been cancelled."
            ]
          },
          {
            "Name": "Delegated",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "target",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "An account has delegated their vote to another account."
            ]
          },
          {
            "Name": "Undelegated",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 8,
            "Docs": [
              "An account has cancelled a previous delegation operation."
            ]
          },
          {
            "Name": "Vetoed",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "until",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "An external proposal has been vetoed."
            ]
          },
          {
            "Name": "Blacklisted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 10,
            "Docs": [
              "A proposal_hash has been blacklisted permanently."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "voter",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              },
              {
                "Name": "vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 40
              }
            ],
            "Index": 11,
            "Docs": [
              "An account has voted in a referendum"
            ]
          },
          {
            "Name": "Seconded",
            "TypeFields": [
              {
                "Name": "seconder",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 8
              }
            ],
            "Index": 12,
            "Docs": [
              "An account has secconded a proposal"
            ]
          },
          {
            "Name": "ProposalCanceled",
            "TypeFields": [
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 8
              }
            ],
            "Index": 13,
            "Docs": [
              "A proposal got canceled."
            ]
          },
          {
            "Name": "MetadataSet",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 42,
                "Docs": [
                  "Metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 14,
            "Docs": [
              "Metadata for a proposal or a referendum has been set."
            ]
          },
          {
            "Name": "MetadataCleared",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 42,
                "Docs": [
                  "Metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 15,
            "Docs": [
              "Metadata for a proposal or a referendum has been cleared."
            ]
          },
          {
            "Name": "MetadataTransferred",
            "TypeFields": [
              {
                "Name": "prev_owner",
                "TypeName": "MetadataOwner",
                "TypeId": 42,
                "Docs": [
                  "Previous metadata owner."
                ]
              },
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 42,
                "Docs": [
                  "New metadata owner."
                ]
              },
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12,
                "Docs": [
                  "Preimage hash."
                ]
              }
            ],
            "Index": 16,
            "Docs": [
              "Metadata has been transferred to new owner."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "39": {
        "Variants": [
          {
            "Name": "SuperMajorityApprove",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SuperMajorityAgainst",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "SimpleMajority",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote_threshold",
          "VoteThreshold"
        ],
        "TypeDef": "Variant"
      },
      "40": {
        "Variants": [
          {
            "Name": "Standard",
            "TypeFields": [
              {
                "Name": "vote",
                "TypeName": "Vote",
                "TypeId": 41
              },
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 0
          },
          {
            "Name": "Split",
            "TypeFields": [
              {
                "Name": "aye",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "nay",
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "AccountVote"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "41": {
        "TypeFields": [
          {
            "TypeId": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "Vote"
        ],
        "TypeDef": "Composite"
      },
      "42": {
        "Variants": [
          {
            "Name": "External",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Proposal",
            "TypeFields": [
              {
                "TypeName": "PropIndex",
                "TypeId": 8
              }
            ],
            "Index": 1
          },
          {
            "Name": "Referendum",
            "TypeFields": [
              {
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "MetadataOwner"
        ],
        "TypeDef": "Variant"
      },
      "43": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 8
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion (given hash) has been proposed (by given account) with a threshold (given",
              "`MemberCount`)."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voted",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 8
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 1,
            "Docs": [
              "A motion (given hash) has been voted on by given account, leaving",
              "a tally (yes votes and no votes given respectively as `MemberCount`)."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A motion was approved by the required threshold."
            ]
          },
          {
            "Name": "Disapproved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "A motion was not approved by the required threshold."
            ]
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 4,
            "Docs": [
              "A motion was executed; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "MemberExecuted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 5,
            "Docs": [
              "A single member did some action; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "Closed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 8
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 6,
            "Docs": [
              "A proposal was closed because its threshold was reached or after its duration was up."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "44": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": [
              {
                "TypeId": 45
              }
            ],
            "Index": 0
          },
          {
            "Name": "Err",
            "TypeFields": [
              {
                "TypeId": 25
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Result"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 45
          },
          {
            "Name": "E",
            "TypeId": 25
          }
        ],
        "TypeDef": "Variant"
      },
      "45": {
        "TypeIds": [],
        "TypeDef": "Tuple"
      },
      "46": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 8
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "A motion (given hash) has been proposed (by given account) with a threshold (given",
              "`MemberCount`)."
            ]
          },
          {
            "Name": "Voted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voted",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 8
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 1,
            "Docs": [
              "A motion (given hash) has been voted on by given account, leaving",
              "a tally (yes votes and no votes given respectively as `MemberCount`)."
            ]
          },
          {
            "Name": "Approved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A motion was approved by the required threshold."
            ]
          },
          {
            "Name": "Disapproved",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "A motion was not approved by the required threshold."
            ]
          },
          {
            "Name": "Executed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 4,
            "Docs": [
              "A motion was executed; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "MemberExecuted",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 5,
            "Docs": [
              "A single member did some action; result will be `Ok` if it returned without error."
            ]
          },
          {
            "Name": "Closed",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "yes",
                "TypeName": "MemberCount",
                "TypeId": 8
              },
              {
                "Name": "no",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 6,
            "Docs": [
              "A proposal was closed because its threshold was reached or after its duration was up."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "47": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "Name": "MembersSwapped",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "Name": "MembersReset",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "Name": "Dummy",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Phantom member, never used."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "48": {
        "Variants": [
          {
            "Name": "Proposed",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "New proposal."
            ]
          },
          {
            "Name": "Spending",
            "TypeFields": [
              {
                "Name": "budget_remaining",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "We have ended a spend period and will now allocate funds."
            ]
          },
          {
            "Name": "Awarded",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 8
              },
              {
                "Name": "award",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "Some funds have been allocated."
            ]
          },
          {
            "Name": "Rejected",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 8
              },
              {
                "Name": "slashed",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "A proposal was rejected; funds were slashed."
            ]
          },
          {
            "Name": "Burnt",
            "TypeFields": [
              {
                "Name": "burnt_funds",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "Some of our funds have been burnt."
            ]
          },
          {
            "Name": "Rollover",
            "TypeFields": [
              {
                "Name": "rollover_balance",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "Spending has finished; this is the amount that rolls over until next spend."
            ]
          },
          {
            "Name": "Deposit",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "Some funds have been deposited."
            ]
          },
          {
            "Name": "SpendApproved",
            "TypeFields": [
              {
                "Name": "proposal_index",
                "TypeName": "ProposalIndex",
                "TypeId": 8
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "beneficiary",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "A new spend proposal has been approved."
            ]
          },
          {
            "Name": "UpdatedInactive",
            "TypeFields": [
              {
                "Name": "reactivated",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "deactivated",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "The inactive funds of the pallet have been updated."
            ]
          },
          {
            "Name": "AssetSpendApproved",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              },
              {
                "Name": "asset_kind",
                "TypeName": "T::AssetKind",
                "TypeId": 45
              },
              {
                "Name": "amount",
                "TypeName": "AssetBalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "beneficiary",
                "TypeName": "T::Beneficiary",
                "TypeId": 0
              },
              {
                "Name": "valid_from",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "expire_at",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "A new asset spend proposal has been approved."
            ]
          },
          {
            "Name": "AssetSpendVoided",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              }
            ],
            "Index": 10,
            "Docs": [
              "An approved spend was voided."
            ]
          },
          {
            "Name": "Paid",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              },
              {
                "Name": "payment_id",
                "TypeName": "<T::Paymaster as Pay>::Id",
                "TypeId": 45
              }
            ],
            "Index": 11,
            "Docs": [
              "A payment happened."
            ]
          },
          {
            "Name": "PaymentFailed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              },
              {
                "Name": "payment_id",
                "TypeName": "<T::Paymaster as Pay>::Id",
                "TypeId": 45
              }
            ],
            "Index": 12,
            "Docs": [
              "A payment failed and can be retried."
            ]
          },
          {
            "Name": "SpendProcessed",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              }
            ],
            "Index": 13,
            "Docs": [
              "A spend was processed and removed from the storage. It might have been successfully",
              "paid or it may have expired."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "49": {
        "Variants": [
          {
            "Name": "BatchInterrupted",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "error",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 0,
            "Docs": [
              "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
              "well as the error."
            ]
          },
          {
            "Name": "BatchCompleted",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Batch of dispatches completed fully with no error."
            ]
          },
          {
            "Name": "BatchCompletedWithErrors",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Batch of dispatches completed but has errors."
            ]
          },
          {
            "Name": "ItemCompleted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "A single item within a Batch of dispatches has completed with no error."
            ]
          },
          {
            "Name": "ItemFailed",
            "TypeFields": [
              {
                "Name": "error",
                "TypeName": "DispatchError",
                "TypeId": 25
              }
            ],
            "Index": 4,
            "Docs": [
              "A single item within a Batch of dispatches has completed with error."
            ]
          },
          {
            "Name": "DispatchedAs",
            "TypeFields": [
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 5,
            "Docs": [
              "A call was dispatched."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Event"
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "50": {
        "Variants": [
          {
            "Name": "VestingUpdated",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "unvested",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "The amount vested has been updated. This could indicate a change in funds available.",
              "The balance given is the amount which is left unvested (and thus locked)."
            ]
          },
          {
            "Name": "VestingCompleted",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "An \\[account\\] has become fully vested."
            ]
          }
        ],
        "Path": [
          "pallet_vesting",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "51": {
        "Variants": [
          {
            "Name": "Scheduled",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "Scheduled some task."
            ]
          },
          {
            "Name": "Canceled",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 1,
            "Docs": [
              "Canceled some task."
            ]
          },
          {
            "Name": "Dispatched",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 52
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 53
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 2,
            "Docs": [
              "Dispatched some task."
            ]
          },
          {
            "Name": "CallUnavailable",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 52
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 53
              }
            ],
            "Index": 3,
            "Docs": [
              "The call for the provided hash was not found so the task has been aborted."
            ]
          },
          {
            "Name": "PeriodicFailed",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 52
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 53
              }
            ],
            "Index": 4,
            "Docs": [
              "The given task was unable to be renewed since the agenda is full at that block."
            ]
          },
          {
            "Name": "PermanentlyOverweight",
            "TypeFields": [
              {
                "Name": "task",
                "TypeName": "TaskAddress<BlockNumberFor<T>>",
                "TypeId": 52
              },
              {
                "Name": "id",
                "TypeName": "Option<TaskName>",
                "TypeId": 53
              }
            ],
            "Index": 5,
            "Docs": [
              "The given task can never be executed since it is overweight."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Events type."
        ]
      },
      "52": {
        "TypeIds": [
          4,
          8
        ],
        "TypeDef": "Tuple"
      },
      "53": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 1
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 1
          }
        ],
        "TypeDef": "Variant"
      },
      "54": {
        "Variants": [
          {
            "Name": "ProxyExecuted",
            "TypeFields": [
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 0,
            "Docs": [
              "A proxy was executed correctly, with the given."
            ]
          },
          {
            "Name": "PureCreated",
            "TypeFields": [
              {
                "Name": "pure",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 55
              },
              {
                "Name": "disambiguation_index",
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "A pure account has been created by new proxy with given",
              "disambiguation index and proxy type."
            ]
          },
          {
            "Name": "Announced",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "An announcement was placed to make a call in the future."
            ]
          },
          {
            "Name": "ProxyAdded",
            "TypeFields": [
              {
                "Name": "delegator",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "delegatee",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 55
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "A proxy was added."
            ]
          },
          {
            "Name": "ProxyRemoved",
            "TypeFields": [
              {
                "Name": "delegator",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "delegatee",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 55
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "A proxy was removed."
            ]
          }
        ],
        "Path": [
          "pallet_proxy",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "55": {
        "Variants": [
          {
            "Name": "Any",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonTransfer",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Governance",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "ParachainStaking",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "CancelProxy",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "NonDepositClaiming",
            "TypeFields": null,
            "Index": 5
          }
        ],
        "Path": [
          "spiritnet_runtime",
          "ProxyType"
        ],
        "TypeDef": "Variant"
      },
      "56": {
        "Primitive": "U16",
        "TypeDef": "Primitive"
      },
      "57": {
        "Variants": [
          {
            "Name": "Noted",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "A preimage has been noted."
            ]
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "A preimage has been requested."
            ]
          },
          {
            "Name": "Cleared",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A preimage has ben cleared."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "58": {
        "Variants": [
          {
            "Name": "MemberAdded",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The given member was added; see the transaction for who."
            ]
          },
          {
            "Name": "MemberRemoved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The given member was removed; see the transaction for who."
            ]
          },
          {
            "Name": "MembersSwapped",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Two members were swapped; see the transaction for who."
            ]
          },
          {
            "Name": "MembersReset",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The membership was reset; see the transaction for who the new set is."
            ]
          },
          {
            "Name": "KeyChanged",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One of the members' keys changed."
            ]
          },
          {
            "Name": "Dummy",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Phantom member, never used."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "59": {
        "Variants": [
          {
            "Name": "NewTip",
            "TypeFields": [
              {
                "Name": "tip_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "A new tip suggestion has been opened."
            ]
          },
          {
            "Name": "TipClosing",
            "TypeFields": [
              {
                "Name": "tip_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "A tip suggestion has reached threshold and is closing."
            ]
          },
          {
            "Name": "TipClosed",
            "TypeFields": [
              {
                "Name": "tip_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "payout",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "A tip suggestion has been closed."
            ]
          },
          {
            "Name": "TipRetracted",
            "TypeFields": [
              {
                "Name": "tip_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "A tip suggestion has been retracted."
            ]
          },
          {
            "Name": "TipSlashed",
            "TypeFields": [
              {
                "Name": "tip_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "finder",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "deposit",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "A tip suggestion has been slashed."
            ]
          }
        ],
        "Path": [
          "pallet_tips",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "60": {
        "Variants": [
          {
            "Name": "NewMultisig",
            "TypeFields": [
              {
                "Name": "approving",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "A new multisig operation has begun."
            ]
          },
          {
            "Name": "MultisigApproval",
            "TypeFields": [
              {
                "Name": "approving",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 61
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "A multisig operation has been approved by someone."
            ]
          },
          {
            "Name": "MultisigExecuted",
            "TypeFields": [
              {
                "Name": "approving",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 61
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              },
              {
                "Name": "result",
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 2,
            "Docs": [
              "A multisig operation has been executed."
            ]
          },
          {
            "Name": "MultisigCancelled",
            "TypeFields": [
              {
                "Name": "cancelling",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 61
              },
              {
                "Name": "multisig",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHash",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "A multisig operation has been cancelled."
            ]
          }
        ],
        "Path": [
          "pallet_multisig",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "61": {
        "TypeFields": [
          {
            "Name": "height",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "index",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "pallet_multisig",
          "Timepoint"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "62": {
        "Variants": [
          {
            "Name": "SwitchPairCreated",
            "TypeFields": [
              {
                "Name": "remote_asset_circulating_supply",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "remote_asset_ed",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "pool_account",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "remote_asset_id",
                "TypeName": "VersionedAssetId",
                "TypeId": 63
              },
              {
                "Name": "remote_reserve_location",
                "TypeName": "VersionedLocation",
                "TypeId": 89
              },
              {
                "Name": "remote_xcm_fee",
                "TypeName": "Box<VersionedAsset>",
                "TypeId": 97
              },
              {
                "Name": "remote_asset_total_supply",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "A new switch pair is created."
            ]
          },
          {
            "Name": "SwitchPairRemoved",
            "TypeFields": [
              {
                "Name": "remote_asset_id",
                "TypeName": "VersionedAssetId",
                "TypeId": 63
              }
            ],
            "Index": 1,
            "Docs": [
              "A switch pair is removed."
            ]
          },
          {
            "Name": "SwitchPairResumed",
            "TypeFields": [
              {
                "Name": "remote_asset_id",
                "TypeName": "VersionedAssetId",
                "TypeId": 63
              }
            ],
            "Index": 2,
            "Docs": [
              "A switch pair has enabled switches."
            ]
          },
          {
            "Name": "SwitchPairPaused",
            "TypeFields": [
              {
                "Name": "remote_asset_id",
                "TypeName": "VersionedAssetId",
                "TypeId": 63
              }
            ],
            "Index": 3,
            "Docs": [
              "A switch pair has suspended switches."
            ]
          },
          {
            "Name": "SwitchPairFeeUpdated",
            "TypeFields": [
              {
                "Name": "old",
                "TypeName": "VersionedAsset",
                "TypeId": 97
              },
              {
                "Name": "new",
                "TypeName": "VersionedAsset",
                "TypeId": 97
              }
            ],
            "Index": 4,
            "Docs": [
              "The XCM fee for the switch has been updated."
            ]
          },
          {
            "Name": "LocalToRemoteSwitchExecuted",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "VersionedLocation",
                "TypeId": 89
              },
              {
                "Name": "amount",
                "TypeName": "LocalCurrencyBalanceOf<T, I>",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "A switch of local -> remote asset has taken place."
            ]
          },
          {
            "Name": "RemoteToLocalSwitchExecuted",
            "TypeFields": [
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "A switch of remote -> local asset has taken place."
            ]
          },
          {
            "Name": "LocalToRemoteSwitchReverted",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "VersionedLocation",
                "TypeId": 89
              },
              {
                "Name": "amount",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 7,
            "Docs": [
              "A switch has been reversed because it failed to execute at",
              "destination."
            ]
          },
          {
            "Name": "LocalToRemoteSwitchFinalized",
            "TypeFields": [
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "VersionedLocation",
                "TypeId": 89
              },
              {
                "Name": "amount",
                "TypeName": "u128",
                "TypeId": 6
              }
            ],
            "Index": 8,
            "Docs": [
              "A switch has been finalized at destination."
            ]
          }
        ],
        "Path": [
          "pallet_asset_switch",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "63": {
        "Variants": [
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::AssetId",
                "TypeId": 64
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::AssetId",
                "TypeId": 75
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedAssetId"
        ],
        "TypeDef": "Variant"
      },
      "64": {
        "Variants": [
          {
            "Name": "Concrete",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 0
          },
          {
            "Name": "Abstract",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "AssetId"
        ],
        "TypeDef": "Variant"
      },
      "65": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 66
          }
        ],
        "Path": [
          "staging_xcm",
          "v3",
          "multilocation",
          "MultiLocation"
        ],
        "TypeDef": "Composite"
      },
      "66": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              },
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junctions",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "67": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 69
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 69
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 69
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 71
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "Name": "length",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "data",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 73
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 74
              }
            ],
            "Index": 8
          },
          {
            "Name": "GlobalConsensus",
            "TypeFields": [
              {
                "TypeName": "NetworkId",
                "TypeId": 70
              }
            ],
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "68": {
        "TypeId": 8,
        "TypeDef": "Compact"
      },
      "69": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 70
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 70
          }
        ],
        "TypeDef": "Variant"
      },
      "70": {
        "Variants": [
          {
            "Name": "ByGenesis",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0
          },
          {
            "Name": "ByFork",
            "TypeFields": [
              {
                "Name": "block_number",
                "TypeName": "u64",
                "TypeId": 4
              },
              {
                "Name": "block_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Westend",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Rococo",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Wococo",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "Name": "chain_id",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 7
          },
          {
            "Name": "BitcoinCore",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "BitcoinCash",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "PolkadotBulletin",
            "TypeFields": null,
            "Index": 10
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "71": {
        "Length": 20,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "72": {
        "TypeId": 6,
        "TypeDef": "Compact"
      },
      "73": {
        "Variants": [
          {
            "Name": "Unit",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Moniker",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 1
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2
          },
          {
            "Name": "Executive",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Technical",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Legislative",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Judicial",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Defense",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Administration",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Treasury",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "BodyId"
        ],
        "TypeDef": "Variant"
      },
      "74": {
        "Variants": [
          {
            "Name": "Voice",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Members",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 1
          },
          {
            "Name": "Fraction",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2
          },
          {
            "Name": "AtLeastProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 3
          },
          {
            "Name": "MoreThanProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "junction",
          "BodyPart"
        ],
        "TypeDef": "Variant"
      },
      "75": {
        "TypeFields": [
          {
            "TypeName": "Location",
            "TypeId": 76
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "AssetId"
        ],
        "TypeDef": "Composite"
      },
      "76": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 77
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "location",
          "Location"
        ],
        "TypeDef": "Composite"
      },
      "77": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 1]>",
                "TypeId": 78
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 2]>",
                "TypeId": 82
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 3]>",
                "TypeId": 83
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 4]>",
                "TypeId": 84
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 5]>",
                "TypeId": 85
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 6]>",
                "TypeId": 86
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 7]>",
                "TypeId": 87
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Arc<[Junction; 8]>",
                "TypeId": 88
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "junctions",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "78": {
        "Length": 1,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "79": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 80
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 80
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "Option<NetworkId>",
                "TypeId": 80
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 71
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "Name": "length",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "data",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 73
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 74
              }
            ],
            "Index": 8
          },
          {
            "Name": "GlobalConsensus",
            "TypeFields": [
              {
                "TypeName": "NetworkId",
                "TypeId": 81
              }
            ],
            "Index": 9
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "80": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 81
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 81
          }
        ],
        "TypeDef": "Variant"
      },
      "81": {
        "Variants": [
          {
            "Name": "ByGenesis",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0
          },
          {
            "Name": "ByFork",
            "TypeFields": [
              {
                "Name": "block_number",
                "TypeName": "u64",
                "TypeId": 4
              },
              {
                "Name": "block_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Westend",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Rococo",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Wococo",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "Name": "chain_id",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 7
          },
          {
            "Name": "BitcoinCore",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "BitcoinCash",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "PolkadotBulletin",
            "TypeFields": null,
            "Index": 10
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "junction",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "82": {
        "Length": 2,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "83": {
        "Length": 3,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "84": {
        "Length": 4,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "85": {
        "Length": 5,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "86": {
        "Length": 6,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "87": {
        "Length": 7,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "88": {
        "Length": 8,
        "TypeId": 79,
        "TypeDef": "Array"
      },
      "89": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Location",
                "TypeId": 76
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedLocation"
        ],
        "TypeDef": "Variant"
      },
      "90": {
        "TypeFields": [
          {
            "Name": "parents",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "interior",
            "TypeName": "Junctions",
            "TypeId": 91
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multilocation",
          "MultiLocation"
        ],
        "TypeDef": "Composite"
      },
      "91": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "X1",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 1
          },
          {
            "Name": "X2",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 2
          },
          {
            "Name": "X3",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 3
          },
          {
            "Name": "X4",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 4
          },
          {
            "Name": "X5",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 5
          },
          {
            "Name": "X6",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 6
          },
          {
            "Name": "X7",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 7
          },
          {
            "Name": "X8",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              },
              {
                "TypeName": "Junction",
                "TypeId": 92
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multilocation",
          "Junctions"
        ],
        "TypeDef": "Variant"
      },
      "92": {
        "Variants": [
          {
            "Name": "Parachain",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 93
              },
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1
          },
          {
            "Name": "AccountIndex64",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 93
              },
              {
                "Name": "index",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 2
          },
          {
            "Name": "AccountKey20",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 93
              },
              {
                "Name": "key",
                "TypeName": "[u8; 20]",
                "TypeId": 71
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletInstance",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "GeneralIndex",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 5
          },
          {
            "Name": "GeneralKey",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 94
              }
            ],
            "Index": 6
          },
          {
            "Name": "OnlyChild",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Plurality",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "BodyId",
                "TypeId": 95
              },
              {
                "Name": "part",
                "TypeName": "BodyPart",
                "TypeId": 96
              }
            ],
            "Index": 8
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "junction",
          "Junction"
        ],
        "TypeDef": "Variant"
      },
      "93": {
        "Variants": [
          {
            "Name": "Any",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Named",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 94
              }
            ],
            "Index": 1
          },
          {
            "Name": "Polkadot",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Kusama",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "NetworkId"
        ],
        "TypeDef": "Variant"
      },
      "94": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "weak_bounded_vec",
          "WeakBoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "95": {
        "Variants": [
          {
            "Name": "Unit",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Named",
            "TypeFields": [
              {
                "TypeName": "WeakBoundedVec<u8, ConstU32<32>>",
                "TypeId": 94
              }
            ],
            "Index": 1
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2
          },
          {
            "Name": "Executive",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Technical",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Legislative",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Judicial",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "Defense",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "Administration",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "Treasury",
            "TypeFields": null,
            "Index": 9
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "BodyId"
        ],
        "TypeDef": "Variant"
      },
      "96": {
        "Variants": [
          {
            "Name": "Voice",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Members",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 1
          },
          {
            "Name": "Fraction",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2
          },
          {
            "Name": "AtLeastProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 3
          },
          {
            "Name": "MoreThanProportion",
            "TypeFields": [
              {
                "Name": "nom",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "denom",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "BodyPart"
        ],
        "TypeDef": "Variant"
      },
      "97": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiAsset",
                "TypeId": 98
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiAsset",
                "TypeId": 104
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Asset",
                "TypeId": 107
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedAsset"
        ],
        "TypeDef": "Variant"
      },
      "98": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 99
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 100
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAsset"
        ],
        "TypeDef": "Composite"
      },
      "99": {
        "Variants": [
          {
            "Name": "Concrete",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 0
          },
          {
            "Name": "Abstract",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "AssetId"
        ],
        "TypeDef": "Variant"
      },
      "100": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 101
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "101": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 102
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 103
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          },
          {
            "Name": "Blob",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 6
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "102": {
        "Length": 8,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "103": {
        "Length": 16,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "104": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 64
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 105
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAsset"
        ],
        "TypeDef": "Composite"
      },
      "105": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 106
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "106": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 102
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 103
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "107": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AssetId",
            "TypeId": 75
          },
          {
            "Name": "fun",
            "TypeName": "Fungibility",
            "TypeId": 108
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "Asset"
        ],
        "TypeDef": "Composite"
      },
      "108": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": [
              {
                "TypeName": "AssetInstance",
                "TypeId": 109
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "Fungibility"
        ],
        "TypeDef": "Variant"
      },
      "109": {
        "Variants": [
          {
            "Name": "Undefined",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "u128",
                "TypeId": 72
              }
            ],
            "Index": 1
          },
          {
            "Name": "Array4",
            "TypeFields": [
              {
                "TypeName": "[u8; 4]",
                "TypeId": 17
              }
            ],
            "Index": 2
          },
          {
            "Name": "Array8",
            "TypeFields": [
              {
                "TypeName": "[u8; 8]",
                "TypeId": 102
              }
            ],
            "Index": 3
          },
          {
            "Name": "Array16",
            "TypeFields": [
              {
                "TypeName": "[u8; 16]",
                "TypeId": 103
              }
            ],
            "Index": 4
          },
          {
            "Name": "Array32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "AssetInstance"
        ],
        "TypeDef": "Variant"
      },
      "110": {
        "Variants": [
          {
            "Name": "Created",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "creator",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "Some asset class was created."
            ]
          },
          {
            "Name": "Issued",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 1,
            "Docs": [
              "Some assets were issued."
            ]
          },
          {
            "Name": "Transferred",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "from",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "to",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 2,
            "Docs": [
              "Some assets were transferred."
            ]
          },
          {
            "Name": "Burned",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "balance",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 3,
            "Docs": [
              "Some assets were destroyed."
            ]
          },
          {
            "Name": "TeamChanged",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "issuer",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "admin",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "freezer",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 4,
            "Docs": [
              "The management team changed."
            ]
          },
          {
            "Name": "OwnerChanged",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 5,
            "Docs": [
              "The owner changed."
            ]
          },
          {
            "Name": "Frozen",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 6,
            "Docs": [
              "Some account `who` was frozen."
            ]
          },
          {
            "Name": "Thawed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 7,
            "Docs": [
              "Some account `who` was thawed."
            ]
          },
          {
            "Name": "AssetFrozen",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              }
            ],
            "Index": 8,
            "Docs": [
              "Some asset `asset_id` was frozen."
            ]
          },
          {
            "Name": "AssetThawed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              }
            ],
            "Index": 9,
            "Docs": [
              "Some asset `asset_id` was thawed."
            ]
          },
          {
            "Name": "AccountsDestroyed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "accounts_destroyed",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "accounts_remaining",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 10,
            "Docs": [
              "Accounts were destroyed for given asset."
            ]
          },
          {
            "Name": "ApprovalsDestroyed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "approvals_destroyed",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "approvals_remaining",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 11,
            "Docs": [
              "Approvals were destroyed for given asset."
            ]
          },
          {
            "Name": "DestructionStarted",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              }
            ],
            "Index": 12,
            "Docs": [
              "An asset class is in the process of being destroyed."
            ]
          },
          {
            "Name": "Destroyed",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              }
            ],
            "Index": 13,
            "Docs": [
              "An asset class was destroyed."
            ]
          },
          {
            "Name": "ForceCreated",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 14,
            "Docs": [
              "Some asset class was force-created."
            ]
          },
          {
            "Name": "MetadataSet",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "symbol",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "decimals",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "is_frozen",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15,
            "Docs": [
              "New metadata has been set for an asset."
            ]
          },
          {
            "Name": "MetadataCleared",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              }
            ],
            "Index": 16,
            "Docs": [
              "Metadata has been cleared for an asset."
            ]
          },
          {
            "Name": "ApprovedTransfer",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "source",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "delegate",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 17,
            "Docs": [
              "(Additional) funds have been approved for transfer to a destination account."
            ]
          },
          {
            "Name": "ApprovalCancelled",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "delegate",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 18,
            "Docs": [
              "An approval for account `delegate` was cancelled by `owner`."
            ]
          },
          {
            "Name": "TransferredApproved",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "delegate",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "destination",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 19,
            "Docs": [
              "An `amount` was transferred in its entirety from `owner` to `destination` by",
              "the approved `delegate`."
            ]
          },
          {
            "Name": "AssetStatusChanged",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              }
            ],
            "Index": 20,
            "Docs": [
              "An asset has had its attributes changed by the `Force` origin."
            ]
          },
          {
            "Name": "AssetMinBalanceChanged",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "new_min_balance",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 21,
            "Docs": [
              "The min_balance of an asset has been updated by the asset owner."
            ]
          },
          {
            "Name": "Touched",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              },
              {
                "Name": "depositor",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 22,
            "Docs": [
              "Some account `who` was created with a deposit from `depositor`."
            ]
          },
          {
            "Name": "Blocked",
            "TypeFields": [
              {
                "Name": "asset_id",
                "TypeName": "T::AssetId",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "T::AccountId",
                "TypeId": 0
              }
            ],
            "Index": 23,
            "Docs": [
              "Some account `who` was blocked."
            ]
          }
        ],
        "Path": [
          "pallet_assets",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "111": {
        "Variants": [
          {
            "Name": "CTypeCreated",
            "TypeFields": [
              {
                "TypeName": "CtypeCreatorOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "CtypeHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "A new CType has been created.",
              "\\[creator identifier, CType hash\\]"
            ]
          },
          {
            "Name": "CTypeUpdated",
            "TypeFields": [
              {
                "TypeName": "CtypeHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "Information about a CType has been updated.",
              "\\[CType hash\\]"
            ]
          }
        ],
        "Path": [
          "ctype",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "112": {
        "Variants": [
          {
            "Name": "AttestationCreated",
            "TypeFields": [
              {
                "TypeName": "AttesterOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              },
              {
                "TypeName": "CtypeHashOf<T>",
                "TypeId": 12
              },
              {
                "TypeName": "Option<AuthorizationIdOf<T>>",
                "TypeId": 113
              }
            ],
            "Index": 0,
            "Docs": [
              "A new attestation has been created.",
              "\\[attester ID, claim hash, CType hash, (optional) delegation ID\\]"
            ]
          },
          {
            "Name": "AttestationRevoked",
            "TypeFields": [
              {
                "TypeName": "AttesterOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "An attestation has been revoked.",
              "\\[account id, claim hash\\]"
            ]
          },
          {
            "Name": "AttestationRemoved",
            "TypeFields": [
              {
                "TypeName": "AttesterOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "An attestation has been removed.",
              "\\[account id, claim hash\\]"
            ]
          },
          {
            "Name": "DepositReclaimed",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "The deposit owner reclaimed a deposit by removing an attestation.",
              "\\[account id, claim hash\\]"
            ]
          }
        ],
        "Path": [
          "attestation",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "113": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 114
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 114
          }
        ],
        "TypeDef": "Variant"
      },
      "114": {
        "Variants": [
          {
            "Name": "Delegation",
            "TypeFields": [
              {
                "TypeName": "DelegationId",
                "TypeId": 12
              }
            ],
            "Index": 0
          }
        ],
        "Path": [
          "runtime_common",
          "authorization",
          "AuthorizationId"
        ],
        "TypeParams": [
          {
            "Name": "DelegationId",
            "TypeId": 12
          }
        ],
        "TypeDef": "Variant"
      },
      "115": {
        "Variants": [
          {
            "Name": "HierarchyCreated",
            "TypeFields": [
              {
                "TypeName": "DelegatorIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "TypeName": "CtypeHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "A new hierarchy has been created.",
              "\\[creator ID, root node ID, CTYPE hash\\]"
            ]
          },
          {
            "Name": "HierarchyRevoked",
            "TypeFields": [
              {
                "TypeName": "DelegatorIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "A hierarchy has been revoked.",
              "\\[revoker ID, root node ID\\]"
            ]
          },
          {
            "Name": "HierarchyRemoved",
            "TypeFields": [
              {
                "TypeName": "DelegatorIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "A hierarchy has been removed from the storage on chain.",
              "\\[remover ID, root node ID\\]"
            ]
          },
          {
            "Name": "DelegationCreated",
            "TypeFields": [
              {
                "TypeName": "DelegatorIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "TypeName": "DelegatorIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "Permissions",
                "TypeId": 116
              }
            ],
            "Index": 3,
            "Docs": [
              "A new delegation has been created.",
              "\\[creator ID, root node ID, delegation node ID, parent node ID,",
              "delegate ID, permissions\\]"
            ]
          },
          {
            "Name": "DelegationRevoked",
            "TypeFields": [
              {
                "TypeName": "DelegatorIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 4,
            "Docs": [
              "A delegation has been revoked.",
              "\\[revoker ID, delegation node ID\\]"
            ]
          },
          {
            "Name": "DelegationRemoved",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "A delegation has been removed.",
              "\\[remover ID, delegation node ID\\]"
            ]
          },
          {
            "Name": "DepositReclaimed",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 6,
            "Docs": [
              "The deposit owner reclaimed a deposit by removing a delegation",
              "subtree. \\[revoker ID, delegation node ID\\]"
            ]
          }
        ],
        "Path": [
          "delegation",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "116": {
        "TypeFields": [
          {
            "Name": "bits",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "delegation",
          "delegation_hierarchy",
          "Permissions"
        ],
        "TypeDef": "Composite"
      },
      "117": {
        "Variants": [
          {
            "Name": "DidCreated",
            "TypeFields": [
              {
                "TypeName": "AccountIdOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "A new DID has been created.",
              "\\[transaction signer, DID identifier\\]"
            ]
          },
          {
            "Name": "DidUpdated",
            "TypeFields": [
              {
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "A DID has been updated.",
              "\\[DID identifier\\]"
            ]
          },
          {
            "Name": "DidDeleted",
            "TypeFields": [
              {
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 2,
            "Docs": [
              "A DID has been deleted.",
              "\\[DID identifier\\]"
            ]
          },
          {
            "Name": "DidCallDispatched",
            "TypeFields": [
              {
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              },
              {
                "TypeName": "DispatchResult",
                "TypeId": 44
              }
            ],
            "Index": 3,
            "Docs": [
              "A DID-authorised call has been executed.",
              "\\[DID caller, dispatch result\\]"
            ]
          }
        ],
        "Path": [
          "did",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "118": {
        "Variants": [
          {
            "Name": "AssociationEstablished",
            "TypeFields": [
              {
                "TypeName": "LinkableAccountId",
                "TypeId": 119
              },
              {
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 0,
            "Docs": [
              "A new association between a DID and an account ID was created."
            ]
          },
          {
            "Name": "AssociationRemoved",
            "TypeFields": [
              {
                "TypeName": "LinkableAccountId",
                "TypeId": 119
              },
              {
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 1,
            "Docs": [
              "An association between a DID and an account ID was removed."
            ]
          },
          {
            "Name": "MigrationProgress",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "There was some progress in the migration process."
            ]
          },
          {
            "Name": "MigrationCompleted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "All AccountIds have been migrated to LinkableAccountId."
            ]
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "119": {
        "Variants": [
          {
            "Name": "AccountId20",
            "TypeFields": [
              {
                "TypeName": "AccountId20",
                "TypeId": 120
              }
            ],
            "Index": 0
          },
          {
            "Name": "AccountId32",
            "TypeFields": [
              {
                "TypeName": "AccountId32",
                "TypeId": 0
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "linkable_account",
          "LinkableAccountId"
        ],
        "TypeDef": "Variant"
      },
      "120": {
        "TypeFields": [
          {
            "TypeName": "[u8; 20]",
            "TypeId": 71
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "account",
          "AccountId20"
        ],
        "TypeDef": "Composite"
      },
      "121": {
        "Variants": [
          {
            "Name": "Web3NameClaimed",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "Web3NameOwnerOf<T>",
                "TypeId": 0
              },
              {
                "Name": "name",
                "TypeName": "Web3NameOf<T>",
                "TypeId": 122
              }
            ],
            "Index": 0,
            "Docs": [
              "A new name has been claimed."
            ]
          },
          {
            "Name": "Web3NameReleased",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "Web3NameOwnerOf<T>",
                "TypeId": 0
              },
              {
                "Name": "name",
                "TypeName": "Web3NameOf<T>",
                "TypeId": 122
              }
            ],
            "Index": 1,
            "Docs": [
              "A name has been released."
            ]
          },
          {
            "Name": "Web3NameBanned",
            "TypeFields": [
              {
                "Name": "name",
                "TypeName": "Web3NameOf<T>",
                "TypeId": 122
              }
            ],
            "Index": 2,
            "Docs": [
              "A name has been banned."
            ]
          },
          {
            "Name": "Web3NameUnbanned",
            "TypeFields": [
              {
                "Name": "name",
                "TypeName": "Web3NameOf<T>",
                "TypeId": 122
              }
            ],
            "Index": 3,
            "Docs": [
              "A name has been unbanned."
            ]
          }
        ],
        "Path": [
          "pallet_web3_names",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "122": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, T::MaxNameLength>",
            "TypeId": 123
          }
        ],
        "Path": [
          "pallet_web3_names",
          "web3_name",
          "AsciiWeb3Name"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "123": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "124": {
        "Variants": [
          {
            "Name": "CredentialStored",
            "TypeFields": [
              {
                "Name": "subject_id",
                "TypeName": "T::SubjectId",
                "TypeId": 125,
                "Docs": [
                  "The subject of the new credential."
                ]
              },
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12,
                "Docs": [
                  "The id of the new credential."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "A new public credential has been issued."
            ]
          },
          {
            "Name": "CredentialRemoved",
            "TypeFields": [
              {
                "Name": "subject_id",
                "TypeName": "T::SubjectId",
                "TypeId": 125,
                "Docs": [
                  "The subject of the removed credential."
                ]
              },
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12,
                "Docs": [
                  "The id of the removed credential."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "A public credentials has been removed."
            ]
          },
          {
            "Name": "CredentialRevoked",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12,
                "Docs": [
                  "The id of the revoked credential."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "A public credential has been revoked."
            ]
          },
          {
            "Name": "CredentialUnrevoked",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12,
                "Docs": [
                  "The id of the unrevoked credential."
                ]
              }
            ],
            "Index": 3,
            "Docs": [
              "A public credential has been unrevoked."
            ]
          }
        ],
        "Path": [
          "public_credentials",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The events generated by this pallet."
        ]
      },
      "125": {
        "TypeFields": [
          {
            "TypeName": "AssetIdentifier",
            "TypeId": 126
          }
        ],
        "Path": [
          "runtime_common",
          "assets",
          "AssetDid"
        ],
        "TypeDef": "Composite"
      },
      "126": {
        "TypeFields": [
          {
            "Name": "chain_id",
            "TypeName": "ChainId",
            "TypeId": 127
          },
          {
            "Name": "asset_id",
            "TypeName": "AssetId",
            "TypeId": 136
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "v1",
          "AssetDid"
        ],
        "TypeDef": "Composite"
      },
      "127": {
        "Variants": [
          {
            "Name": "Eip155",
            "TypeFields": [
              {
                "TypeName": "Eip155Reference",
                "TypeId": 128
              }
            ],
            "Index": 0
          },
          {
            "Name": "Bip122",
            "TypeFields": [
              {
                "TypeName": "GenesisHexHash32Reference",
                "TypeId": 129
              }
            ],
            "Index": 1
          },
          {
            "Name": "Dotsama",
            "TypeFields": [
              {
                "TypeName": "GenesisHexHash32Reference",
                "TypeId": 129
              }
            ],
            "Index": 2
          },
          {
            "Name": "Solana",
            "TypeFields": [
              {
                "TypeName": "GenesisBase58Hash32Reference",
                "TypeId": 130
              }
            ],
            "Index": 3
          },
          {
            "Name": "Generic",
            "TypeFields": [
              {
                "TypeName": "GenericChainId",
                "TypeId": 132
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "chain",
          "v1",
          "ChainId"
        ],
        "TypeDef": "Variant"
      },
      "128": {
        "TypeFields": [
          {
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "chain",
          "v1",
          "Eip155Reference"
        ],
        "TypeDef": "Composite"
      },
      "129": {
        "TypeFields": [
          {
            "TypeName": "[u8; 16]",
            "TypeId": 103
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "chain",
          "v1",
          "GenesisHexHash32Reference"
        ],
        "TypeDef": "Composite"
      },
      "130": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, ConstU32<32>>",
            "TypeId": 131
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "chain",
          "v1",
          "GenesisBase58Hash32Reference"
        ],
        "TypeDef": "Composite"
      },
      "131": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "132": {
        "TypeFields": [
          {
            "Name": "namespace",
            "TypeName": "GenericChainNamespace",
            "TypeId": 133
          },
          {
            "Name": "reference",
            "TypeName": "GenericChainReference",
            "TypeId": 135
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "chain",
          "v1",
          "GenericChainId"
        ],
        "TypeDef": "Composite"
      },
      "133": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, ConstU32<MAXIMUM_CHAIN_NAMESPACE_LENGTH_U32>>",
            "TypeId": 134
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "chain",
          "v1",
          "GenericChainNamespace"
        ],
        "TypeDef": "Composite"
      },
      "134": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "135": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, ConstU32<MAXIMUM_CHAIN_REFERENCE_LENGTH_U32>>",
            "TypeId": 131
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "chain",
          "v1",
          "GenericChainReference"
        ],
        "TypeDef": "Composite"
      },
      "136": {
        "Variants": [
          {
            "Name": "Slip44",
            "TypeFields": [
              {
                "TypeName": "Slip44Reference",
                "TypeId": 137
              }
            ],
            "Index": 0
          },
          {
            "Name": "Erc20",
            "TypeFields": [
              {
                "TypeName": "EvmSmartContractFungibleReference",
                "TypeId": 140
              }
            ],
            "Index": 1
          },
          {
            "Name": "Erc721",
            "TypeFields": [
              {
                "TypeName": "EvmSmartContractNonFungibleReference",
                "TypeId": 141
              }
            ],
            "Index": 2
          },
          {
            "Name": "Erc1155",
            "TypeFields": [
              {
                "TypeName": "EvmSmartContractNonFungibleReference",
                "TypeId": 141
              }
            ],
            "Index": 3
          },
          {
            "Name": "Generic",
            "TypeFields": [
              {
                "TypeName": "GenericAssetId",
                "TypeId": 145
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "AssetId"
        ],
        "TypeDef": "Variant"
      },
      "137": {
        "TypeFields": [
          {
            "TypeName": "U256",
            "TypeId": 138
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "Slip44Reference"
        ],
        "TypeDef": "Composite"
      },
      "138": {
        "TypeFields": [
          {
            "TypeName": "[u64; 4]",
            "TypeId": 139
          }
        ],
        "Path": [
          "primitive_types",
          "U256"
        ],
        "TypeDef": "Composite"
      },
      "139": {
        "Length": 4,
        "TypeId": 4,
        "TypeDef": "Array"
      },
      "140": {
        "TypeFields": [
          {
            "TypeName": "[u8; 20]",
            "TypeId": 71
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "EvmSmartContractFungibleReference"
        ],
        "TypeDef": "Composite"
      },
      "141": {
        "TypeFields": [
          {
            "TypeName": "EvmSmartContractFungibleReference",
            "TypeId": 140
          },
          {
            "TypeName": "Option<EvmSmartContractNonFungibleIdentifier>",
            "TypeId": 142
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "EvmSmartContractNonFungibleReference"
        ],
        "TypeDef": "Composite"
      },
      "142": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 143
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 143
          }
        ],
        "TypeDef": "Variant"
      },
      "143": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, ConstU32<MAXIMUM_ASSET_IDENTIFIER_LENGTH_U32>>",
            "TypeId": 144
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "EvmSmartContractNonFungibleIdentifier"
        ],
        "TypeDef": "Composite"
      },
      "144": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "145": {
        "TypeFields": [
          {
            "Name": "namespace",
            "TypeName": "GenericAssetNamespace",
            "TypeId": 146
          },
          {
            "Name": "reference",
            "TypeName": "GenericAssetReference",
            "TypeId": 147
          },
          {
            "Name": "id",
            "TypeName": "Option<GenericAssetIdentifier>",
            "TypeId": 149
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "GenericAssetId"
        ],
        "TypeDef": "Composite"
      },
      "146": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, ConstU32<MAXIMUM_ASSET_NAMESPACE_LENGTH_U32>>",
            "TypeId": 134
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "GenericAssetNamespace"
        ],
        "TypeDef": "Composite"
      },
      "147": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, ConstU32<MAXIMUM_ASSET_REFERENCE_LENGTH_U32>>",
            "TypeId": 148
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "GenericAssetReference"
        ],
        "TypeDef": "Composite"
      },
      "148": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "149": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 150
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 150
          }
        ],
        "TypeDef": "Variant"
      },
      "150": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<u8, ConstU32<MAXIMUM_ASSET_IDENTIFIER_LENGTH_U32>>",
            "TypeId": 144
          }
        ],
        "Path": [
          "kilt_asset_dids",
          "asset",
          "v1",
          "GenericAssetIdentifier"
        ],
        "TypeDef": "Composite"
      },
      "151": {
        "Variants": [
          {
            "Name": "EntriesUpdated",
            "TypeFields": [
              {
                "TypeName": "EntriesToMigrate<T>",
                "TypeId": 152
              }
            ],
            "Index": 0
          }
        ],
        "Path": [
          "pallet_migration",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "152": {
        "TypeFields": [
          {
            "Name": "attestation",
            "TypeName": "BoundedVec<ClaimHashOf<T>,<T as Config>::MaxMigrationsPerPallet>",
            "TypeId": 154
          },
          {
            "Name": "delegation",
            "TypeName": "BoundedVec<DelegationNodeIdOf<T>,<T as Config>::\nMaxMigrationsPerPallet>",
            "TypeId": 154
          },
          {
            "Name": "did",
            "TypeName": "BoundedVec<DidIdentifierOf<T>,<T as Config>::MaxMigrationsPerPallet\n>",
            "TypeId": 156
          },
          {
            "Name": "lookup",
            "TypeName": "BoundedVec<LinkableAccountId,<T as Config>::MaxMigrationsPerPallet>",
            "TypeId": 158
          },
          {
            "Name": "w3n",
            "TypeName": "BoundedVec<Web3NameOf<T>,<T as Config>::MaxMigrationsPerPallet>",
            "TypeId": 160
          },
          {
            "Name": "public_credentials",
            "TypeName": "BoundedVec<(SubjectIdOf<T>, CredentialIdOf<T>),<T as Config>::\nMaxMigrationsPerPallet>",
            "TypeId": 162
          }
        ],
        "Path": [
          "pallet_migration",
          "pallet",
          "EntriesToMigrate"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 153
          }
        ],
        "TypeDef": "Composite"
      },
      "153": {
        "Path": [
          "spiritnet_runtime",
          "Runtime"
        ],
        "TypeDef": "Composite"
      },
      "154": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 155
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "155": {
        "TypeId": 12,
        "TypeDef": "Sequence"
      },
      "156": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 157
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "157": {
        "TypeId": 0,
        "TypeDef": "Sequence"
      },
      "158": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 159
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 119
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "159": {
        "TypeId": 119,
        "TypeDef": "Sequence"
      },
      "160": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 161
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 122
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "161": {
        "TypeId": 122,
        "TypeDef": "Sequence"
      },
      "162": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 164
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 163
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "163": {
        "TypeIds": [
          125,
          12
        ],
        "TypeDef": "Tuple"
      },
      "164": {
        "TypeId": 163,
        "TypeDef": "Sequence"
      },
      "165": {
        "Variants": [
          {
            "Name": "VersionedIdentityCommitted",
            "TypeFields": [
              {
                "Name": "identifier",
                "TypeName": "T::Identifier",
                "TypeId": 0,
                "Docs": [
                  "The identifier of the identity committed."
                ]
              },
              {
                "Name": "commitment",
                "TypeName": "IdentityCommitmentOf<T>",
                "TypeId": 12,
                "Docs": [
                  "The value of the commitment."
                ]
              },
              {
                "Name": "version",
                "TypeName": "IdentityCommitmentVersion",
                "TypeId": 56,
                "Docs": [
                  "The version of the commitment."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "A new commitment has been stored."
            ]
          },
          {
            "Name": "VersionedIdentityDeleted",
            "TypeFields": [
              {
                "Name": "identifier",
                "TypeName": "T::Identifier",
                "TypeId": 0,
                "Docs": [
                  "The identifier of the identity committed."
                ]
              },
              {
                "Name": "version",
                "TypeName": "IdentityCommitmentVersion",
                "TypeId": 56,
                "Docs": [
                  "The version of the commitment."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "A commitment has been deleted."
            ]
          }
        ],
        "Path": [
          "pallet_dip_provider",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "166": {
        "Variants": [
          {
            "Name": "DepositAdded",
            "TypeFields": [
              {
                "Name": "namespace",
                "TypeName": "T::Namespace",
                "TypeId": 167,
                "Docs": [
                  "The deposit namespace."
                ]
              },
              {
                "Name": "key",
                "TypeName": "DepositKeyOf<T>",
                "TypeId": 168,
                "Docs": [
                  "The deposit key."
                ]
              },
              {
                "Name": "deposit_entry",
                "TypeName": "DepositEntryOf<T>",
                "TypeId": 169,
                "Docs": [
                  "The deposit details."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "A new deposit has been reserved and stored."
            ]
          },
          {
            "Name": "DepositReclaimed",
            "TypeFields": [
              {
                "Name": "namespace",
                "TypeName": "T::Namespace",
                "TypeId": 167,
                "Docs": [
                  "The deposit namespace."
                ]
              },
              {
                "Name": "key",
                "TypeName": "DepositKeyOf<T>",
                "TypeId": 168,
                "Docs": [
                  "The deposit key."
                ]
              },
              {
                "Name": "deposit_entry",
                "TypeName": "DepositEntryOf<T>",
                "TypeId": 169,
                "Docs": [
                  "The deposit details."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "A deposit has been released and deleted from storage."
            ]
          }
        ],
        "Path": [
          "pallet_deposit_storage",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "167": {
        "Variants": [
          {
            "Name": "DipProvider",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "runtime_common",
          "dip",
          "deposit",
          "DepositNamespace"
        ],
        "TypeDef": "Variant"
      },
      "168": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "169": {
        "TypeFields": [
          {
            "Name": "deposit",
            "TypeName": "Deposit<AccountId, Balance>",
            "TypeId": 179
          },
          {
            "Name": "reason",
            "TypeName": "Reason",
            "TypeId": 170
          }
        ],
        "Path": [
          "pallet_deposit_storage",
          "deposit",
          "DepositEntry"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "Reason",
            "TypeId": 170
          }
        ],
        "TypeDef": "Composite"
      },
      "170": {
        "Variants": [
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "pallet_preimage::HoldReason",
                "TypeId": 171
              }
            ],
            "Index": 44
          },
          {
            "Name": "Attestation",
            "TypeFields": [
              {
                "TypeName": "attestation::HoldReason",
                "TypeId": 172
              }
            ],
            "Index": 62
          },
          {
            "Name": "Delegation",
            "TypeFields": [
              {
                "TypeName": "delegation::HoldReason",
                "TypeId": 173
              }
            ],
            "Index": 63
          },
          {
            "Name": "Did",
            "TypeFields": [
              {
                "TypeName": "did::HoldReason",
                "TypeId": 174
              }
            ],
            "Index": 64
          },
          {
            "Name": "DidLookup",
            "TypeFields": [
              {
                "TypeName": "pallet_did_lookup::HoldReason",
                "TypeId": 175
              }
            ],
            "Index": 67
          },
          {
            "Name": "Web3Names",
            "TypeFields": [
              {
                "TypeName": "pallet_web3_names::HoldReason",
                "TypeId": 176
              }
            ],
            "Index": 68
          },
          {
            "Name": "PublicCredentials",
            "TypeFields": [
              {
                "TypeName": "public_credentials::HoldReason",
                "TypeId": 177
              }
            ],
            "Index": 69
          },
          {
            "Name": "DepositStorage",
            "TypeFields": [
              {
                "TypeName": "pallet_deposit_storage::HoldReason",
                "TypeId": 178
              }
            ],
            "Index": 72
          }
        ],
        "Path": [
          "spiritnet_runtime",
          "RuntimeHoldReason"
        ],
        "TypeDef": "Variant"
      },
      "171": {
        "Variants": [
          {
            "Name": "Preimage",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "172": {
        "Variants": [
          {
            "Name": "Deposit",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "attestation",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "173": {
        "Variants": [
          {
            "Name": "Deposit",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "delegation",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "174": {
        "Variants": [
          {
            "Name": "Deposit",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "did",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "175": {
        "Variants": [
          {
            "Name": "Deposit",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "176": {
        "Variants": [
          {
            "Name": "Deposit",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_web3_names",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "177": {
        "Variants": [
          {
            "Name": "Deposit",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "public_credentials",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "178": {
        "Variants": [
          {
            "Name": "Deposit",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_deposit_storage",
          "pallet",
          "HoldReason"
        ],
        "TypeDef": "Variant"
      },
      "179": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "Account",
            "TypeId": 0
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "kilt_support",
          "deposit",
          "Deposit"
        ],
        "TypeParams": [
          {
            "Name": "Account",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "180": {
        "Variants": [
          {
            "Name": "ValidationFunctionStored",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The validation function has been scheduled to apply."
            ]
          },
          {
            "Name": "ValidationFunctionApplied",
            "TypeFields": [
              {
                "Name": "relay_chain_block_num",
                "TypeName": "RelayChainBlockNumber",
                "TypeId": 8
              }
            ],
            "Index": 1,
            "Docs": [
              "The validation function was applied as of the contained relay chain block number."
            ]
          },
          {
            "Name": "ValidationFunctionDiscarded",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The relay-chain aborted the upgrade process."
            ]
          },
          {
            "Name": "DownwardMessagesReceived",
            "TypeFields": [
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 3,
            "Docs": [
              "Some downward messages have been received and will be processed."
            ]
          },
          {
            "Name": "DownwardMessagesProcessed",
            "TypeFields": [
              {
                "Name": "weight_used",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "dmq_head",
                "TypeName": "relay_chain::Hash",
                "TypeId": 12
              }
            ],
            "Index": 4,
            "Docs": [
              "Downward messages were processed using the given weight."
            ]
          },
          {
            "Name": "UpwardMessageSent",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "Option<XcmHash>",
                "TypeId": 53
              }
            ],
            "Index": 5,
            "Docs": [
              "An upward message was sent to the relay chain."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "181": {
        "Variants": [
          {
            "Name": "XcmpMessageSent",
            "TypeFields": [
              {
                "Name": "message_hash",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "An HRMP message was sent to a sibling parachain."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "182": {
        "Variants": [
          {
            "Name": "Attempted",
            "TypeFields": [
              {
                "Name": "outcome",
                "TypeName": "xcm::latest::Outcome",
                "TypeId": 183
              }
            ],
            "Index": 0,
            "Docs": [
              "Execution of an XCM message was attempted."
            ]
          },
          {
            "Name": "Sent",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "message",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "A XCM message was sent."
            ]
          },
          {
            "Name": "UnexpectedResponse",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "Query response received which does not match a registered query. This may be because a",
              "matching query was never registered, it may be because it is a duplicate response, or",
              "because the query timed out."
            ]
          },
          {
            "Name": "ResponseReady",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 190
              }
            ],
            "Index": 3,
            "Docs": [
              "Query response has been received and is ready for taking with `take_response`. There is",
              "no registered notification call."
            ]
          },
          {
            "Name": "Notified",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 4,
            "Docs": [
              "Query response has been received and query is removed. The registered notification has",
              "been dispatched and executed successfully."
            ]
          },
          {
            "Name": "NotifyOverweight",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "actual_weight",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "max_budgeted_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 5,
            "Docs": [
              "Query response has been received and query is removed. The registered notification",
              "could not be dispatched because the dispatch weight is greater than the maximum weight",
              "originally budgeted by this runtime for the query result."
            ]
          },
          {
            "Name": "NotifyDispatchError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 6,
            "Docs": [
              "Query response has been received and query is removed. There was a general error with",
              "dispatching the notification call."
            ]
          },
          {
            "Name": "NotifyDecodeFailed",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "pallet_index",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "call_index",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 7,
            "Docs": [
              "Query response has been received and query is removed. The dispatch was unable to be",
              "decoded into a `Call`; this might be due to dispatch function having a signature which",
              "is not `(origin, QueryId, Response)`."
            ]
          },
          {
            "Name": "InvalidResponder",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "expected_location",
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 8,
            "Docs": [
              "Expected query response has been received but the origin location of the response does",
              "not match that expected. The query remains registered for a later, valid, response to",
              "be received and acted upon."
            ]
          },
          {
            "Name": "InvalidResponderVersion",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              }
            ],
            "Index": 9,
            "Docs": [
              "Expected query response has been received but the expected origin location placed in",
              "storage by this runtime previously cannot be decoded. The query remains registered.",
              "",
              "This is unexpected (since a location placed in storage in a previously executing",
              "runtime should be readable prior to query timeout) and dangerous since the possibly",
              "valid response will be dropped. Manual governance intervention is probably going to be",
              "needed."
            ]
          },
          {
            "Name": "ResponseTaken",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              }
            ],
            "Index": 10,
            "Docs": [
              "Received query response has been read and removed."
            ]
          },
          {
            "Name": "AssetsTrapped",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "assets",
                "TypeName": "VersionedAssets",
                "TypeId": 207
              }
            ],
            "Index": 11,
            "Docs": [
              "Some assets have been placed in an asset trap."
            ]
          },
          {
            "Name": "VersionChangeNotified",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "result",
                "TypeName": "XcmVersion",
                "TypeId": 8
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 12,
            "Docs": [
              "An XCM version change notification message has been attempted to be sent.",
              "",
              "The cost of sending it (borne by the chain) is included."
            ]
          },
          {
            "Name": "SupportedVersionChanged",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 8
              }
            ],
            "Index": 13,
            "Docs": [
              "The supported version of a location has been changed. This might be through an",
              "automatic notification or a manual intervention."
            ]
          },
          {
            "Name": "NotifyTargetSendFail",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "error",
                "TypeName": "XcmError",
                "TypeId": 184
              }
            ],
            "Index": 14,
            "Docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "sending the notification to it."
            ]
          },
          {
            "Name": "NotifyTargetMigrationFail",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "VersionedLocation",
                "TypeId": 89
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              }
            ],
            "Index": 15,
            "Docs": [
              "A given location which had a version change subscription was dropped owing to an error",
              "migrating the location to our new XCM format."
            ]
          },
          {
            "Name": "InvalidQuerierVersion",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              }
            ],
            "Index": 16,
            "Docs": [
              "Expected query response has been received but the expected querier location placed in",
              "storage by this runtime previously cannot be decoded. The query remains registered.",
              "",
              "This is unexpected (since a location placed in storage in a previously executing",
              "runtime should be readable prior to query timeout) and dangerous since the possibly",
              "valid response will be dropped. Manual governance intervention is probably going to be",
              "needed."
            ]
          },
          {
            "Name": "InvalidQuerier",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 4
              },
              {
                "Name": "expected_querier",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "maybe_actual_querier",
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 17,
            "Docs": [
              "Expected query response has been received but the querier location of the response does",
              "not match the expected. The query remains registered for a later, valid, response to",
              "be received and acted upon."
            ]
          },
          {
            "Name": "VersionNotifyStarted",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 18,
            "Docs": [
              "A remote has requested XCM version change notification from us and we have honored it.",
              "A version information message is sent to them and its cost is included."
            ]
          },
          {
            "Name": "VersionNotifyRequested",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 19,
            "Docs": [
              "We have requested that a remote chain send us XCM version change notifications."
            ]
          },
          {
            "Name": "VersionNotifyUnrequested",
            "TypeFields": [
              {
                "Name": "destination",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "cost",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "message_id",
                "TypeName": "XcmHash",
                "TypeId": 1
              }
            ],
            "Index": 20,
            "Docs": [
              "We have requested that a remote chain stops sending us XCM version change",
              "notifications."
            ]
          },
          {
            "Name": "FeesPaid",
            "TypeFields": [
              {
                "Name": "paying",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "fees",
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 21,
            "Docs": [
              "Fees were paid from a location for an operation (often for using `SendXcm`)."
            ]
          },
          {
            "Name": "AssetsClaimed",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H256",
                "TypeId": 12
              },
              {
                "Name": "origin",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "assets",
                "TypeName": "VersionedAssets",
                "TypeId": 207
              }
            ],
            "Index": 22,
            "Docs": [
              "Some assets have been claimed from an asset trap"
            ]
          },
          {
            "Name": "VersionMigrationFinished",
            "TypeFields": [
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 8
              }
            ],
            "Index": 23,
            "Docs": [
              "A XCM version migration finished."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "183": {
        "Variants": [
          {
            "Name": "Complete",
            "TypeFields": [
              {
                "Name": "used",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 0
          },
          {
            "Name": "Incomplete",
            "TypeFields": [
              {
                "Name": "used",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "error",
                "TypeName": "Error",
                "TypeId": 184
              }
            ],
            "Index": 1
          },
          {
            "Name": "Error",
            "TypeFields": [
              {
                "Name": "error",
                "TypeName": "Error",
                "TypeId": 184
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "traits",
          "Outcome"
        ],
        "TypeDef": "Variant"
      },
      "184": {
        "Variants": [
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unimplemented",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "UntrustedReserveLocation",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "UntrustedTeleportLocation",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "LocationFull",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "LocationNotInvertible",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "InvalidLocation",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "AssetNotFound",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "FailedToTransactAsset",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "NotWithdrawable",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "LocationCannotHold",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "ExceedsMaxMessageSize",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "DestinationUnsupported",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "Transport",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "Unroutable",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "UnknownClaim",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "FailedToDecode",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "MaxWeightInvalid",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "NotHoldingFees",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "TooExpensive",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 4
              }
            ],
            "Index": 21
          },
          {
            "Name": "ExpectationFalse",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "PalletNotFound",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "NameMismatch",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "VersionIncompatible",
            "TypeFields": null,
            "Index": 25
          },
          {
            "Name": "HoldingWouldOverflow",
            "TypeFields": null,
            "Index": 26
          },
          {
            "Name": "ExportError",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "ReanchorFailed",
            "TypeFields": null,
            "Index": 28
          },
          {
            "Name": "NoDeal",
            "TypeFields": null,
            "Index": 29
          },
          {
            "Name": "FeesNotMet",
            "TypeFields": null,
            "Index": 30
          },
          {
            "Name": "LockError",
            "TypeFields": null,
            "Index": 31
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 32
          },
          {
            "Name": "Unanchored",
            "TypeFields": null,
            "Index": 33
          },
          {
            "Name": "NotDepositable",
            "TypeFields": null,
            "Index": 34
          },
          {
            "Name": "UnhandledXcmVersion",
            "TypeFields": null,
            "Index": 35
          },
          {
            "Name": "WeightLimitReached",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 36
          },
          {
            "Name": "Barrier",
            "TypeFields": null,
            "Index": 37
          },
          {
            "Name": "WeightNotComputable",
            "TypeFields": null,
            "Index": 38
          },
          {
            "Name": "ExceedsStackLimit",
            "TypeFields": null,
            "Index": 39
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "traits",
          "Error"
        ],
        "TypeDef": "Variant"
      },
      "185": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 186
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "186": {
        "TypeId": 187,
        "TypeDef": "Sequence"
      },
      "187": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 190
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "querier",
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 200
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 201
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorLocation",
                "TypeId": 77
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "want",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "reserve",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              },
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 185
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 185
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "ticket",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 191
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 197
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 79
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 81
              },
              {
                "Name": "destination",
                "TypeName": "InteriorLocation",
                "TypeId": 77
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "unlocker",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "target",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "owner",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "locker",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "188": {
        "TypeFields": [
          {
            "TypeName": "Vec<Asset>",
            "TypeId": 189
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "Assets"
        ],
        "TypeDef": "Composite"
      },
      "189": {
        "TypeId": 107,
        "TypeDef": "Sequence"
      },
      "190": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 191
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 8
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletsInfo",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                "TypeId": 193
              }
            ],
            "Index": 4
          },
          {
            "Name": "DispatchResult",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 197
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "191": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 192
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 192
          }
        ],
        "TypeDef": "Variant"
      },
      "192": {
        "TypeIds": [
          8,
          184
        ],
        "TypeDef": "Tuple"
      },
      "193": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 196
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 194
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "194": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u32",
            "TypeId": 68
          },
          {
            "Name": "name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 195
          },
          {
            "Name": "module_name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 195
          },
          {
            "Name": "major",
            "TypeName": "u32",
            "TypeId": 68
          },
          {
            "Name": "minor",
            "TypeName": "u32",
            "TypeId": 68
          },
          {
            "Name": "patch",
            "TypeName": "u32",
            "TypeId": 68
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "PalletInfo"
        ],
        "TypeDef": "Composite"
      },
      "195": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "196": {
        "TypeId": 194,
        "TypeDef": "Sequence"
      },
      "197": {
        "Variants": [
          {
            "Name": "Success",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Error",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                "TypeId": 198
              }
            ],
            "Index": 1
          },
          {
            "Name": "TruncatedError",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                "TypeId": 198
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "MaybeErrorCode"
        ],
        "TypeDef": "Variant"
      },
      "198": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "199": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 76
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 76
          }
        ],
        "TypeDef": "Variant"
      },
      "200": {
        "Variants": [
          {
            "Name": "Native",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SovereignAccount",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Superuser",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Xcm",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "OriginKind"
        ],
        "TypeDef": "Variant"
      },
      "201": {
        "TypeFields": [
          {
            "Name": "encoded",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "xcm",
          "double_encoded",
          "DoubleEncoded"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "202": {
        "TypeFields": [
          {
            "Name": "destination",
            "TypeName": "Location",
            "TypeId": 76
          },
          {
            "Name": "query_id",
            "TypeName": "QueryId",
            "TypeId": 11
          },
          {
            "Name": "max_weight",
            "TypeName": "Weight",
            "TypeId": 10
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "QueryResponseInfo"
        ],
        "TypeDef": "Composite"
      },
      "203": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildAsset",
                "TypeId": 204
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "AssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "204": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 75
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 205
              }
            ],
            "Index": 1
          },
          {
            "Name": "AllCounted",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2
          },
          {
            "Name": "AllOfCounted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 75
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 205
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "WildAsset"
        ],
        "TypeDef": "Variant"
      },
      "205": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "asset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "206": {
        "Variants": [
          {
            "Name": "Unlimited",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Limited",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "WeightLimit"
        ],
        "TypeDef": "Variant"
      },
      "207": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 1
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Assets",
                "TypeId": 188
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedAssets"
        ],
        "TypeDef": "Variant"
      },
      "208": {
        "TypeFields": [
          {
            "TypeName": "Vec<MultiAsset>",
            "TypeId": 209
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAssets"
        ],
        "TypeDef": "Composite"
      },
      "209": {
        "TypeId": 98,
        "TypeDef": "Sequence"
      },
      "210": {
        "TypeFields": [
          {
            "TypeName": "Vec<MultiAsset>",
            "TypeId": 211
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAssets"
        ],
        "TypeDef": "Composite"
      },
      "211": {
        "TypeId": 104,
        "TypeDef": "Sequence"
      },
      "212": {
        "Variants": [
          {
            "Name": "InvalidFormat",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0,
            "Docs": [
              "Downward message is invalid XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "Name": "UnsupportedVersion",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 1,
            "Docs": [
              "Downward message is unsupported version of XCM.",
              "\\[ id \\]"
            ]
          },
          {
            "Name": "ExecutedDownward",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              },
              {
                "TypeName": "Outcome",
                "TypeId": 183
              }
            ],
            "Index": 2,
            "Docs": [
              "Downward message executed with the given outcome.",
              "\\[ id, outcome \\]"
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "213": {
        "Variants": [
          {
            "Name": "ProcessingFailed",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "H256",
                "TypeId": 12,
                "Docs": [
                  "The `blake2_256` hash of the message."
                ]
              },
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 214,
                "Docs": [
                  "The queue of the message."
                ]
              },
              {
                "Name": "error",
                "TypeName": "ProcessMessageError",
                "TypeId": 216,
                "Docs": [
                  "The error that occurred.",
                  "",
                  "This error is pretty opaque. More fine-grained errors need to be emitted as events",
                  "by the `MessageProcessor`."
                ]
              }
            ],
            "Index": 0,
            "Docs": [
              "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
            ]
          },
          {
            "Name": "Processed",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "H256",
                "TypeId": 12,
                "Docs": [
                  "The `blake2_256` hash of the message."
                ]
              },
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 214,
                "Docs": [
                  "The queue of the message."
                ]
              },
              {
                "Name": "weight_used",
                "TypeName": "Weight",
                "TypeId": 10,
                "Docs": [
                  "How much weight was used to process the message."
                ]
              },
              {
                "Name": "success",
                "TypeName": "bool",
                "TypeId": 30,
                "Docs": [
                  "Whether the message was processed.",
                  "",
                  "Note that this does not mean that the underlying `MessageProcessor` was internally",
                  "successful. It *solely* means that the MQ pallet will treat this as a success",
                  "condition and discard the message. Any internal error needs to be emitted as events",
                  "by the `MessageProcessor`."
                ]
              }
            ],
            "Index": 1,
            "Docs": [
              "Message is processed."
            ]
          },
          {
            "Name": "OverweightEnqueued",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "[u8; 32]",
                "TypeId": 1,
                "Docs": [
                  "The `blake2_256` hash of the message."
                ]
              },
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 214,
                "Docs": [
                  "The queue of the message."
                ]
              },
              {
                "Name": "page_index",
                "TypeName": "PageIndex",
                "TypeId": 8,
                "Docs": [
                  "The page of the message."
                ]
              },
              {
                "Name": "message_index",
                "TypeName": "T::Size",
                "TypeId": 8,
                "Docs": [
                  "The index of the message within the page."
                ]
              }
            ],
            "Index": 2,
            "Docs": [
              "Message placed in overweight queue."
            ]
          },
          {
            "Name": "PageReaped",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 214,
                "Docs": [
                  "The queue of the page."
                ]
              },
              {
                "Name": "index",
                "TypeName": "PageIndex",
                "TypeId": 8,
                "Docs": [
                  "The index of the page."
                ]
              }
            ],
            "Index": 3,
            "Docs": [
              "This page was reaped."
            ]
          }
        ],
        "Path": [
          "pallet_message_queue",
          "pallet",
          "Event"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Event` enum of this pallet"
        ]
      },
      "214": {
        "Variants": [
          {
            "Name": "Here",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Parent",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Sibling",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 215
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "cumulus_primitives_core",
          "AggregateMessageOrigin"
        ],
        "TypeDef": "Variant"
      },
      "215": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "polkadot_parachain_primitives",
          "primitives",
          "Id"
        ],
        "TypeDef": "Composite"
      },
      "216": {
        "Variants": [
          {
            "Name": "BadFormat",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Corrupt",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Unsupported",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Overweight",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 3
          },
          {
            "Name": "Yield",
            "TypeFields": null,
            "Index": 4
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "messages",
          "ProcessMessageError"
        ],
        "TypeDef": "Variant"
      },
      "217": {
        "Variants": [
          {
            "Name": "ApplyExtrinsic",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 0
          },
          {
            "Name": "Finalization",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Initialization",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_system",
          "Phase"
        ],
        "TypeDef": "Variant"
      },
      "218": {
        "TypeId": 52,
        "TypeDef": "Sequence"
      },
      "219": {
        "TypeFields": [
          {
            "Name": "spec_version",
            "TypeName": "codec::Compact<u32>",
            "TypeId": 68
          },
          {
            "Name": "spec_name",
            "TypeName": "sp_runtime::RuntimeString",
            "TypeId": 220
          }
        ],
        "Path": [
          "frame_system",
          "LastRuntimeUpgradeInfo"
        ],
        "TypeDef": "Composite"
      },
      "220": {
        "Primitive": "Str",
        "TypeDef": "Primitive"
      },
      "221": {
        "TypeFields": [
          {
            "Name": "code_hash",
            "TypeName": "T::Hash",
            "TypeId": 12
          },
          {
            "Name": "check_version",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "frame_system",
          "CodeUpgradeAuthorization"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "222": {
        "Variants": [
          {
            "Name": "remark",
            "TypeFields": [
              {
                "Name": "remark",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::remark`]."
            ]
          },
          {
            "Name": "set_heap_pages",
            "TypeFields": [
              {
                "Name": "pages",
                "TypeName": "u64",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_heap_pages`]."
            ]
          },
          {
            "Name": "set_code",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_code`]."
            ]
          },
          {
            "Name": "set_code_without_checks",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::set_code_without_checks`]."
            ]
          },
          {
            "Name": "set_storage",
            "TypeFields": [
              {
                "Name": "items",
                "TypeName": "Vec<KeyValue>",
                "TypeId": 223
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_storage`]."
            ]
          },
          {
            "Name": "kill_storage",
            "TypeFields": [
              {
                "Name": "keys",
                "TypeName": "Vec<Key>",
                "TypeId": 225
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::kill_storage`]."
            ]
          },
          {
            "Name": "kill_prefix",
            "TypeFields": [
              {
                "Name": "prefix",
                "TypeName": "Key",
                "TypeId": 13
              },
              {
                "Name": "subkeys",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::kill_prefix`]."
            ]
          },
          {
            "Name": "remark_with_event",
            "TypeFields": [
              {
                "Name": "remark",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remark_with_event`]."
            ]
          },
          {
            "Name": "authorize_upgrade",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::authorize_upgrade`]."
            ]
          },
          {
            "Name": "authorize_upgrade_without_checks",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::authorize_upgrade_without_checks`]."
            ]
          },
          {
            "Name": "apply_authorized_upgrade",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::apply_authorized_upgrade`]."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "223": {
        "TypeId": 224,
        "TypeDef": "Sequence"
      },
      "224": {
        "TypeIds": [
          13,
          13
        ],
        "TypeDef": "Tuple"
      },
      "225": {
        "TypeId": 13,
        "TypeDef": "Sequence"
      },
      "226": {
        "TypeFields": [
          {
            "Name": "base_block",
            "TypeName": "Weight",
            "TypeId": 10
          },
          {
            "Name": "max_block",
            "TypeName": "Weight",
            "TypeId": 10
          },
          {
            "Name": "per_class",
            "TypeName": "PerDispatchClass<WeightsPerClass>",
            "TypeId": 227
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "BlockWeights"
        ],
        "TypeDef": "Composite"
      },
      "227": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 228
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 228
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 228
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 228
          }
        ],
        "TypeDef": "Composite"
      },
      "228": {
        "TypeFields": [
          {
            "Name": "base_extrinsic",
            "TypeName": "Weight",
            "TypeId": 10
          },
          {
            "Name": "max_extrinsic",
            "TypeName": "Option<Weight>",
            "TypeId": 229
          },
          {
            "Name": "max_total",
            "TypeName": "Option<Weight>",
            "TypeId": 229
          },
          {
            "Name": "reserved",
            "TypeName": "Option<Weight>",
            "TypeId": 229
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "WeightsPerClass"
        ],
        "TypeDef": "Composite"
      },
      "229": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 10
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 10
          }
        ],
        "TypeDef": "Variant"
      },
      "230": {
        "TypeFields": [
          {
            "Name": "max",
            "TypeName": "PerDispatchClass<u32>",
            "TypeId": 231
          }
        ],
        "Path": [
          "frame_system",
          "limits",
          "BlockLength"
        ],
        "TypeDef": "Composite"
      },
      "231": {
        "TypeFields": [
          {
            "Name": "normal",
            "TypeName": "T",
            "TypeId": 8
          },
          {
            "Name": "operational",
            "TypeName": "T",
            "TypeId": 8
          },
          {
            "Name": "mandatory",
            "TypeName": "T",
            "TypeId": 8
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "PerDispatchClass"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 8
          }
        ],
        "TypeDef": "Composite"
      },
      "232": {
        "TypeFields": [
          {
            "Name": "read",
            "TypeName": "u64",
            "TypeId": 4
          },
          {
            "Name": "write",
            "TypeName": "u64",
            "TypeId": 4
          }
        ],
        "Path": [
          "sp_weights",
          "RuntimeDbWeight"
        ],
        "TypeDef": "Composite"
      },
      "233": {
        "TypeFields": [
          {
            "Name": "spec_name",
            "TypeName": "RuntimeString",
            "TypeId": 220
          },
          {
            "Name": "impl_name",
            "TypeName": "RuntimeString",
            "TypeId": 220
          },
          {
            "Name": "authoring_version",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "spec_version",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "impl_version",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "apis",
            "TypeName": "ApisVec",
            "TypeId": 234
          },
          {
            "Name": "transaction_version",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "state_version",
            "TypeName": "u8",
            "TypeId": 2
          }
        ],
        "Path": [
          "sp_version",
          "RuntimeVersion"
        ],
        "TypeDef": "Composite"
      },
      "234": {
        "TypeFields": [
          {
            "TypeId": 235
          }
        ],
        "Path": [
          "Cow"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 235
          }
        ],
        "TypeDef": "Composite"
      },
      "235": {
        "TypeId": 236,
        "TypeDef": "Sequence"
      },
      "236": {
        "TypeIds": [
          102,
          8
        ],
        "TypeDef": "Tuple"
      },
      "237": {
        "Variants": [
          {
            "Name": "InvalidSpecName",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The name of specification does not match between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "Name": "SpecVersionNeedsToIncrease",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The specification version is not allowed to decrease between the current runtime",
              "and the new runtime."
            ]
          },
          {
            "Name": "FailedToExtractRuntimeVersion",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Failed to extract the runtime version from the new runtime.",
              "",
              "Either calling `Core_version` or decoding `RuntimeVersion` failed."
            ]
          },
          {
            "Name": "NonDefaultComposite",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Suicide called when the account has non-default composite data."
            ]
          },
          {
            "Name": "NonZeroRefCount",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There is a non-zero reference count preventing the account from being purged."
            ]
          },
          {
            "Name": "CallFiltered",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The origin filter prevent the call to be dispatched."
            ]
          },
          {
            "Name": "NothingAuthorized",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "No upgrade authorized."
            ]
          },
          {
            "Name": "Unauthorized",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The submitted code is not authorized."
            ]
          }
        ],
        "Path": [
          "frame_system",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the System pallet"
        ]
      },
      "238": {
        "Variants": [
          {
            "Name": "set",
            "TypeFields": [
              {
                "Name": "now",
                "TypeName": "T::Moment",
                "TypeId": 11
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set`]."
            ]
          }
        ],
        "Path": [
          "pallet_timestamp",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "239": {
        "TypeIds": [
          0,
          6,
          30
        ],
        "TypeDef": "Tuple"
      },
      "240": {
        "Variants": [
          {
            "Name": "claim",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::claim`]."
            ]
          },
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "free",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::free`]."
            ]
          },
          {
            "Name": "force_transfer",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              },
              {
                "Name": "freeze",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::force_transfer`]."
            ]
          },
          {
            "Name": "freeze",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "T::AccountIndex",
                "TypeId": 4
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::freeze`]."
            ]
          }
        ],
        "Path": [
          "pallet_indices",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "241": {
        "Variants": [
          {
            "Name": "Id",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 0
          },
          {
            "Name": "Index",
            "TypeFields": [
              {
                "TypeName": "AccountIndex",
                "TypeId": 242
              }
            ],
            "Index": 1
          },
          {
            "Name": "Raw",
            "TypeFields": [
              {
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 2
          },
          {
            "Name": "Address32",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 3
          },
          {
            "Name": "Address20",
            "TypeFields": [
              {
                "TypeName": "[u8; 20]",
                "TypeId": 71
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "sp_runtime",
          "multiaddress",
          "MultiAddress"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "AccountIndex",
            "TypeId": 45
          }
        ],
        "TypeDef": "Variant"
      },
      "242": {
        "TypeId": 45,
        "TypeDef": "Compact"
      },
      "243": {
        "Variants": [
          {
            "Name": "NotAssigned",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The index was not already assigned."
            ]
          },
          {
            "Name": "NotOwner",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The index is assigned to another account."
            ]
          },
          {
            "Name": "InUse",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The index was not available."
            ]
          },
          {
            "Name": "NotTransfer",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The source and destination accounts are identical."
            ]
          },
          {
            "Name": "Permanent",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The index is permanent and may not be freed/changed."
            ]
          }
        ],
        "Path": [
          "pallet_indices",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "244": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 247
          }
        ],
        "Path": [
          "bounded_collections",
          "weak_bounded_vec",
          "WeakBoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 245
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "245": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "LockIdentifier",
            "TypeId": 102
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "reasons",
            "TypeName": "Reasons",
            "TypeId": 246
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "BalanceLock"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "246": {
        "Variants": [
          {
            "Name": "Fee",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Misc",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "Reasons"
        ],
        "TypeDef": "Variant"
      },
      "247": {
        "TypeId": 245,
        "TypeDef": "Sequence"
      },
      "248": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 250
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 249
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "249": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "ReserveIdentifier",
            "TypeId": 102
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "ReserveData"
        ],
        "TypeParams": [
          {
            "Name": "ReserveIdentifier",
            "TypeId": 102
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "250": {
        "TypeId": 249,
        "TypeDef": "Sequence"
      },
      "251": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 253
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 252
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "252": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "Id",
            "TypeId": 170
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "IdAmount"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 170
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "253": {
        "TypeId": 252,
        "TypeDef": "Sequence"
      },
      "254": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 258
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 255
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "255": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "Id",
            "TypeId": 256
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "IdAmount"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 256
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "256": {
        "Variants": [
          {
            "Name": "ParachainStaking",
            "TypeFields": [
              {
                "TypeName": "parachain_staking::FreezeReason",
                "TypeId": 257
              }
            ],
            "Index": 21
          }
        ],
        "Path": [
          "spiritnet_runtime",
          "RuntimeFreezeReason"
        ],
        "TypeDef": "Variant"
      },
      "257": {
        "Variants": [
          {
            "Name": "Staking",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "parachain_staking",
          "pallet",
          "FreezeReason"
        ],
        "TypeDef": "Variant"
      },
      "258": {
        "TypeId": 255,
        "TypeDef": "Sequence"
      },
      "259": {
        "Variants": [
          {
            "Name": "transfer_allow_death",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::transfer_allow_death`]."
            ]
          },
          {
            "Name": "force_transfer",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::force_transfer`]."
            ]
          },
          {
            "Name": "transfer_keep_alive",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "value",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::transfer_keep_alive`]."
            ]
          },
          {
            "Name": "transfer_all",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "keep_alive",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::transfer_all`]."
            ]
          },
          {
            "Name": "force_unreserve",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_unreserve`]."
            ]
          },
          {
            "Name": "upgrade_accounts",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::upgrade_accounts`]."
            ]
          },
          {
            "Name": "force_set_balance",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "new_free",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::force_set_balance`]."
            ]
          },
          {
            "Name": "force_adjust_total_issuance",
            "TypeFields": [
              {
                "Name": "direction",
                "TypeName": "AdjustmentDirection",
                "TypeId": 260
              },
              {
                "Name": "delta",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::force_adjust_total_issuance`]."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "260": {
        "Variants": [
          {
            "Name": "Increase",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Decrease",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_balances",
          "types",
          "AdjustmentDirection"
        ],
        "TypeDef": "Variant"
      },
      "261": {
        "Variants": [
          {
            "Name": "VestingBalance",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Vesting balance too high to send value."
            ]
          },
          {
            "Name": "LiquidityRestrictions",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Account liquidity restrictions prevent withdrawal."
            ]
          },
          {
            "Name": "InsufficientBalance",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Balance too low to send value."
            ]
          },
          {
            "Name": "ExistentialDeposit",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Value too low to create account due to existential deposit."
            ]
          },
          {
            "Name": "Expendability",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Transfer/payment would kill account."
            ]
          },
          {
            "Name": "ExistingVestingSchedule",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "A vesting schedule already exists for this account."
            ]
          },
          {
            "Name": "DeadAccount",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Beneficiary account must pre-exist."
            ]
          },
          {
            "Name": "TooManyReserves",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Number of named reserves exceed `MaxReserves`."
            ]
          },
          {
            "Name": "TooManyHolds",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Number of holds exceed `VariantCountOf<T::RuntimeHoldReason>`."
            ]
          },
          {
            "Name": "TooManyFreezes",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Number of freezes exceed `MaxFreezes`."
            ]
          },
          {
            "Name": "IssuanceDeactivated",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The issuance cannot be modified since it is already deactivated."
            ]
          },
          {
            "Name": "DeltaZero",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The delta cannot be zero."
            ]
          }
        ],
        "Path": [
          "pallet_balances",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "262": {
        "TypeFields": [
          {
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "sp_arithmetic",
          "fixed_point",
          "FixedU128"
        ],
        "TypeDef": "Composite"
      },
      "263": {
        "Variants": [
          {
            "Name": "V1Ancient",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "V2",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "Releases"
        ],
        "TypeDef": "Variant"
      },
      "264": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 267
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 265
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "265": {
        "TypeFields": [
          {
            "TypeName": "sr25519::Public",
            "TypeId": 266
          }
        ],
        "Path": [
          "sp_consensus_aura",
          "sr25519",
          "app_sr25519",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "266": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "sp_core",
          "sr25519",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "267": {
        "TypeId": 265,
        "TypeDef": "Sequence"
      },
      "268": {
        "TypeFields": [
          {
            "TypeName": "u64",
            "TypeId": 4
          }
        ],
        "Path": [
          "sp_consensus_slots",
          "Slot"
        ],
        "TypeDef": "Composite"
      },
      "269": {
        "TypeId": 270,
        "TypeDef": "Sequence"
      },
      "270": {
        "TypeIds": [
          0,
          271
        ],
        "TypeDef": "Tuple"
      },
      "271": {
        "TypeFields": [
          {
            "Name": "aura",
            "TypeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public",
            "TypeId": 265
          }
        ],
        "Path": [
          "spiritnet_runtime",
          "SessionKeys"
        ],
        "TypeDef": "Composite"
      },
      "272": {
        "TypeId": 8,
        "TypeDef": "Sequence"
      },
      "273": {
        "TypeIds": [
          274,
          13
        ],
        "TypeDef": "Tuple"
      },
      "274": {
        "TypeFields": [
          {
            "TypeName": "[u8; 4]",
            "TypeId": 17
          }
        ],
        "Path": [
          "sp_core",
          "crypto",
          "KeyTypeId"
        ],
        "TypeDef": "Composite"
      },
      "275": {
        "Variants": [
          {
            "Name": "set_keys",
            "TypeFields": [
              {
                "Name": "keys",
                "TypeName": "T::Keys",
                "TypeId": 271
              },
              {
                "Name": "proof",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_keys`]."
            ]
          },
          {
            "Name": "purge_keys",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::purge_keys`]."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "276": {
        "Variants": [
          {
            "Name": "InvalidProof",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Invalid ownership proof."
            ]
          },
          {
            "Name": "NoAssociatedValidatorId",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No associated validator ID for account."
            ]
          },
          {
            "Name": "DuplicatedKey",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Registered duplicate key."
            ]
          },
          {
            "Name": "NoKeys",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "No keys are associated with this account."
            ]
          },
          {
            "Name": "NoAccount",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Key setting account is not live, so it's impossible to associate keys."
            ]
          }
        ],
        "Path": [
          "pallet_session",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the session pallet."
        ]
      },
      "277": {
        "TypeFields": [
          {
            "Name": "current",
            "TypeName": "SessionIndex",
            "TypeId": 8
          },
          {
            "Name": "first",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "length",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "parachain_staking",
          "types",
          "RoundInfo"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "278": {
        "TypeFields": [
          {
            "Name": "round",
            "TypeName": "SessionIndex",
            "TypeId": 8
          },
          {
            "Name": "counter",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "parachain_staking",
          "types",
          "DelegationCounter"
        ],
        "TypeDef": "Composite"
      },
      "279": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "parachain_staking",
          "types",
          "Stake"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "280": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "stake",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "delegators",
            "TypeName": "OrderedSet<Stake<AccountId, Balance>, MaxDelegatorsPerCandidate>",
            "TypeId": 281
          },
          {
            "Name": "total",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "status",
            "TypeName": "CandidateStatus",
            "TypeId": 284
          }
        ],
        "Path": [
          "parachain_staking",
          "types",
          "Candidate"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "MaxDelegatorsPerCandidate"
          }
        ],
        "TypeDef": "Composite"
      },
      "281": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<T, S>",
            "TypeId": 282
          }
        ],
        "Path": [
          "parachain_staking",
          "set",
          "OrderedSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 279
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "282": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 283
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 279
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "283": {
        "TypeId": 279,
        "TypeDef": "Sequence"
      },
      "284": {
        "Variants": [
          {
            "Name": "Active",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Leaving",
            "TypeFields": [
              {
                "TypeName": "SessionIndex",
                "TypeId": 8
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "parachain_staking",
          "types",
          "CandidateStatus"
        ],
        "TypeDef": "Variant"
      },
      "285": {
        "TypeFields": [
          {
            "Name": "collators",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "delegators",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "parachain_staking",
          "types",
          "TotalStake"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "286": {
        "TypeFields": [
          {
            "TypeName": "BoundedVec<T, S>",
            "TypeId": 287
          }
        ],
        "Path": [
          "parachain_staking",
          "set",
          "OrderedSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 279
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "287": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 283
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 279
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "288": {
        "TypeFields": [
          {
            "Name": "collator",
            "TypeName": "StakingInfo",
            "TypeId": 289
          },
          {
            "Name": "delegator",
            "TypeName": "StakingInfo",
            "TypeId": 289
          }
        ],
        "Path": [
          "parachain_staking",
          "inflation",
          "InflationInfo"
        ],
        "TypeDef": "Composite"
      },
      "289": {
        "TypeFields": [
          {
            "Name": "max_rate",
            "TypeName": "Perquintill",
            "TypeId": 37
          },
          {
            "Name": "reward_rate",
            "TypeName": "RewardRate",
            "TypeId": 290
          }
        ],
        "Path": [
          "parachain_staking",
          "inflation",
          "StakingInfo"
        ],
        "TypeDef": "Composite"
      },
      "290": {
        "TypeFields": [
          {
            "Name": "annual",
            "TypeName": "Perquintill",
            "TypeId": 37
          },
          {
            "Name": "per_block",
            "TypeName": "Perquintill",
            "TypeId": 37
          }
        ],
        "Path": [
          "parachain_staking",
          "inflation",
          "RewardRate"
        ],
        "TypeDef": "Composite"
      },
      "291": {
        "TypeFields": [
          {
            "TypeName": "BTreeMap<K, V>",
            "TypeId": 292
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_map",
          "BoundedBTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 4
          },
          {
            "Name": "V",
            "TypeId": 6
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "292": {
        "TypeFields": [
          {
            "TypeId": 293
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 4
          },
          {
            "Name": "V",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "293": {
        "TypeId": 294,
        "TypeDef": "Sequence"
      },
      "294": {
        "TypeIds": [
          4,
          6
        ],
        "TypeDef": "Tuple"
      },
      "295": {
        "Variants": [
          {
            "Name": "force_new_round",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "See [`Pallet::force_new_round`]."
            ]
          },
          {
            "Name": "set_inflation",
            "TypeFields": [
              {
                "Name": "collator_max_rate_percentage",
                "TypeName": "Perquintill",
                "TypeId": 37
              },
              {
                "Name": "collator_annual_reward_rate_percentage",
                "TypeName": "Perquintill",
                "TypeId": 37
              },
              {
                "Name": "delegator_max_rate_percentage",
                "TypeName": "Perquintill",
                "TypeId": 37
              },
              {
                "Name": "delegator_annual_reward_rate_percentage",
                "TypeName": "Perquintill",
                "TypeId": 37
              },
              {
                "Name": "current_collator_candidate_pool_size",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_inflation`]."
            ]
          },
          {
            "Name": "set_max_selected_candidates",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_max_selected_candidates`]."
            ]
          },
          {
            "Name": "set_blocks_per_round",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::set_blocks_per_round`]."
            ]
          },
          {
            "Name": "set_max_candidate_stake",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_max_candidate_stake`]."
            ]
          },
          {
            "Name": "force_remove_candidate",
            "TypeFields": [
              {
                "Name": "collator",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 241
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_remove_candidate`]."
            ]
          },
          {
            "Name": "join_candidates",
            "TypeFields": [
              {
                "Name": "stake",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::join_candidates`]."
            ]
          },
          {
            "Name": "init_leave_candidates",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "See [`Pallet::init_leave_candidates`]."
            ]
          },
          {
            "Name": "execute_leave_candidates",
            "TypeFields": [
              {
                "Name": "collator",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 241
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::execute_leave_candidates`]."
            ]
          },
          {
            "Name": "cancel_leave_candidates",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "See [`Pallet::cancel_leave_candidates`]."
            ]
          },
          {
            "Name": "candidate_stake_more",
            "TypeFields": [
              {
                "Name": "more",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::candidate_stake_more`]."
            ]
          },
          {
            "Name": "candidate_stake_less",
            "TypeFields": [
              {
                "Name": "less",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::candidate_stake_less`]."
            ]
          },
          {
            "Name": "join_delegators",
            "TypeFields": [
              {
                "Name": "collator",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::join_delegators`]."
            ]
          },
          {
            "Name": "leave_delegators",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "See [`Pallet::leave_delegators`]."
            ]
          },
          {
            "Name": "delegator_stake_more",
            "TypeFields": [
              {
                "Name": "more",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::delegator_stake_more`]."
            ]
          },
          {
            "Name": "delegator_stake_less",
            "TypeFields": [
              {
                "Name": "less",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::delegator_stake_less`]."
            ]
          },
          {
            "Name": "unlock_unstaked",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 241
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::unlock_unstaked`]."
            ]
          },
          {
            "Name": "claim_rewards",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "See [`Pallet::claim_rewards`]."
            ]
          },
          {
            "Name": "increment_collator_rewards",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "See [`Pallet::increment_collator_rewards`]."
            ]
          },
          {
            "Name": "increment_delegator_rewards",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "See [`Pallet::increment_delegator_rewards`]."
            ]
          },
          {
            "Name": "execute_scheduled_reward_change",
            "TypeFields": [
              {
                "Name": "current_collator_candidate_pool_size",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 20,
            "Docs": [
              "See [`Pallet::execute_scheduled_reward_change`]."
            ]
          }
        ],
        "Path": [
          "parachain_staking",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "296": {
        "Variants": [
          {
            "Name": "DelegatorNotFound",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The account is not part of the delegators set."
            ]
          },
          {
            "Name": "CandidateNotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The account is not part of the collator candidates set."
            ]
          },
          {
            "Name": "DelegatorExists",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The account is already part of the delegators set."
            ]
          },
          {
            "Name": "CandidateExists",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The account is already part of the collator candidates set."
            ]
          },
          {
            "Name": "ValStakeZero",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The account tried to stake more or less with amount zero."
            ]
          },
          {
            "Name": "ValStakeBelowMin",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The account has not staked enough funds to be added to the collator",
              "candidates set."
            ]
          },
          {
            "Name": "ValStakeAboveMax",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The account has already staked the maximum amount of funds possible."
            ]
          },
          {
            "Name": "DelegationBelowMin",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The account has not staked enough funds to delegate a collator",
              "candidate."
            ]
          },
          {
            "Name": "AlreadyLeaving",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The collator candidate has already trigger the process to leave the",
              "set of collator candidates."
            ]
          },
          {
            "Name": "NotLeaving",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The collator candidate wanted to execute the exit but has not",
              "requested to leave before by calling `init_leave_candidates`."
            ]
          },
          {
            "Name": "CannotLeaveYet",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The collator tried to leave before waiting at least for",
              "`ExitQueueDelay` many rounds."
            ]
          },
          {
            "Name": "CannotJoinBeforeUnlocking",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The account has a full list of unstaking requests and needs to",
              "unlock at least one of these before being able to join (again).",
              "NOTE: Can only happen if the account was a candidate or",
              "delegator before and either got kicked or exited voluntarily."
            ]
          },
          {
            "Name": "AlreadyDelegating",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The account is already delegating the collator candidate."
            ]
          },
          {
            "Name": "NotYetDelegating",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The account has not delegated any collator candidate yet, hence it",
              "is not in the set of delegators."
            ]
          },
          {
            "Name": "DelegationsPerRoundExceeded",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The delegator has exceeded the number of delegations per round which",
              "is equal to MaxDelegatorsPerCollator.",
              "",
              "This protects against attacks in which a delegator can re-delegate",
              "from a collator who has already authored a block, to another one",
              "which has not in this round."
            ]
          },
          {
            "Name": "TooManyDelegators",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The collator candidate has already reached the maximum number of",
              "delegators.",
              "",
              "This error is generated in case a new delegation request does not",
              "stake enough funds to replace some other existing delegation."
            ]
          },
          {
            "Name": "TooFewCollatorCandidates",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The set of collator candidates would fall below the required minimum",
              "if the collator left."
            ]
          },
          {
            "Name": "CannotStakeIfLeaving",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The collator candidate is in the process of leaving the set of",
              "candidates and cannot perform any other actions in the meantime."
            ]
          },
          {
            "Name": "CannotDelegateIfLeaving",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "The collator candidate is in the process of leaving the set of",
              "candidates and thus cannot be delegated to."
            ]
          },
          {
            "Name": "MaxCollatorsPerDelegatorExceeded",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The delegator has already delegated the maximum number of candidates",
              "allowed."
            ]
          },
          {
            "Name": "AlreadyDelegatedCollator",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "The delegator has already previously delegated the collator",
              "candidate."
            ]
          },
          {
            "Name": "DelegationNotFound",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "The given delegation does not exist in the set of delegations."
            ]
          },
          {
            "Name": "Underflow",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "The collator delegate or the delegator is trying to un-stake more",
              "funds that are currently staked."
            ]
          },
          {
            "Name": "CannotSetAboveMax",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "The number of selected candidates per staking round is",
              "above the maximum value allowed."
            ]
          },
          {
            "Name": "CannotSetBelowMin",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "The number of selected candidates per staking round is",
              "below the minimum value allowed."
            ]
          },
          {
            "Name": "InvalidSchedule",
            "TypeFields": null,
            "Index": 25,
            "Docs": [
              "An invalid inflation configuration is trying to be set."
            ]
          },
          {
            "Name": "NoMoreUnstaking",
            "TypeFields": null,
            "Index": 26,
            "Docs": [
              "The staking reward being unlocked does not exist.",
              "Max unlocking requests reached."
            ]
          },
          {
            "Name": "TooEarly",
            "TypeFields": null,
            "Index": 27,
            "Docs": [
              "The reward rate cannot be adjusted yet as an entire year has not",
              "passed."
            ]
          },
          {
            "Name": "StakeNotFound",
            "TypeFields": null,
            "Index": 28,
            "Docs": [
              "Provided staked value is zero. Should never be thrown."
            ]
          },
          {
            "Name": "UnstakingIsEmpty",
            "TypeFields": null,
            "Index": 29,
            "Docs": [
              "Cannot unlock when Unstaked is empty."
            ]
          },
          {
            "Name": "RewardsNotFound",
            "TypeFields": null,
            "Index": 30,
            "Docs": [
              "Cannot claim rewards if empty."
            ]
          },
          {
            "Name": "InvalidInput",
            "TypeFields": null,
            "Index": 31,
            "Docs": [
              "Invalid input provided. The meaning of this error is",
              "extrinsic-dependent."
            ]
          }
        ],
        "Path": [
          "parachain_staking",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "297": {
        "TypeIds": [
          268,
          8
        ],
        "TypeDef": "Tuple"
      },
      "298": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 437
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 299
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "299": {
        "TypeIds": [
          8,
          300,
          0
        ],
        "TypeDef": "Tuple"
      },
      "300": {
        "Variants": [
          {
            "Name": "Legacy",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H::Output",
                "TypeId": 12
              }
            ],
            "Index": 0
          },
          {
            "Name": "Inline",
            "TypeFields": [
              {
                "TypeName": "BoundedInline",
                "TypeId": 148
              }
            ],
            "Index": 1
          },
          {
            "Name": "Lookup",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "H::Output",
                "TypeId": 12
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "preimages",
          "Bounded"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 301
          },
          {
            "Name": "H",
            "TypeId": 436
          }
        ],
        "TypeDef": "Variant"
      },
      "301": {
        "Variants": [
          {
            "Name": "System",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                "TypeId": 222
              }
            ],
            "Index": 0
          },
          {
            "Name": "Timestamp",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                "TypeId": 238
              }
            ],
            "Index": 2
          },
          {
            "Name": "Indices",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                "TypeId": 240
              }
            ],
            "Index": 5
          },
          {
            "Name": "Balances",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                "TypeId": 259
              }
            ],
            "Index": 6
          },
          {
            "Name": "Session",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                "TypeId": 275
              }
            ],
            "Index": 22
          },
          {
            "Name": "ParachainStaking",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainStaking, Runtime>",
                "TypeId": 295
              }
            ],
            "Index": 21
          },
          {
            "Name": "Democracy",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                "TypeId": 302
              }
            ],
            "Index": 30
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                "TypeId": 306
              }
            ],
            "Index": 31
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                "TypeId": 308
              }
            ],
            "Index": 32
          },
          {
            "Name": "TechnicalMembership",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalMembership, Runtime>",
                "TypeId": 309
              }
            ],
            "Index": 34
          },
          {
            "Name": "Treasury",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                "TypeId": 310
              }
            ],
            "Index": 35
          },
          {
            "Name": "Utility",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                "TypeId": 312
              }
            ],
            "Index": 40
          },
          {
            "Name": "Vesting",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                "TypeId": 322
              }
            ],
            "Index": 41
          },
          {
            "Name": "Scheduler",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                "TypeId": 324
              }
            ],
            "Index": 42
          },
          {
            "Name": "Proxy",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                "TypeId": 326
              }
            ],
            "Index": 43
          },
          {
            "Name": "Preimage",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                "TypeId": 328
              }
            ],
            "Index": 44
          },
          {
            "Name": "TipsMembership",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TipsMembership, Runtime>",
                "TypeId": 329
              }
            ],
            "Index": 45
          },
          {
            "Name": "Tips",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tips, Runtime>",
                "TypeId": 330
              }
            ],
            "Index": 46
          },
          {
            "Name": "Multisig",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                "TypeId": 331
              }
            ],
            "Index": 47
          },
          {
            "Name": "AssetSwitchPool1",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetSwitchPool1, Runtime>",
                "TypeId": 333
              }
            ],
            "Index": 48
          },
          {
            "Name": "Fungibles",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Fungibles, Runtime>",
                "TypeId": 334
              }
            ],
            "Index": 49
          },
          {
            "Name": "Ctype",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Ctype, Runtime>",
                "TypeId": 335
              }
            ],
            "Index": 61
          },
          {
            "Name": "Attestation",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Attestation, Runtime>",
                "TypeId": 336
              }
            ],
            "Index": 62
          },
          {
            "Name": "Delegation",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Delegation, Runtime>",
                "TypeId": 340
              }
            ],
            "Index": 63
          },
          {
            "Name": "Did",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Did, Runtime>",
                "TypeId": 347
              }
            ],
            "Index": 64
          },
          {
            "Name": "DidLookup",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DidLookup, Runtime>",
                "TypeId": 369
              }
            ],
            "Index": 67
          },
          {
            "Name": "Web3Names",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Web3Names, Runtime>",
                "TypeId": 373
              }
            ],
            "Index": 68
          },
          {
            "Name": "PublicCredentials",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PublicCredentials, Runtime>",
                "TypeId": 374
              }
            ],
            "Index": 69
          },
          {
            "Name": "Migration",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Migration, Runtime>",
                "TypeId": 378
              }
            ],
            "Index": 70
          },
          {
            "Name": "DipProvider",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DipProvider, Runtime>",
                "TypeId": 379
              }
            ],
            "Index": 71
          },
          {
            "Name": "DepositStorage",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DepositStorage, Runtime>",
                "TypeId": 381
              }
            ],
            "Index": 72
          },
          {
            "Name": "ParachainSystem",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                "TypeId": 382
              }
            ],
            "Index": 80
          },
          {
            "Name": "ParachainInfo",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainInfo, Runtime>",
                "TypeId": 395
              }
            ],
            "Index": 81
          },
          {
            "Name": "XcmpQueue",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>",
                "TypeId": 396
              }
            ],
            "Index": 82
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                "TypeId": 397
              }
            ],
            "Index": 83
          },
          {
            "Name": "MessageQueue",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                "TypeId": 435
              }
            ],
            "Index": 86
          }
        ],
        "Path": [
          "spiritnet_runtime",
          "RuntimeCall"
        ],
        "TypeDef": "Variant"
      },
      "302": {
        "Variants": [
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 300
              },
              {
                "Name": "value",
                "TypeName": "BalanceOf<T>",
                "TypeId": 72
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "second",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "PropIndex",
                "TypeId": 68
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::second`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 68
              },
              {
                "Name": "vote",
                "TypeName": "AccountVote<BalanceOf<T>>",
                "TypeId": 40
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "emergency_cancel",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::emergency_cancel`]."
            ]
          },
          {
            "Name": "external_propose",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 300
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::external_propose`]."
            ]
          },
          {
            "Name": "external_propose_majority",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 300
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::external_propose_majority`]."
            ]
          },
          {
            "Name": "external_propose_default",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "BoundedCallOf<T>",
                "TypeId": 300
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::external_propose_default`]."
            ]
          },
          {
            "Name": "fast_track",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "voting_period",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::fast_track`]."
            ]
          },
          {
            "Name": "veto_external",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::veto_external`]."
            ]
          },
          {
            "Name": "cancel_referendum",
            "TypeFields": [
              {
                "Name": "ref_index",
                "TypeName": "ReferendumIndex",
                "TypeId": 68
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::cancel_referendum`]."
            ]
          },
          {
            "Name": "delegate",
            "TypeFields": [
              {
                "Name": "to",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "conviction",
                "TypeName": "Conviction",
                "TypeId": 303
              },
              {
                "Name": "balance",
                "TypeName": "BalanceOf<T>",
                "TypeId": 6
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::delegate`]."
            ]
          },
          {
            "Name": "undelegate",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "See [`Pallet::undelegate`]."
            ]
          },
          {
            "Name": "clear_public_proposals",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "See [`Pallet::clear_public_proposals`]."
            ]
          },
          {
            "Name": "unlock",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::unlock`]."
            ]
          },
          {
            "Name": "remove_vote",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::remove_vote`]."
            ]
          },
          {
            "Name": "remove_other_vote",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "index",
                "TypeName": "ReferendumIndex",
                "TypeId": 8
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::remove_other_vote`]."
            ]
          },
          {
            "Name": "blacklist",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "maybe_ref_index",
                "TypeName": "Option<ReferendumIndex>",
                "TypeId": 304
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::blacklist`]."
            ]
          },
          {
            "Name": "cancel_proposal",
            "TypeFields": [
              {
                "Name": "prop_index",
                "TypeName": "PropIndex",
                "TypeId": 68
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::cancel_proposal`]."
            ]
          },
          {
            "Name": "set_metadata",
            "TypeFields": [
              {
                "Name": "owner",
                "TypeName": "MetadataOwner",
                "TypeId": 42
              },
              {
                "Name": "maybe_hash",
                "TypeName": "Option<T::Hash>",
                "TypeId": 305
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::set_metadata`]."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "303": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Locked1x",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Locked2x",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "Locked3x",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "Locked4x",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "Locked5x",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "Locked6x",
            "TypeFields": null,
            "Index": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "conviction",
          "Conviction"
        ],
        "TypeDef": "Variant"
      },
      "304": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 8
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 8
          }
        ],
        "TypeDef": "Variant"
      },
      "305": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 12
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          }
        ],
        "TypeDef": "Variant"
      },
      "306": {
        "Variants": [
          {
            "Name": "set_members",
            "TypeFields": [
              {
                "Name": "new_members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              },
              {
                "Name": "prime",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 307
              },
              {
                "Name": "old_count",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_members`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 301
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 68
              },
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 301
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 68
              },
              {
                "Name": "approve",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "disapprove_proposal",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::disapprove_proposal`]."
            ]
          },
          {
            "Name": "close",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 68
              },
              {
                "Name": "proposal_weight_bound",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::close`]."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "307": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 0
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "308": {
        "Variants": [
          {
            "Name": "set_members",
            "TypeFields": [
              {
                "Name": "new_members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              },
              {
                "Name": "prime",
                "TypeName": "Option<T::AccountId>",
                "TypeId": 307
              },
              {
                "Name": "old_count",
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_members`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 301
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "propose",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "MemberCount",
                "TypeId": 68
              },
              {
                "Name": "proposal",
                "TypeName": "Box<<T as Config<I>>::Proposal>",
                "TypeId": 301
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::propose`]."
            ]
          },
          {
            "Name": "vote",
            "TypeFields": [
              {
                "Name": "proposal",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 68
              },
              {
                "Name": "approve",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::vote`]."
            ]
          },
          {
            "Name": "disapprove_proposal",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::disapprove_proposal`]."
            ]
          },
          {
            "Name": "close",
            "TypeFields": [
              {
                "Name": "proposal_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "index",
                "TypeName": "ProposalIndex",
                "TypeId": 68
              },
              {
                "Name": "proposal_weight_bound",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "length_bound",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::close`]."
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "309": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "swap_member",
            "TypeFields": [
              {
                "Name": "remove",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "add",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap_member`]."
            ]
          },
          {
            "Name": "reset_members",
            "TypeFields": [
              {
                "Name": "members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reset_members`]."
            ]
          },
          {
            "Name": "change_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_key`]."
            ]
          },
          {
            "Name": "set_prime",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_prime`]."
            ]
          },
          {
            "Name": "clear_prime",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::clear_prime`]."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "310": {
        "Variants": [
          {
            "Name": "propose_spend",
            "TypeFields": [
              {
                "Name": "value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 72
              },
              {
                "Name": "beneficiary",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::propose_spend`]."
            ]
          },
          {
            "Name": "reject_proposal",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 68
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::reject_proposal`]."
            ]
          },
          {
            "Name": "approve_proposal",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 68
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::approve_proposal`]."
            ]
          },
          {
            "Name": "spend_local",
            "TypeFields": [
              {
                "Name": "amount",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 72
              },
              {
                "Name": "beneficiary",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::spend_local`]."
            ]
          },
          {
            "Name": "remove_approval",
            "TypeFields": [
              {
                "Name": "proposal_id",
                "TypeName": "ProposalIndex",
                "TypeId": 68
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::remove_approval`]."
            ]
          },
          {
            "Name": "spend",
            "TypeFields": [
              {
                "Name": "asset_kind",
                "TypeName": "Box<T::AssetKind>",
                "TypeId": 45
              },
              {
                "Name": "amount",
                "TypeName": "AssetBalanceOf<T, I>",
                "TypeId": 72
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<BeneficiaryLookupOf<T, I>>",
                "TypeId": 241
              },
              {
                "Name": "valid_from",
                "TypeName": "Option<BlockNumberFor<T>>",
                "TypeId": 311
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::spend`]."
            ]
          },
          {
            "Name": "payout",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::payout`]."
            ]
          },
          {
            "Name": "check_status",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::check_status`]."
            ]
          },
          {
            "Name": "void_spend",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "SpendIndex",
                "TypeId": 8
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::void_spend`]."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "311": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "312": {
        "Variants": [
          {
            "Name": "batch",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 313
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::batch`]."
            ]
          },
          {
            "Name": "as_derivative",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::as_derivative`]."
            ]
          },
          {
            "Name": "batch_all",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 313
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::batch_all`]."
            ]
          },
          {
            "Name": "dispatch_as",
            "TypeFields": [
              {
                "Name": "as_origin",
                "TypeName": "Box<T::PalletsOrigin>",
                "TypeId": 314
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::dispatch_as`]."
            ]
          },
          {
            "Name": "force_batch",
            "TypeFields": [
              {
                "Name": "calls",
                "TypeName": "Vec<<T as Config>::RuntimeCall>",
                "TypeId": 313
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::force_batch`]."
            ]
          },
          {
            "Name": "with_weight",
            "TypeFields": [
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              },
              {
                "Name": "weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::with_weight`]."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "313": {
        "TypeId": 301,
        "TypeDef": "Sequence"
      },
      "314": {
        "Variants": [
          {
            "Name": "system",
            "TypeFields": [
              {
                "TypeName": "frame_system::Origin<Runtime>",
                "TypeId": 315
              }
            ],
            "Index": 0
          },
          {
            "Name": "Council",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                "TypeId": 316
              }
            ],
            "Index": 31
          },
          {
            "Name": "TechnicalCommittee",
            "TypeFields": [
              {
                "TypeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                "TypeId": 317
              }
            ],
            "Index": 32
          },
          {
            "Name": "Did",
            "TypeFields": [
              {
                "TypeName": "did::Origin<Runtime>",
                "TypeId": 318
              }
            ],
            "Index": 64
          },
          {
            "Name": "PolkadotXcm",
            "TypeFields": [
              {
                "TypeName": "pallet_xcm::Origin",
                "TypeId": 319
              }
            ],
            "Index": 83
          },
          {
            "Name": "CumulusXcm",
            "TypeFields": [
              {
                "TypeName": "cumulus_pallet_xcm::Origin",
                "TypeId": 320
              }
            ],
            "Index": 84
          },
          {
            "Name": "Void",
            "TypeFields": [
              {
                "TypeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                "TypeId": 321
              }
            ],
            "Index": 6
          }
        ],
        "Path": [
          "spiritnet_runtime",
          "OriginCaller"
        ],
        "TypeDef": "Variant"
      },
      "315": {
        "Variants": [
          {
            "Name": "Root",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Signed",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "frame_support",
          "dispatch",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "316": {
        "Variants": [
          {
            "Name": "Members",
            "TypeFields": [
              {
                "TypeName": "MemberCount",
                "TypeId": 8
              },
              {
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 0
          },
          {
            "Name": "Member",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "_Phantom",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_collective",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant"
      },
      "317": {
        "Variants": [
          {
            "Name": "Members",
            "TypeFields": [
              {
                "TypeName": "MemberCount",
                "TypeId": 8
              },
              {
                "TypeName": "MemberCount",
                "TypeId": 8
              }
            ],
            "Index": 0
          },
          {
            "Name": "Member",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 1
          },
          {
            "Name": "_Phantom",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_collective",
          "RawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant"
      },
      "318": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "submitter",
            "TypeName": "AccountId",
            "TypeId": 0
          }
        ],
        "Path": [
          "did",
          "origin",
          "DidRawOrigin"
        ],
        "TypeParams": [
          {
            "Name": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "319": {
        "Variants": [
          {
            "Name": "Xcm",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 0
          },
          {
            "Name": "Response",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "320": {
        "Variants": [
          {
            "Name": "Relay",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "SiblingParachain",
            "TypeFields": [
              {
                "TypeName": "ParaId",
                "TypeId": 215
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "cumulus_pallet_xcm",
          "pallet",
          "Origin"
        ],
        "TypeDef": "Variant"
      },
      "321": {
        "Variants": null,
        "Path": [
          "sp_core",
          "Void"
        ],
        "TypeDef": "Variant"
      },
      "322": {
        "Variants": [
          {
            "Name": "vest",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "See [`Pallet::vest`]."
            ]
          },
          {
            "Name": "vest_other",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::vest_other`]."
            ]
          },
          {
            "Name": "vested_transfer",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "schedule",
                "TypeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                "TypeId": 323
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::vested_transfer`]."
            ]
          },
          {
            "Name": "force_vested_transfer",
            "TypeFields": [
              {
                "Name": "source",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "schedule",
                "TypeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                "TypeId": 323
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::force_vested_transfer`]."
            ]
          },
          {
            "Name": "merge_schedules",
            "TypeFields": [
              {
                "Name": "schedule1_index",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "schedule2_index",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::merge_schedules`]."
            ]
          },
          {
            "Name": "force_remove_vesting_schedule",
            "TypeFields": [
              {
                "Name": "target",
                "TypeName": "<T::Lookup as StaticLookup>::Source",
                "TypeId": 241
              },
              {
                "Name": "schedule_index",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_remove_vesting_schedule`]."
            ]
          }
        ],
        "Path": [
          "pallet_vesting",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "323": {
        "TypeFields": [
          {
            "Name": "locked",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "per_block",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "starting_block",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_vesting",
          "vesting_info",
          "VestingInfo"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "324": {
        "Variants": [
          {
            "Name": "schedule",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 325
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::schedule`]."
            ]
          },
          {
            "Name": "cancel",
            "TypeFields": [
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::cancel`]."
            ]
          },
          {
            "Name": "schedule_named",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              },
              {
                "Name": "when",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 325
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::schedule_named`]."
            ]
          },
          {
            "Name": "cancel_named",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel_named`]."
            ]
          },
          {
            "Name": "schedule_after",
            "TypeFields": [
              {
                "Name": "after",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 325
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::schedule_after`]."
            ]
          },
          {
            "Name": "schedule_named_after",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "TaskName",
                "TypeId": 1
              },
              {
                "Name": "after",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "maybe_periodic",
                "TypeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                "TypeId": 325
              },
              {
                "Name": "priority",
                "TypeName": "schedule::Priority",
                "TypeId": 2
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::schedule_named_after`]."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "325": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 52
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 52
          }
        ],
        "TypeDef": "Variant"
      },
      "326": {
        "Variants": [
          {
            "Name": "proxy",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "force_proxy_type",
                "TypeName": "Option<T::ProxyType>",
                "TypeId": 327
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::proxy`]."
            ]
          },
          {
            "Name": "add_proxy",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 55
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::add_proxy`]."
            ]
          },
          {
            "Name": "remove_proxy",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 55
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::remove_proxy`]."
            ]
          },
          {
            "Name": "remove_proxies",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove_proxies`]."
            ]
          },
          {
            "Name": "create_pure",
            "TypeFields": [
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 55
              },
              {
                "Name": "delay",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              },
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::create_pure`]."
            ]
          },
          {
            "Name": "kill_pure",
            "TypeFields": [
              {
                "Name": "spawner",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "proxy_type",
                "TypeName": "T::ProxyType",
                "TypeId": 55
              },
              {
                "Name": "index",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "height",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 11
              },
              {
                "Name": "ext_index",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::kill_pure`]."
            ]
          },
          {
            "Name": "announce",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::announce`]."
            ]
          },
          {
            "Name": "remove_announcement",
            "TypeFields": [
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remove_announcement`]."
            ]
          },
          {
            "Name": "reject_announcement",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "call_hash",
                "TypeName": "CallHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::reject_announcement`]."
            ]
          },
          {
            "Name": "proxy_announced",
            "TypeFields": [
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "real",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "force_proxy_type",
                "TypeName": "Option<T::ProxyType>",
                "TypeId": 327
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::proxy_announced`]."
            ]
          }
        ],
        "Path": [
          "pallet_proxy",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "327": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 55
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 55
          }
        ],
        "TypeDef": "Variant"
      },
      "328": {
        "Variants": [
          {
            "Name": "note_preimage",
            "TypeFields": [
              {
                "Name": "bytes",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::note_preimage`]."
            ]
          },
          {
            "Name": "unnote_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::unnote_preimage`]."
            ]
          },
          {
            "Name": "request_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::request_preimage`]."
            ]
          },
          {
            "Name": "unrequest_preimage",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::unrequest_preimage`]."
            ]
          },
          {
            "Name": "ensure_updated",
            "TypeFields": [
              {
                "Name": "hashes",
                "TypeName": "Vec<T::Hash>",
                "TypeId": 155
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::ensure_updated`]."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "329": {
        "Variants": [
          {
            "Name": "add_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add_member`]."
            ]
          },
          {
            "Name": "remove_member",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::remove_member`]."
            ]
          },
          {
            "Name": "swap_member",
            "TypeFields": [
              {
                "Name": "remove",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "add",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::swap_member`]."
            ]
          },
          {
            "Name": "reset_members",
            "TypeFields": [
              {
                "Name": "members",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reset_members`]."
            ]
          },
          {
            "Name": "change_key",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_key`]."
            ]
          },
          {
            "Name": "set_prime",
            "TypeFields": [
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::set_prime`]."
            ]
          },
          {
            "Name": "clear_prime",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "See [`Pallet::clear_prime`]."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "330": {
        "Variants": [
          {
            "Name": "report_awesome",
            "TypeFields": [
              {
                "Name": "reason",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::report_awesome`]."
            ]
          },
          {
            "Name": "retract_tip",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::retract_tip`]."
            ]
          },
          {
            "Name": "tip_new",
            "TypeFields": [
              {
                "Name": "reason",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "tip_value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 72
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::tip_new`]."
            ]
          },
          {
            "Name": "tip",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "tip_value",
                "TypeName": "BalanceOf<T, I>",
                "TypeId": 72
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::tip`]."
            ]
          },
          {
            "Name": "close_tip",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::close_tip`]."
            ]
          },
          {
            "Name": "slash_tip",
            "TypeFields": [
              {
                "Name": "hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::slash_tip`]."
            ]
          }
        ],
        "Path": [
          "pallet_tips",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "331": {
        "Variants": [
          {
            "Name": "as_multi_threshold_1",
            "TypeFields": [
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::as_multi_threshold_1`]."
            ]
          },
          {
            "Name": "as_multi",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              },
              {
                "Name": "maybe_timepoint",
                "TypeName": "Option<Timepoint<BlockNumberFor<T>>>",
                "TypeId": 332
              },
              {
                "Name": "call",
                "TypeName": "Box<<T as Config>::RuntimeCall>",
                "TypeId": 301
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::as_multi`]."
            ]
          },
          {
            "Name": "approve_as_multi",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              },
              {
                "Name": "maybe_timepoint",
                "TypeName": "Option<Timepoint<BlockNumberFor<T>>>",
                "TypeId": 332
              },
              {
                "Name": "call_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::approve_as_multi`]."
            ]
          },
          {
            "Name": "cancel_as_multi",
            "TypeFields": [
              {
                "Name": "threshold",
                "TypeName": "u16",
                "TypeId": 56
              },
              {
                "Name": "other_signatories",
                "TypeName": "Vec<T::AccountId>",
                "TypeId": 157
              },
              {
                "Name": "timepoint",
                "TypeName": "Timepoint<BlockNumberFor<T>>",
                "TypeId": 61
              },
              {
                "Name": "call_hash",
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::cancel_as_multi`]."
            ]
          }
        ],
        "Path": [
          "pallet_multisig",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "332": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 61
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 61
          }
        ],
        "TypeDef": "Variant"
      },
      "333": {
        "Variants": [
          {
            "Name": "set_switch_pair",
            "TypeFields": [
              {
                "Name": "remote_asset_total_supply",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "remote_asset_id",
                "TypeName": "Box<VersionedAssetId>",
                "TypeId": 63
              },
              {
                "Name": "remote_asset_circulating_supply",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "remote_reserve_location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "remote_asset_ed",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "remote_xcm_fee",
                "TypeName": "Box<VersionedAsset>",
                "TypeId": 97
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_switch_pair`]."
            ]
          },
          {
            "Name": "force_set_switch_pair",
            "TypeFields": [
              {
                "Name": "remote_asset_total_supply",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "remote_asset_id",
                "TypeName": "Box<VersionedAssetId>",
                "TypeId": 63
              },
              {
                "Name": "remote_asset_circulating_supply",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "remote_reserve_location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "remote_asset_ed",
                "TypeName": "u128",
                "TypeId": 6
              },
              {
                "Name": "remote_xcm_fee",
                "TypeName": "Box<VersionedAsset>",
                "TypeId": 97
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::force_set_switch_pair`]."
            ]
          },
          {
            "Name": "force_unset_switch_pair",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "See [`Pallet::force_unset_switch_pair`]."
            ]
          },
          {
            "Name": "pause_switch_pair",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::pause_switch_pair`]."
            ]
          },
          {
            "Name": "resume_switch_pair",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "See [`Pallet::resume_switch_pair`]."
            ]
          },
          {
            "Name": "update_remote_xcm_fee",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "Box<VersionedAsset>",
                "TypeId": 97
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::update_remote_xcm_fee`]."
            ]
          },
          {
            "Name": "switch",
            "TypeFields": [
              {
                "Name": "local_asset_amount",
                "TypeName": "LocalCurrencyBalanceOf<T, I>",
                "TypeId": 6
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::switch`]."
            ]
          }
        ],
        "Path": [
          "pallet_asset_switch",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "334": {
        "Variants": [
          {
            "Name": "create",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "admin",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "min_balance",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::create`]."
            ]
          },
          {
            "Name": "force_create",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "is_sufficient",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "min_balance",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::force_create`]."
            ]
          },
          {
            "Name": "start_destroy",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::start_destroy`]."
            ]
          },
          {
            "Name": "destroy_accounts",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::destroy_accounts`]."
            ]
          },
          {
            "Name": "destroy_approvals",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::destroy_approvals`]."
            ]
          },
          {
            "Name": "finish_destroy",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::finish_destroy`]."
            ]
          },
          {
            "Name": "mint",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "beneficiary",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::mint`]."
            ]
          },
          {
            "Name": "burn",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::burn`]."
            ]
          },
          {
            "Name": "transfer",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::transfer`]."
            ]
          },
          {
            "Name": "transfer_keep_alive",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "target",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::transfer_keep_alive`]."
            ]
          },
          {
            "Name": "force_transfer",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "source",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "dest",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::force_transfer`]."
            ]
          },
          {
            "Name": "freeze",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::freeze`]."
            ]
          },
          {
            "Name": "thaw",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::thaw`]."
            ]
          },
          {
            "Name": "freeze_asset",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::freeze_asset`]."
            ]
          },
          {
            "Name": "thaw_asset",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::thaw_asset`]."
            ]
          },
          {
            "Name": "transfer_ownership",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::transfer_ownership`]."
            ]
          },
          {
            "Name": "set_team",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "issuer",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "admin",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "freezer",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::set_team`]."
            ]
          },
          {
            "Name": "set_metadata",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "symbol",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "decimals",
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 17,
            "Docs": [
              "See [`Pallet::set_metadata`]."
            ]
          },
          {
            "Name": "clear_metadata",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 18,
            "Docs": [
              "See [`Pallet::clear_metadata`]."
            ]
          },
          {
            "Name": "force_set_metadata",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "symbol",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "decimals",
                "TypeName": "u8",
                "TypeId": 2
              },
              {
                "Name": "is_frozen",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 19,
            "Docs": [
              "See [`Pallet::force_set_metadata`]."
            ]
          },
          {
            "Name": "force_clear_metadata",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 20,
            "Docs": [
              "See [`Pallet::force_clear_metadata`]."
            ]
          },
          {
            "Name": "force_asset_status",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "issuer",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "admin",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "freezer",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "min_balance",
                "TypeName": "T::Balance",
                "TypeId": 72
              },
              {
                "Name": "is_sufficient",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "is_frozen",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 21,
            "Docs": [
              "See [`Pallet::force_asset_status`]."
            ]
          },
          {
            "Name": "approve_transfer",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 22,
            "Docs": [
              "See [`Pallet::approve_transfer`]."
            ]
          },
          {
            "Name": "cancel_approval",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 23,
            "Docs": [
              "See [`Pallet::cancel_approval`]."
            ]
          },
          {
            "Name": "force_cancel_approval",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "delegate",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 24,
            "Docs": [
              "See [`Pallet::force_cancel_approval`]."
            ]
          },
          {
            "Name": "transfer_approved",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "owner",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "destination",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              },
              {
                "Name": "amount",
                "TypeName": "T::Balance",
                "TypeId": 72
              }
            ],
            "Index": 25,
            "Docs": [
              "See [`Pallet::transfer_approved`]."
            ]
          },
          {
            "Name": "touch",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              }
            ],
            "Index": 26,
            "Docs": [
              "See [`Pallet::touch`]."
            ]
          },
          {
            "Name": "refund",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "allow_burn",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 27,
            "Docs": [
              "See [`Pallet::refund`]."
            ]
          },
          {
            "Name": "set_min_balance",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "min_balance",
                "TypeName": "T::Balance",
                "TypeId": 6
              }
            ],
            "Index": 28,
            "Docs": [
              "See [`Pallet::set_min_balance`]."
            ]
          },
          {
            "Name": "touch_other",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 29,
            "Docs": [
              "See [`Pallet::touch_other`]."
            ]
          },
          {
            "Name": "refund_other",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 30,
            "Docs": [
              "See [`Pallet::refund_other`]."
            ]
          },
          {
            "Name": "block",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "T::AssetIdParameter",
                "TypeId": 76
              },
              {
                "Name": "who",
                "TypeName": "AccountIdLookupOf<T>",
                "TypeId": 241
              }
            ],
            "Index": 31,
            "Docs": [
              "See [`Pallet::block`]."
            ]
          }
        ],
        "Path": [
          "pallet_assets",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "335": {
        "Variants": [
          {
            "Name": "add",
            "TypeFields": [
              {
                "Name": "ctype",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add`]."
            ]
          },
          {
            "Name": "set_block_number",
            "TypeFields": [
              {
                "Name": "ctype_hash",
                "TypeName": "CtypeHashOf<T>",
                "TypeId": 12
              },
              {
                "Name": "block_number",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_block_number`]."
            ]
          }
        ],
        "Path": [
          "ctype",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "336": {
        "Variants": [
          {
            "Name": "add",
            "TypeFields": [
              {
                "Name": "claim_hash",
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              },
              {
                "Name": "ctype_hash",
                "TypeName": "CtypeHashOf<T>",
                "TypeId": 12
              },
              {
                "Name": "authorization",
                "TypeName": "Option<T::AccessControl>",
                "TypeId": 337
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add`]."
            ]
          },
          {
            "Name": "revoke",
            "TypeFields": [
              {
                "Name": "claim_hash",
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              },
              {
                "Name": "authorization",
                "TypeName": "Option<T::AccessControl>",
                "TypeId": 337
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::revoke`]."
            ]
          },
          {
            "Name": "remove",
            "TypeFields": [
              {
                "Name": "claim_hash",
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              },
              {
                "Name": "authorization",
                "TypeName": "Option<T::AccessControl>",
                "TypeId": 337
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::remove`]."
            ]
          },
          {
            "Name": "reclaim_deposit",
            "TypeFields": [
              {
                "Name": "claim_hash",
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::reclaim_deposit`]."
            ]
          },
          {
            "Name": "change_deposit_owner",
            "TypeFields": [
              {
                "Name": "claim_hash",
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::change_deposit_owner`]."
            ]
          },
          {
            "Name": "update_deposit",
            "TypeFields": [
              {
                "Name": "claim_hash",
                "TypeName": "ClaimHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::update_deposit`]."
            ]
          }
        ],
        "Path": [
          "attestation",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "337": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 338
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 338
          }
        ],
        "TypeDef": "Variant"
      },
      "338": {
        "Variants": [
          {
            "Name": "Delegation",
            "TypeFields": [
              {
                "TypeName": "DelegationAc",
                "TypeId": 339
              }
            ],
            "Index": 0
          }
        ],
        "Path": [
          "runtime_common",
          "authorization",
          "PalletAuthorize"
        ],
        "TypeParams": [
          {
            "Name": "DelegationAc",
            "TypeId": 339
          }
        ],
        "TypeDef": "Variant"
      },
      "339": {
        "TypeFields": [
          {
            "Name": "subject_node_id",
            "TypeName": "DelegationNodeIdOf<T>",
            "TypeId": 12
          },
          {
            "Name": "max_checks",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "delegation",
          "access_control",
          "DelegationAc"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 153
          }
        ],
        "TypeDef": "Composite"
      },
      "340": {
        "Variants": [
          {
            "Name": "create_hierarchy",
            "TypeFields": [
              {
                "Name": "root_node_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "ctype_hash",
                "TypeName": "CtypeHashOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::create_hierarchy`]."
            ]
          },
          {
            "Name": "add_delegation",
            "TypeFields": [
              {
                "Name": "delegation_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "parent_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "delegate",
                "TypeName": "DelegatorIdOf<T>",
                "TypeId": 0
              },
              {
                "Name": "permissions",
                "TypeName": "Permissions",
                "TypeId": 116
              },
              {
                "Name": "delegate_signature",
                "TypeName": "DelegateSignatureTypeOf<T>",
                "TypeId": 341
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::add_delegation`]."
            ]
          },
          {
            "Name": "revoke_delegation",
            "TypeFields": [
              {
                "Name": "delegation_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "max_parent_checks",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "max_revocations",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::revoke_delegation`]."
            ]
          },
          {
            "Name": "remove_delegation",
            "TypeFields": [
              {
                "Name": "delegation_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "max_removals",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove_delegation`]."
            ]
          },
          {
            "Name": "reclaim_deposit",
            "TypeFields": [
              {
                "Name": "delegation_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "max_removals",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::reclaim_deposit`]."
            ]
          },
          {
            "Name": "change_deposit_owner",
            "TypeFields": [
              {
                "Name": "delegation_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::change_deposit_owner`]."
            ]
          },
          {
            "Name": "update_deposit",
            "TypeFields": [
              {
                "Name": "delegation_id",
                "TypeName": "DelegationNodeIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::update_deposit`]."
            ]
          }
        ],
        "Path": [
          "delegation",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "341": {
        "Variants": [
          {
            "Name": "Ed25519",
            "TypeFields": [
              {
                "TypeName": "ed25519::Signature",
                "TypeId": 342
              }
            ],
            "Index": 0
          },
          {
            "Name": "Sr25519",
            "TypeFields": [
              {
                "TypeName": "sr25519::Signature",
                "TypeId": 344
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ecdsa",
            "TypeFields": [
              {
                "TypeName": "ecdsa::Signature",
                "TypeId": 345
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidSignature"
        ],
        "TypeDef": "Variant"
      },
      "342": {
        "TypeFields": [
          {
            "TypeName": "[u8; 64]",
            "TypeId": 343
          }
        ],
        "Path": [
          "sp_core",
          "ed25519",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "343": {
        "Length": 64,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "344": {
        "TypeFields": [
          {
            "TypeName": "[u8; 64]",
            "TypeId": 343
          }
        ],
        "Path": [
          "sp_core",
          "sr25519",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "345": {
        "TypeFields": [
          {
            "TypeName": "[u8; SIGNATURE_SERIALIZED_SIZE]",
            "TypeId": 346
          }
        ],
        "Path": [
          "sp_core",
          "ecdsa",
          "Signature"
        ],
        "TypeDef": "Composite"
      },
      "346": {
        "Length": 65,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "347": {
        "Variants": [
          {
            "Name": "create",
            "TypeFields": [
              {
                "Name": "details",
                "TypeName": "Box<DidCreationDetailsOf<T>>",
                "TypeId": 348
              },
              {
                "Name": "signature",
                "TypeName": "DidSignature",
                "TypeId": 341
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::create`]."
            ]
          },
          {
            "Name": "set_authentication_key",
            "TypeFields": [
              {
                "Name": "new_key",
                "TypeName": "DidVerificationKey<AccountIdOf<T>>",
                "TypeId": 363
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::set_authentication_key`]."
            ]
          },
          {
            "Name": "set_delegation_key",
            "TypeFields": [
              {
                "Name": "new_key",
                "TypeName": "DidVerificationKey<AccountIdOf<T>>",
                "TypeId": 363
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::set_delegation_key`]."
            ]
          },
          {
            "Name": "remove_delegation_key",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove_delegation_key`]."
            ]
          },
          {
            "Name": "set_attestation_key",
            "TypeFields": [
              {
                "Name": "new_key",
                "TypeName": "DidVerificationKey<AccountIdOf<T>>",
                "TypeId": 363
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::set_attestation_key`]."
            ]
          },
          {
            "Name": "remove_attestation_key",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "See [`Pallet::remove_attestation_key`]."
            ]
          },
          {
            "Name": "add_key_agreement_key",
            "TypeFields": [
              {
                "Name": "new_key",
                "TypeName": "DidEncryptionKey",
                "TypeId": 359
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::add_key_agreement_key`]."
            ]
          },
          {
            "Name": "remove_key_agreement_key",
            "TypeFields": [
              {
                "Name": "key_id",
                "TypeName": "KeyIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::remove_key_agreement_key`]."
            ]
          },
          {
            "Name": "add_service_endpoint",
            "TypeFields": [
              {
                "Name": "service_endpoint",
                "TypeName": "DidEndpoint<T>",
                "TypeId": 350
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::add_service_endpoint`]."
            ]
          },
          {
            "Name": "remove_service_endpoint",
            "TypeFields": [
              {
                "Name": "service_id",
                "TypeName": "ServiceEndpointId<T>",
                "TypeId": 351
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::remove_service_endpoint`]."
            ]
          },
          {
            "Name": "delete",
            "TypeFields": [
              {
                "Name": "endpoints_to_remove",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::delete`]."
            ]
          },
          {
            "Name": "reclaim_deposit",
            "TypeFields": [
              {
                "Name": "did_subject",
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              },
              {
                "Name": "endpoints_to_remove",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::reclaim_deposit`]."
            ]
          },
          {
            "Name": "submit_did_call",
            "TypeFields": [
              {
                "Name": "did_call",
                "TypeName": "Box<DidAuthorizedCallOperationOf<T>>",
                "TypeId": 368
              },
              {
                "Name": "signature",
                "TypeName": "DidSignature",
                "TypeId": 341
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::submit_did_call`]."
            ]
          },
          {
            "Name": "change_deposit_owner",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "See [`Pallet::change_deposit_owner`]."
            ]
          },
          {
            "Name": "update_deposit",
            "TypeFields": [
              {
                "Name": "did",
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              }
            ],
            "Index": 14,
            "Docs": [
              "See [`Pallet::update_deposit`]."
            ]
          },
          {
            "Name": "dispatch_as",
            "TypeFields": [
              {
                "Name": "did_identifier",
                "TypeName": "DidIdentifierOf<T>",
                "TypeId": 0
              },
              {
                "Name": "call",
                "TypeName": "Box<DidCallableOf<T>>",
                "TypeId": 301
              }
            ],
            "Index": 15,
            "Docs": [
              "See [`Pallet::dispatch_as`]."
            ]
          },
          {
            "Name": "create_from_account",
            "TypeFields": [
              {
                "Name": "authentication_key",
                "TypeName": "DidVerificationKey<AccountIdOf<T>>",
                "TypeId": 363
              }
            ],
            "Index": 16,
            "Docs": [
              "See [`Pallet::create_from_account`]."
            ]
          }
        ],
        "Path": [
          "did",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "348": {
        "TypeFields": [
          {
            "Name": "did",
            "TypeName": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "submitter",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "new_key_agreement_keys",
            "TypeName": "DidNewKeyAgreementKeySet<MaxNewKeyAgreementKeys>",
            "TypeId": 358
          },
          {
            "Name": "new_attestation_key",
            "TypeName": "Option<DidVerificationKey<AccountId>>",
            "TypeId": 362
          },
          {
            "Name": "new_delegation_key",
            "TypeName": "Option<DidVerificationKey<AccountId>>",
            "TypeId": 362
          },
          {
            "Name": "new_service_details",
            "TypeName": "Vec<DidEndpoint>",
            "TypeId": 367
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidCreationDetails"
        ],
        "TypeParams": [
          {
            "Name": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "MaxNewKeyAgreementKeys",
            "TypeId": 349
          },
          {
            "Name": "DidEndpoint",
            "TypeId": 350
          }
        ],
        "TypeDef": "Composite"
      },
      "349": {
        "Path": [
          "runtime_common",
          "constants",
          "did",
          "MaxNewKeyAgreementKeys"
        ],
        "TypeDef": "Composite"
      },
      "350": {
        "TypeFields": [
          {
            "Name": "id",
            "TypeName": "ServiceEndpointId<T>",
            "TypeId": 351
          },
          {
            "Name": "service_types",
            "TypeName": "ServiceEndpointTypeEntries<T>",
            "TypeId": 352
          },
          {
            "Name": "urls",
            "TypeName": "ServiceEndpointUrlEntries<T>",
            "TypeId": 355
          }
        ],
        "Path": [
          "did",
          "service_endpoints",
          "DidEndpoint"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "351": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "352": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 354
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 353
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "353": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "354": {
        "TypeId": 353,
        "TypeDef": "Sequence"
      },
      "355": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 357
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 356
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "356": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "357": {
        "TypeId": 356,
        "TypeDef": "Sequence"
      },
      "358": {
        "TypeFields": [
          {
            "TypeName": "BTreeSet<T>",
            "TypeId": 360
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_set",
          "BoundedBTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 359
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "359": {
        "Variants": [
          {
            "Name": "X25519",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 0
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidEncryptionKey"
        ],
        "TypeDef": "Variant"
      },
      "360": {
        "TypeFields": [
          {
            "TypeId": 361
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 359
          }
        ],
        "TypeDef": "Composite"
      },
      "361": {
        "TypeId": 359,
        "TypeDef": "Sequence"
      },
      "362": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 363
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 363
          }
        ],
        "TypeDef": "Variant"
      },
      "363": {
        "Variants": [
          {
            "Name": "Ed25519",
            "TypeFields": [
              {
                "TypeName": "ed25519::Public",
                "TypeId": 364
              }
            ],
            "Index": 0
          },
          {
            "Name": "Sr25519",
            "TypeFields": [
              {
                "TypeName": "sr25519::Public",
                "TypeId": 266
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ecdsa",
            "TypeFields": [
              {
                "TypeName": "ecdsa::Public",
                "TypeId": 365
              }
            ],
            "Index": 2
          },
          {
            "Name": "Account",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidVerificationKey"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "364": {
        "TypeFields": [
          {
            "TypeName": "[u8; 32]",
            "TypeId": 1
          }
        ],
        "Path": [
          "sp_core",
          "ed25519",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "365": {
        "TypeFields": [
          {
            "TypeName": "[u8; PUBLIC_KEY_SERIALIZED_SIZE]",
            "TypeId": 366
          }
        ],
        "Path": [
          "sp_core",
          "ecdsa",
          "Public"
        ],
        "TypeDef": "Composite"
      },
      "366": {
        "Length": 33,
        "TypeId": 2,
        "TypeDef": "Array"
      },
      "367": {
        "TypeId": 350,
        "TypeDef": "Sequence"
      },
      "368": {
        "TypeFields": [
          {
            "Name": "did",
            "TypeName": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "tx_counter",
            "TypeName": "TxCounter",
            "TypeId": 4
          },
          {
            "Name": "call",
            "TypeName": "DidCallable",
            "TypeId": 301
          },
          {
            "Name": "block_number",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "submitter",
            "TypeName": "AccountId",
            "TypeId": 0
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidAuthorizedCallOperation"
        ],
        "TypeParams": [
          {
            "Name": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "DidCallable",
            "TypeId": 301
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "TxCounter",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "369": {
        "Variants": [
          {
            "Name": "associate_account",
            "TypeFields": [
              {
                "Name": "req",
                "TypeName": "AssociateAccountRequest",
                "TypeId": 370
              },
              {
                "Name": "expiration",
                "TypeName": "BlockNumberFor<T>",
                "TypeId": 4
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::associate_account`]."
            ]
          },
          {
            "Name": "associate_sender",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::associate_sender`]."
            ]
          },
          {
            "Name": "remove_sender_association",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "See [`Pallet::remove_sender_association`]."
            ]
          },
          {
            "Name": "remove_account_association",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "LinkableAccountId",
                "TypeId": 119
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove_account_association`]."
            ]
          },
          {
            "Name": "reclaim_deposit",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "LinkableAccountId",
                "TypeId": 119
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::reclaim_deposit`]."
            ]
          },
          {
            "Name": "change_deposit_owner",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "LinkableAccountId",
                "TypeId": 119
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::change_deposit_owner`]."
            ]
          },
          {
            "Name": "update_deposit",
            "TypeFields": [
              {
                "Name": "account",
                "TypeName": "LinkableAccountId",
                "TypeId": 119
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::update_deposit`]."
            ]
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "370": {
        "Variants": [
          {
            "Name": "Polkadot",
            "TypeFields": [
              {
                "TypeName": "AccountId32",
                "TypeId": 0
              },
              {
                "TypeName": "MultiSignature",
                "TypeId": 371
              }
            ],
            "Index": 0
          },
          {
            "Name": "Ethereum",
            "TypeFields": [
              {
                "TypeName": "AccountId20",
                "TypeId": 120
              },
              {
                "TypeName": "EthereumSignature",
                "TypeId": 372
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "associate_account_request",
          "AssociateAccountRequest"
        ],
        "TypeDef": "Variant"
      },
      "371": {
        "Variants": [
          {
            "Name": "Ed25519",
            "TypeFields": [
              {
                "TypeName": "ed25519::Signature",
                "TypeId": 342
              }
            ],
            "Index": 0
          },
          {
            "Name": "Sr25519",
            "TypeFields": [
              {
                "TypeName": "sr25519::Signature",
                "TypeId": 344
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ecdsa",
            "TypeFields": [
              {
                "TypeName": "ecdsa::Signature",
                "TypeId": 345
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "sp_runtime",
          "MultiSignature"
        ],
        "TypeDef": "Variant"
      },
      "372": {
        "TypeFields": [
          {
            "TypeName": "ecdsa::Signature",
            "TypeId": 345
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "account",
          "EthereumSignature"
        ],
        "TypeDef": "Composite"
      },
      "373": {
        "Variants": [
          {
            "Name": "claim",
            "TypeFields": [
              {
                "Name": "name",
                "TypeName": "Web3NameInput<T>",
                "TypeId": 123
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::claim`]."
            ]
          },
          {
            "Name": "release_by_owner",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::release_by_owner`]."
            ]
          },
          {
            "Name": "reclaim_deposit",
            "TypeFields": [
              {
                "Name": "name",
                "TypeName": "Web3NameInput<T>",
                "TypeId": 123
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::reclaim_deposit`]."
            ]
          },
          {
            "Name": "ban",
            "TypeFields": [
              {
                "Name": "name",
                "TypeName": "Web3NameInput<T>",
                "TypeId": 123
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::ban`]."
            ]
          },
          {
            "Name": "unban",
            "TypeFields": [
              {
                "Name": "name",
                "TypeName": "Web3NameInput<T>",
                "TypeId": 123
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::unban`]."
            ]
          },
          {
            "Name": "change_deposit_owner",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "See [`Pallet::change_deposit_owner`]."
            ]
          },
          {
            "Name": "update_deposit",
            "TypeFields": [
              {
                "Name": "name_input",
                "TypeName": "Web3NameInput<T>",
                "TypeId": 123
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::update_deposit`]."
            ]
          }
        ],
        "Path": [
          "pallet_web3_names",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "374": {
        "Variants": [
          {
            "Name": "add",
            "TypeFields": [
              {
                "Name": "credential",
                "TypeName": "Box<InputCredentialOf<T>>",
                "TypeId": 375
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::add`]."
            ]
          },
          {
            "Name": "revoke",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "authorization",
                "TypeName": "Option<T::AccessControl>",
                "TypeId": 337
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::revoke`]."
            ]
          },
          {
            "Name": "unrevoke",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "authorization",
                "TypeName": "Option<T::AccessControl>",
                "TypeId": 337
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::unrevoke`]."
            ]
          },
          {
            "Name": "remove",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12
              },
              {
                "Name": "authorization",
                "TypeName": "Option<T::AccessControl>",
                "TypeId": 337
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::remove`]."
            ]
          },
          {
            "Name": "reclaim_deposit",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::reclaim_deposit`]."
            ]
          },
          {
            "Name": "change_deposit_owner",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::change_deposit_owner`]."
            ]
          },
          {
            "Name": "update_deposit",
            "TypeFields": [
              {
                "Name": "credential_id",
                "TypeName": "CredentialIdOf<T>",
                "TypeId": 12
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::update_deposit`]."
            ]
          }
        ],
        "Path": [
          "public_credentials",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "375": {
        "TypeFields": [
          {
            "Name": "ctype_hash",
            "TypeName": "CtypeHash",
            "TypeId": 12
          },
          {
            "Name": "subject",
            "TypeName": "SubjectIdentifier",
            "TypeId": 376
          },
          {
            "Name": "claims",
            "TypeName": "Claims",
            "TypeId": 377
          },
          {
            "Name": "authorization",
            "TypeName": "Option<AccessControl>",
            "TypeId": 337
          }
        ],
        "Path": [
          "public_credentials",
          "credentials",
          "Credential"
        ],
        "TypeParams": [
          {
            "Name": "CtypeHash",
            "TypeId": 12
          },
          {
            "Name": "SubjectIdentifier",
            "TypeId": 376
          },
          {
            "Name": "Claims",
            "TypeId": 377
          },
          {
            "Name": "AccessControl",
            "TypeId": 338
          }
        ],
        "TypeDef": "Composite"
      },
      "376": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "377": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "378": {
        "Variants": [
          {
            "Name": "update_balance",
            "TypeFields": [
              {
                "Name": "requested_migrations",
                "TypeName": "EntriesToMigrate<T>",
                "TypeId": 152
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::update_balance`]."
            ]
          }
        ],
        "Path": [
          "pallet_migration",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "379": {
        "Variants": [
          {
            "Name": "commit_identity",
            "TypeFields": [
              {
                "Name": "identifier",
                "TypeName": "T::Identifier",
                "TypeId": 0
              },
              {
                "Name": "version",
                "TypeName": "Option<IdentityCommitmentVersion>",
                "TypeId": 380
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::commit_identity`]."
            ]
          },
          {
            "Name": "delete_identity_commitment",
            "TypeFields": [
              {
                "Name": "identifier",
                "TypeName": "T::Identifier",
                "TypeId": 0
              },
              {
                "Name": "version",
                "TypeName": "Option<IdentityCommitmentVersion>",
                "TypeId": 380
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::delete_identity_commitment`]."
            ]
          }
        ],
        "Path": [
          "pallet_dip_provider",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "380": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 56
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 56
          }
        ],
        "TypeDef": "Variant"
      },
      "381": {
        "Variants": [
          {
            "Name": "reclaim_deposit",
            "TypeFields": [
              {
                "Name": "namespace",
                "TypeName": "T::Namespace",
                "TypeId": 167
              },
              {
                "Name": "key",
                "TypeName": "DepositKeyOf<T>",
                "TypeId": 168
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::reclaim_deposit`]."
            ]
          }
        ],
        "Path": [
          "pallet_deposit_storage",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "382": {
        "Variants": [
          {
            "Name": "set_validation_data",
            "TypeFields": [
              {
                "Name": "data",
                "TypeName": "ParachainInherentData",
                "TypeId": 383
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::set_validation_data`]."
            ]
          },
          {
            "Name": "sudo_send_upward_message",
            "TypeFields": [
              {
                "Name": "message",
                "TypeName": "UpwardMessage",
                "TypeId": 13
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::sudo_send_upward_message`]."
            ]
          },
          {
            "Name": "authorize_upgrade",
            "TypeFields": [
              {
                "Name": "code_hash",
                "TypeName": "T::Hash",
                "TypeId": 12
              },
              {
                "Name": "check_version",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::authorize_upgrade`]."
            ]
          },
          {
            "Name": "enact_authorized_upgrade",
            "TypeFields": [
              {
                "Name": "code",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::enact_authorized_upgrade`]."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "383": {
        "TypeFields": [
          {
            "Name": "validation_data",
            "TypeName": "PersistedValidationData",
            "TypeId": 384
          },
          {
            "Name": "relay_chain_state",
            "TypeName": "sp_trie::StorageProof",
            "TypeId": 386
          },
          {
            "Name": "downward_messages",
            "TypeName": "Vec<InboundDownwardMessage>",
            "TypeId": 388
          },
          {
            "Name": "horizontal_messages",
            "TypeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
            "TypeId": 390
          }
        ],
        "Path": [
          "cumulus_primitives_parachain_inherent",
          "ParachainInherentData"
        ],
        "TypeDef": "Composite"
      },
      "384": {
        "TypeFields": [
          {
            "Name": "parent_head",
            "TypeName": "HeadData",
            "TypeId": 385
          },
          {
            "Name": "relay_parent_number",
            "TypeName": "N",
            "TypeId": 8
          },
          {
            "Name": "relay_parent_storage_root",
            "TypeName": "H",
            "TypeId": 12
          },
          {
            "Name": "max_pov_size",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "PersistedValidationData"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          },
          {
            "Name": "N",
            "TypeId": 8
          }
        ],
        "TypeDef": "Composite"
      },
      "385": {
        "TypeFields": [
          {
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_parachain_primitives",
          "primitives",
          "HeadData"
        ],
        "TypeDef": "Composite"
      },
      "386": {
        "TypeFields": [
          {
            "Name": "trie_nodes",
            "TypeName": "BTreeSet<Vec<u8>>",
            "TypeId": 387
          }
        ],
        "Path": [
          "sp_trie",
          "storage_proof",
          "StorageProof"
        ],
        "TypeDef": "Composite"
      },
      "387": {
        "TypeFields": [
          {
            "TypeId": 225
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 13
          }
        ],
        "TypeDef": "Composite"
      },
      "388": {
        "TypeId": 389,
        "TypeDef": "Sequence"
      },
      "389": {
        "TypeFields": [
          {
            "Name": "sent_at",
            "TypeName": "BlockNumber",
            "TypeId": 8
          },
          {
            "Name": "msg",
            "TypeName": "DownwardMessage",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "InboundDownwardMessage"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 8
          }
        ],
        "TypeDef": "Composite"
      },
      "390": {
        "TypeFields": [
          {
            "TypeId": 393
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 215
          },
          {
            "Name": "V",
            "TypeId": 391
          }
        ],
        "TypeDef": "Composite"
      },
      "391": {
        "TypeId": 392,
        "TypeDef": "Sequence"
      },
      "392": {
        "TypeFields": [
          {
            "Name": "sent_at",
            "TypeName": "BlockNumber",
            "TypeId": 8
          },
          {
            "Name": "data",
            "TypeName": "sp_std::vec::Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "InboundHrmpMessage"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 8
          }
        ],
        "TypeDef": "Composite"
      },
      "393": {
        "TypeId": 394,
        "TypeDef": "Sequence"
      },
      "394": {
        "TypeIds": [
          215,
          391
        ],
        "TypeDef": "Tuple"
      },
      "395": {
        "Variants": null,
        "Path": [
          "staging_parachain_info",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "396": {
        "Variants": [
          {
            "Name": "suspend_xcm_execution",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "See [`Pallet::suspend_xcm_execution`]."
            ]
          },
          {
            "Name": "resume_xcm_execution",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "See [`Pallet::resume_xcm_execution`]."
            ]
          },
          {
            "Name": "update_suspend_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::update_suspend_threshold`]."
            ]
          },
          {
            "Name": "update_drop_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::update_drop_threshold`]."
            ]
          },
          {
            "Name": "update_resume_threshold",
            "TypeFields": [
              {
                "Name": "new",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::update_resume_threshold`]."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "397": {
        "Variants": [
          {
            "Name": "send",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "message",
                "TypeName": "Box<VersionedXcm<()>>",
                "TypeId": 398
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::send`]."
            ]
          },
          {
            "Name": "teleport_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 207
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::teleport_assets`]."
            ]
          },
          {
            "Name": "reserve_transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 207
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 2,
            "Docs": [
              "See [`Pallet::reserve_transfer_assets`]."
            ]
          },
          {
            "Name": "execute",
            "TypeFields": [
              {
                "Name": "message",
                "TypeName": "Box<VersionedXcm<<T as Config>::RuntimeCall>>",
                "TypeId": 423
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 3,
            "Docs": [
              "See [`Pallet::execute`]."
            ]
          },
          {
            "Name": "force_xcm_version",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<Location>",
                "TypeId": 76
              },
              {
                "Name": "version",
                "TypeName": "XcmVersion",
                "TypeId": 8
              }
            ],
            "Index": 4,
            "Docs": [
              "See [`Pallet::force_xcm_version`]."
            ]
          },
          {
            "Name": "force_default_xcm_version",
            "TypeFields": [
              {
                "Name": "maybe_xcm_version",
                "TypeName": "Option<XcmVersion>",
                "TypeId": 304
              }
            ],
            "Index": 5,
            "Docs": [
              "See [`Pallet::force_default_xcm_version`]."
            ]
          },
          {
            "Name": "force_subscribe_version_notify",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              }
            ],
            "Index": 6,
            "Docs": [
              "See [`Pallet::force_subscribe_version_notify`]."
            ]
          },
          {
            "Name": "force_unsubscribe_version_notify",
            "TypeFields": [
              {
                "Name": "location",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              }
            ],
            "Index": 7,
            "Docs": [
              "See [`Pallet::force_unsubscribe_version_notify`]."
            ]
          },
          {
            "Name": "limited_reserve_transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 207
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 8,
            "Docs": [
              "See [`Pallet::limited_reserve_transfer_assets`]."
            ]
          },
          {
            "Name": "limited_teleport_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 207
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 9,
            "Docs": [
              "See [`Pallet::limited_teleport_assets`]."
            ]
          },
          {
            "Name": "force_suspension",
            "TypeFields": [
              {
                "Name": "suspended",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 10,
            "Docs": [
              "See [`Pallet::force_suspension`]."
            ]
          },
          {
            "Name": "transfer_assets",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 207
              },
              {
                "Name": "fee_asset_item",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 11,
            "Docs": [
              "See [`Pallet::transfer_assets`]."
            ]
          },
          {
            "Name": "claim_assets",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 207
              },
              {
                "Name": "beneficiary",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              }
            ],
            "Index": 12,
            "Docs": [
              "See [`Pallet::claim_assets`]."
            ]
          },
          {
            "Name": "transfer_assets_using_type_and_then",
            "TypeFields": [
              {
                "Name": "dest",
                "TypeName": "Box<VersionedLocation>",
                "TypeId": 89
              },
              {
                "Name": "assets",
                "TypeName": "Box<VersionedAssets>",
                "TypeId": 207
              },
              {
                "Name": "assets_transfer_type",
                "TypeName": "Box<TransferType>",
                "TypeId": 434
              },
              {
                "Name": "remote_fees_id",
                "TypeName": "Box<VersionedAssetId>",
                "TypeId": 63
              },
              {
                "Name": "fees_transfer_type",
                "TypeName": "Box<TransferType>",
                "TypeId": 434
              },
              {
                "Name": "custom_xcm_on_dest",
                "TypeName": "Box<VersionedXcm<()>>",
                "TypeId": 398
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 13,
            "Docs": [
              "See [`Pallet::transfer_assets_using_type_and_then`]."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "398": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Xcm<RuntimeCall>",
                "TypeId": 399
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Xcm<RuntimeCall>",
                "TypeId": 410
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Xcm<RuntimeCall>",
                "TypeId": 185
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedXcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "399": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<RuntimeCall>>",
            "TypeId": 400
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Composite"
      },
      "400": {
        "TypeId": 401,
        "TypeDef": "Sequence"
      },
      "401": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 402
              },
              {
                "Name": "max_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 208
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 208
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_type",
                "TypeName": "OriginKind",
                "TypeId": 200
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<RuntimeCall>",
                "TypeId": 201
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 91
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "receive",
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 17
          },
          {
            "Name": "QueryHolding",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 98
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 409
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 399
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 399
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 208
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "402": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 403
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 8
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "403": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 404
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 404
          }
        ],
        "TypeDef": "Variant"
      },
      "404": {
        "TypeIds": [
          8,
          405
        ],
        "TypeDef": "Tuple"
      },
      "405": {
        "Variants": [
          {
            "Name": "Overflow",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Unimplemented",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "UntrustedReserveLocation",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "UntrustedTeleportLocation",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "MultiLocationFull",
            "TypeFields": null,
            "Index": 4
          },
          {
            "Name": "MultiLocationNotInvertible",
            "TypeFields": null,
            "Index": 5
          },
          {
            "Name": "BadOrigin",
            "TypeFields": null,
            "Index": 6
          },
          {
            "Name": "InvalidLocation",
            "TypeFields": null,
            "Index": 7
          },
          {
            "Name": "AssetNotFound",
            "TypeFields": null,
            "Index": 8
          },
          {
            "Name": "FailedToTransactAsset",
            "TypeFields": null,
            "Index": 9
          },
          {
            "Name": "NotWithdrawable",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "LocationCannotHold",
            "TypeFields": null,
            "Index": 11
          },
          {
            "Name": "ExceedsMaxMessageSize",
            "TypeFields": null,
            "Index": 12
          },
          {
            "Name": "DestinationUnsupported",
            "TypeFields": null,
            "Index": 13
          },
          {
            "Name": "Transport",
            "TypeFields": null,
            "Index": 14
          },
          {
            "Name": "Unroutable",
            "TypeFields": null,
            "Index": 15
          },
          {
            "Name": "UnknownClaim",
            "TypeFields": null,
            "Index": 16
          },
          {
            "Name": "FailedToDecode",
            "TypeFields": null,
            "Index": 17
          },
          {
            "Name": "MaxWeightInvalid",
            "TypeFields": null,
            "Index": 18
          },
          {
            "Name": "NotHoldingFees",
            "TypeFields": null,
            "Index": 19
          },
          {
            "Name": "TooExpensive",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 4
              }
            ],
            "Index": 21
          },
          {
            "Name": "UnhandledXcmVersion",
            "TypeFields": null,
            "Index": 22
          },
          {
            "Name": "WeightLimitReached",
            "TypeFields": [
              {
                "TypeName": "Weight",
                "TypeId": 4
              }
            ],
            "Index": 23
          },
          {
            "Name": "Barrier",
            "TypeFields": null,
            "Index": 24
          },
          {
            "Name": "WeightNotComputable",
            "TypeFields": null,
            "Index": 25
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "traits",
          "Error"
        ],
        "TypeDef": "Variant"
      },
      "406": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildMultiAsset",
                "TypeId": 407
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "MultiAssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "407": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 99
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 408
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "WildMultiAsset"
        ],
        "TypeDef": "Variant"
      },
      "408": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "multiasset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "409": {
        "Variants": [
          {
            "Name": "Unlimited",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Limited",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "WeightLimit"
        ],
        "TypeDef": "Variant"
      },
      "410": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 411
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "411": {
        "TypeId": 412,
        "TypeDef": "Sequence"
      },
      "412": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 413
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "querier",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 418
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 200
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 201
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 66
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "want",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 410
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 410
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<MultiLocation>",
                "TypeId": 418
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 191
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 197
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 70
              },
              {
                "Name": "destination",
                "TypeName": "InteriorMultiLocation",
                "TypeId": 66
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "unlocker",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "target",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "owner",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "locker",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 418
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "413": {
        "Variants": [
          {
            "Name": "Null",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Assets",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 1
          },
          {
            "Name": "ExecutionResult",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 191
              }
            ],
            "Index": 2
          },
          {
            "Name": "Version",
            "TypeFields": [
              {
                "TypeName": "super::Version",
                "TypeId": 8
              }
            ],
            "Index": 3
          },
          {
            "Name": "PalletsInfo",
            "TypeFields": [
              {
                "TypeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                "TypeId": 414
              }
            ],
            "Index": 4
          },
          {
            "Name": "DispatchResult",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 197
              }
            ],
            "Index": 5
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Response"
        ],
        "TypeDef": "Variant"
      },
      "414": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 417
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 415
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "415": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "u32",
            "TypeId": 68
          },
          {
            "Name": "name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 416
          },
          {
            "Name": "module_name",
            "TypeName": "BoundedVec<u8, MaxPalletNameLen>",
            "TypeId": 416
          },
          {
            "Name": "major",
            "TypeName": "u32",
            "TypeId": 68
          },
          {
            "Name": "minor",
            "TypeName": "u32",
            "TypeId": 68
          },
          {
            "Name": "patch",
            "TypeName": "u32",
            "TypeId": 68
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "PalletInfo"
        ],
        "TypeDef": "Composite"
      },
      "416": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "417": {
        "TypeId": 415,
        "TypeDef": "Sequence"
      },
      "418": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 65
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 65
          }
        ],
        "TypeDef": "Variant"
      },
      "419": {
        "TypeFields": [
          {
            "Name": "destination",
            "TypeName": "MultiLocation",
            "TypeId": 65
          },
          {
            "Name": "query_id",
            "TypeName": "QueryId",
            "TypeId": 11
          },
          {
            "Name": "max_weight",
            "TypeName": "Weight",
            "TypeId": 10
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "QueryResponseInfo"
        ],
        "TypeDef": "Composite"
      },
      "420": {
        "Variants": [
          {
            "Name": "Definite",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 0
          },
          {
            "Name": "Wild",
            "TypeFields": [
              {
                "TypeName": "WildMultiAsset",
                "TypeId": 421
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "MultiAssetFilter"
        ],
        "TypeDef": "Variant"
      },
      "421": {
        "Variants": [
          {
            "Name": "All",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "AllOf",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 64
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 422
              }
            ],
            "Index": 1
          },
          {
            "Name": "AllCounted",
            "TypeFields": [
              {
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 2
          },
          {
            "Name": "AllOfCounted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "AssetId",
                "TypeId": 64
              },
              {
                "Name": "fun",
                "TypeName": "WildFungibility",
                "TypeId": 422
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "WildMultiAsset"
        ],
        "TypeDef": "Variant"
      },
      "422": {
        "Variants": [
          {
            "Name": "Fungible",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "NonFungible",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "multiasset",
          "WildFungibility"
        ],
        "TypeDef": "Variant"
      },
      "423": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Xcm<RuntimeCall>",
                "TypeId": 424
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Xcm<RuntimeCall>",
                "TypeId": 428
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Xcm<RuntimeCall>",
                "TypeId": 431
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedXcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "424": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<RuntimeCall>>",
            "TypeId": 425
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Composite"
      },
      "425": {
        "TypeId": 426,
        "TypeDef": "Sequence"
      },
      "426": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 402
              },
              {
                "Name": "max_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 208
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 208
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_type",
                "TypeName": "OriginKind",
                "TypeId": 200
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "u64",
                "TypeId": 11
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<RuntimeCall>",
                "TypeId": 427
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 91
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "max_assets",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "receive",
                "TypeName": "MultiAssets",
                "TypeId": 208
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 399
              }
            ],
            "Index": 17
          },
          {
            "Name": "QueryHolding",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 90
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 406
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 98
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 409
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 424
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<RuntimeCall>",
                "TypeId": 424
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 208
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 90
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "max_response_weight",
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          }
        ],
        "Path": [
          "xcm",
          "v2",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "RuntimeCall"
          }
        ],
        "TypeDef": "Variant"
      },
      "427": {
        "TypeFields": [
          {
            "Name": "encoded",
            "TypeName": "Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "xcm",
          "double_encoded",
          "DoubleEncoded"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "428": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 429
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "429": {
        "TypeId": 430,
        "TypeDef": "Sequence"
      },
      "430": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 413
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "querier",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 418
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 200
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 427
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorMultiLocation",
                "TypeId": 66
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "beneficiary",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "want",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "reserve",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              },
              {
                "Name": "dest",
                "TypeName": "MultiLocation",
                "TypeId": 65
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              },
              {
                "Name": "assets",
                "TypeName": "MultiAssetFilter",
                "TypeId": 420
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 428
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 428
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "MultiAssets",
                "TypeId": 210
              },
              {
                "Name": "ticket",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "MultiAssets",
                "TypeId": 210
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<MultiLocation>",
                "TypeId": 418
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 191
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 197
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 419
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 67
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 70
              },
              {
                "Name": "destination",
                "TypeName": "InteriorMultiLocation",
                "TypeId": 66
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 410
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "unlocker",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "target",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "owner",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "MultiAsset",
                "TypeId": 104
              },
              {
                "Name": "locker",
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "MultiLocation",
                "TypeId": 65
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<MultiLocation>",
                "TypeId": 418
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "xcm",
          "v3",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "431": {
        "TypeFields": [
          {
            "TypeName": "Vec<Instruction<Call>>",
            "TypeId": 432
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Xcm"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Composite"
      },
      "432": {
        "TypeId": 433,
        "TypeDef": "Sequence"
      },
      "433": {
        "Variants": [
          {
            "Name": "WithdrawAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 0
          },
          {
            "Name": "ReserveAssetDeposited",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 1
          },
          {
            "Name": "ReceiveTeleportedAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 2
          },
          {
            "Name": "QueryResponse",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "response",
                "TypeName": "Response",
                "TypeId": 190
              },
              {
                "Name": "max_weight",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "querier",
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 3
          },
          {
            "Name": "TransferAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 4
          },
          {
            "Name": "TransferReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 5
          },
          {
            "Name": "Transact",
            "TypeFields": [
              {
                "Name": "origin_kind",
                "TypeName": "OriginKind",
                "TypeId": 200
              },
              {
                "Name": "require_weight_at_most",
                "TypeName": "Weight",
                "TypeId": 10
              },
              {
                "Name": "call",
                "TypeName": "DoubleEncoded<Call>",
                "TypeId": 427
              }
            ],
            "Index": 6
          },
          {
            "Name": "HrmpNewChannelOpenRequest",
            "TypeFields": [
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_message_size",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "max_capacity",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 7
          },
          {
            "Name": "HrmpChannelAccepted",
            "TypeFields": [
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 8
          },
          {
            "Name": "HrmpChannelClosing",
            "TypeFields": [
              {
                "Name": "initiator",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "sender",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "recipient",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 9
          },
          {
            "Name": "ClearOrigin",
            "TypeFields": null,
            "Index": 10
          },
          {
            "Name": "DescendOrigin",
            "TypeFields": [
              {
                "TypeName": "InteriorLocation",
                "TypeId": 77
              }
            ],
            "Index": 11
          },
          {
            "Name": "ReportError",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              }
            ],
            "Index": 12
          },
          {
            "Name": "DepositAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "beneficiary",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 13
          },
          {
            "Name": "DepositReserveAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 14
          },
          {
            "Name": "ExchangeAsset",
            "TypeFields": [
              {
                "Name": "give",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "want",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "maximal",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 15
          },
          {
            "Name": "InitiateReserveWithdraw",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "reserve",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 16
          },
          {
            "Name": "InitiateTeleport",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              },
              {
                "Name": "dest",
                "TypeName": "Location",
                "TypeId": 76
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 17
          },
          {
            "Name": "ReportHolding",
            "TypeFields": [
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              },
              {
                "Name": "assets",
                "TypeName": "AssetFilter",
                "TypeId": 203
              }
            ],
            "Index": 18
          },
          {
            "Name": "BuyExecution",
            "TypeFields": [
              {
                "Name": "fees",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              }
            ],
            "Index": 19
          },
          {
            "Name": "RefundSurplus",
            "TypeFields": null,
            "Index": 20
          },
          {
            "Name": "SetErrorHandler",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 431
              }
            ],
            "Index": 21
          },
          {
            "Name": "SetAppendix",
            "TypeFields": [
              {
                "TypeName": "Xcm<Call>",
                "TypeId": 431
              }
            ],
            "Index": 22
          },
          {
            "Name": "ClearError",
            "TypeFields": null,
            "Index": 23
          },
          {
            "Name": "ClaimAsset",
            "TypeFields": [
              {
                "Name": "assets",
                "TypeName": "Assets",
                "TypeId": 188
              },
              {
                "Name": "ticket",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 24
          },
          {
            "Name": "Trap",
            "TypeFields": [
              {
                "TypeName": "u64",
                "TypeId": 11
              }
            ],
            "Index": 25
          },
          {
            "Name": "SubscribeVersion",
            "TypeFields": [
              {
                "Name": "query_id",
                "TypeName": "QueryId",
                "TypeId": 11
              },
              {
                "Name": "max_response_weight",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 26
          },
          {
            "Name": "UnsubscribeVersion",
            "TypeFields": null,
            "Index": 27
          },
          {
            "Name": "BurnAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 28
          },
          {
            "Name": "ExpectAsset",
            "TypeFields": [
              {
                "TypeName": "Assets",
                "TypeId": 188
              }
            ],
            "Index": 29
          },
          {
            "Name": "ExpectOrigin",
            "TypeFields": [
              {
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 30
          },
          {
            "Name": "ExpectError",
            "TypeFields": [
              {
                "TypeName": "Option<(u32, Error)>",
                "TypeId": 191
              }
            ],
            "Index": 31
          },
          {
            "Name": "ExpectTransactStatus",
            "TypeFields": [
              {
                "TypeName": "MaybeErrorCode",
                "TypeId": 197
              }
            ],
            "Index": 32
          },
          {
            "Name": "QueryPallet",
            "TypeFields": [
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "response_info",
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              }
            ],
            "Index": 33
          },
          {
            "Name": "ExpectPallet",
            "TypeFields": [
              {
                "Name": "index",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "module_name",
                "TypeName": "Vec<u8>",
                "TypeId": 13
              },
              {
                "Name": "crate_major",
                "TypeName": "u32",
                "TypeId": 68
              },
              {
                "Name": "min_crate_minor",
                "TypeName": "u32",
                "TypeId": 68
              }
            ],
            "Index": 34
          },
          {
            "Name": "ReportTransactStatus",
            "TypeFields": [
              {
                "TypeName": "QueryResponseInfo",
                "TypeId": 202
              }
            ],
            "Index": 35
          },
          {
            "Name": "ClearTransactStatus",
            "TypeFields": null,
            "Index": 36
          },
          {
            "Name": "UniversalOrigin",
            "TypeFields": [
              {
                "TypeName": "Junction",
                "TypeId": 79
              }
            ],
            "Index": 37
          },
          {
            "Name": "ExportMessage",
            "TypeFields": [
              {
                "Name": "network",
                "TypeName": "NetworkId",
                "TypeId": 81
              },
              {
                "Name": "destination",
                "TypeName": "InteriorLocation",
                "TypeId": 77
              },
              {
                "Name": "xcm",
                "TypeName": "Xcm<()>",
                "TypeId": 185
              }
            ],
            "Index": 38
          },
          {
            "Name": "LockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "unlocker",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 39
          },
          {
            "Name": "UnlockAsset",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "target",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 40
          },
          {
            "Name": "NoteUnlockable",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "owner",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 41
          },
          {
            "Name": "RequestUnlock",
            "TypeFields": [
              {
                "Name": "asset",
                "TypeName": "Asset",
                "TypeId": 107
              },
              {
                "Name": "locker",
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 42
          },
          {
            "Name": "SetFeesMode",
            "TypeFields": [
              {
                "Name": "jit_withdraw",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 43
          },
          {
            "Name": "SetTopic",
            "TypeFields": [
              {
                "TypeName": "[u8; 32]",
                "TypeId": 1
              }
            ],
            "Index": 44
          },
          {
            "Name": "ClearTopic",
            "TypeFields": null,
            "Index": 45
          },
          {
            "Name": "AliasOrigin",
            "TypeFields": [
              {
                "TypeName": "Location",
                "TypeId": 76
              }
            ],
            "Index": 46
          },
          {
            "Name": "UnpaidExecution",
            "TypeFields": [
              {
                "Name": "weight_limit",
                "TypeName": "WeightLimit",
                "TypeId": 206
              },
              {
                "Name": "check_origin",
                "TypeName": "Option<Location>",
                "TypeId": 199
              }
            ],
            "Index": 47
          }
        ],
        "Path": [
          "staging_xcm",
          "v4",
          "Instruction"
        ],
        "TypeParams": [
          {
            "Name": "Call"
          }
        ],
        "TypeDef": "Variant"
      },
      "434": {
        "Variants": [
          {
            "Name": "Teleport",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "LocalReserve",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "DestinationReserve",
            "TypeFields": null,
            "Index": 2
          },
          {
            "Name": "RemoteReserve",
            "TypeFields": [
              {
                "TypeName": "VersionedLocation",
                "TypeId": 89
              }
            ],
            "Index": 3
          }
        ],
        "Path": [
          "staging_xcm_executor",
          "traits",
          "asset_transfer",
          "TransferType"
        ],
        "TypeDef": "Variant"
      },
      "435": {
        "Variants": [
          {
            "Name": "reap_page",
            "TypeFields": [
              {
                "Name": "message_origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 214
              },
              {
                "Name": "page_index",
                "TypeName": "PageIndex",
                "TypeId": 8
              }
            ],
            "Index": 0,
            "Docs": [
              "See [`Pallet::reap_page`]."
            ]
          },
          {
            "Name": "execute_overweight",
            "TypeFields": [
              {
                "Name": "message_origin",
                "TypeName": "MessageOriginOf<T>",
                "TypeId": 214
              },
              {
                "Name": "page",
                "TypeName": "PageIndex",
                "TypeId": 8
              },
              {
                "Name": "index",
                "TypeName": "T::Size",
                "TypeId": 8
              },
              {
                "Name": "weight_limit",
                "TypeName": "Weight",
                "TypeId": 10
              }
            ],
            "Index": 1,
            "Docs": [
              "See [`Pallet::execute_overweight`]."
            ]
          }
        ],
        "Path": [
          "pallet_message_queue",
          "pallet",
          "Call"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Contains a variant per dispatchable extrinsic that this pallet has."
        ]
      },
      "436": {
        "Path": [
          "sp_runtime",
          "traits",
          "BlakeTwo256"
        ],
        "TypeDef": "Composite"
      },
      "437": {
        "TypeId": 299,
        "TypeDef": "Sequence"
      },
      "438": {
        "TypeIds": [
          439,
          6
        ],
        "TypeDef": "Tuple"
      },
      "439": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 157
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "440": {
        "Variants": [
          {
            "Name": "Ongoing",
            "TypeFields": [
              {
                "TypeName": "ReferendumStatus<BlockNumber, Proposal, Balance>",
                "TypeId": 441
              }
            ],
            "Index": 0
          },
          {
            "Name": "Finished",
            "TypeFields": [
              {
                "Name": "approved",
                "TypeName": "bool",
                "TypeId": 30
              },
              {
                "Name": "end",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "ReferendumInfo"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Proposal",
            "TypeId": 300
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "441": {
        "TypeFields": [
          {
            "Name": "end",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "proposal",
            "TypeName": "Proposal",
            "TypeId": 300
          },
          {
            "Name": "threshold",
            "TypeName": "VoteThreshold",
            "TypeId": 39
          },
          {
            "Name": "delay",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "tally",
            "TypeName": "Tally<Balance>",
            "TypeId": 442
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "ReferendumStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Proposal",
            "TypeId": 300
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "442": {
        "TypeFields": [
          {
            "Name": "ayes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "nays",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "turnout",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "Tally"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "443": {
        "Variants": [
          {
            "Name": "Direct",
            "TypeFields": [
              {
                "Name": "votes",
                "TypeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                "TypeId": 444
              },
              {
                "Name": "delegations",
                "TypeName": "Delegations<Balance>",
                "TypeId": 447
              },
              {
                "Name": "prior",
                "TypeName": "PriorLock<BlockNumber, Balance>",
                "TypeId": 448
              }
            ],
            "Index": 0
          },
          {
            "Name": "Delegating",
            "TypeFields": [
              {
                "Name": "balance",
                "TypeName": "Balance",
                "TypeId": 6
              },
              {
                "Name": "target",
                "TypeName": "AccountId",
                "TypeId": 0
              },
              {
                "Name": "conviction",
                "TypeName": "Conviction",
                "TypeId": 303
              },
              {
                "Name": "delegations",
                "TypeName": "Delegations<Balance>",
                "TypeId": 447
              },
              {
                "Name": "prior",
                "TypeName": "PriorLock<BlockNumber, Balance>",
                "TypeId": 448
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "Voting"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "MaxVotes"
          }
        ],
        "TypeDef": "Variant"
      },
      "444": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 446
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 445
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "445": {
        "TypeIds": [
          8,
          40
        ],
        "TypeDef": "Tuple"
      },
      "446": {
        "TypeId": 445,
        "TypeDef": "Sequence"
      },
      "447": {
        "TypeFields": [
          {
            "Name": "votes",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "capital",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "types",
          "Delegations"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "448": {
        "TypeFields": [
          {
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_democracy",
          "vote",
          "PriorLock"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "449": {
        "TypeIds": [
          300,
          39
        ],
        "TypeDef": "Tuple"
      },
      "450": {
        "TypeIds": [
          4,
          439
        ],
        "TypeDef": "Tuple"
      },
      "451": {
        "Variants": [
          {
            "Name": "ValueLow",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Value too low"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Proposal does not exist"
            ]
          },
          {
            "Name": "AlreadyCanceled",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Cannot cancel the same proposal twice"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Proposal already made"
            ]
          },
          {
            "Name": "ProposalBlacklisted",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Proposal still blacklisted"
            ]
          },
          {
            "Name": "NotSimpleMajority",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Next external proposal not simple majority"
            ]
          },
          {
            "Name": "InvalidHash",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Invalid hash"
            ]
          },
          {
            "Name": "NoProposal",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "No external proposal"
            ]
          },
          {
            "Name": "AlreadyVetoed",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Identity may not veto a proposal twice"
            ]
          },
          {
            "Name": "ReferendumInvalid",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Vote given for invalid referendum"
            ]
          },
          {
            "Name": "NoneWaiting",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "No proposals waiting"
            ]
          },
          {
            "Name": "NotVoter",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The given account did not vote on the referendum."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The actor has no permission to conduct the action."
            ]
          },
          {
            "Name": "AlreadyDelegating",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The account is already delegating."
            ]
          },
          {
            "Name": "InsufficientFunds",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Too high a balance was provided that the account cannot afford."
            ]
          },
          {
            "Name": "NotDelegating",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The account is not currently delegating."
            ]
          },
          {
            "Name": "VotesExist",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The account currently has votes attached to it and the operation cannot succeed until",
              "these are removed, either through `unvote` or `reap_vote`."
            ]
          },
          {
            "Name": "InstantNotAllowed",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The instant referendum origin is currently disallowed."
            ]
          },
          {
            "Name": "Nonsense",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "Delegation to oneself makes no sense."
            ]
          },
          {
            "Name": "WrongUpperBound",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "Invalid upper bound."
            ]
          },
          {
            "Name": "MaxVotesReached",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Maximum number of votes reached."
            ]
          },
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Maximum number of items reached."
            ]
          },
          {
            "Name": "VotingPeriodLow",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "Voting period too low"
            ]
          },
          {
            "Name": "PreimageNotExist",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "The preimage does not exist."
            ]
          }
        ],
        "Path": [
          "pallet_democracy",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "452": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 155
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "453": {
        "TypeFields": [
          {
            "Name": "index",
            "TypeName": "ProposalIndex",
            "TypeId": 8
          },
          {
            "Name": "threshold",
            "TypeName": "MemberCount",
            "TypeId": 8
          },
          {
            "Name": "ayes",
            "TypeName": "Vec<AccountId>",
            "TypeId": 157
          },
          {
            "Name": "nays",
            "TypeName": "Vec<AccountId>",
            "TypeId": 157
          },
          {
            "Name": "end",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_collective",
          "Votes"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "454": {
        "Variants": [
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is not a member"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Duplicate proposals not allowed"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Proposal must exist"
            ]
          },
          {
            "Name": "WrongIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Mismatched index"
            ]
          },
          {
            "Name": "DuplicateVote",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Duplicate vote ignored"
            ]
          },
          {
            "Name": "AlreadyInitialized",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Members are already initialized!"
            ]
          },
          {
            "Name": "TooEarly",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The close call was made too early, before the end of the voting."
            ]
          },
          {
            "Name": "TooManyProposals",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "There can only be a maximum of `MaxProposals` active proposals."
            ]
          },
          {
            "Name": "WrongProposalWeight",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The given weight bound for the proposal was too low."
            ]
          },
          {
            "Name": "WrongProposalLength",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The given length bound for the proposal was too low."
            ]
          },
          {
            "Name": "PrimeAccountNotMember",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Prime account is not a member"
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "455": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 155
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "456": {
        "Variants": [
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account is not a member"
            ]
          },
          {
            "Name": "DuplicateProposal",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Duplicate proposals not allowed"
            ]
          },
          {
            "Name": "ProposalMissing",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Proposal must exist"
            ]
          },
          {
            "Name": "WrongIndex",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Mismatched index"
            ]
          },
          {
            "Name": "DuplicateVote",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Duplicate vote ignored"
            ]
          },
          {
            "Name": "AlreadyInitialized",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Members are already initialized!"
            ]
          },
          {
            "Name": "TooEarly",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The close call was made too early, before the end of the voting."
            ]
          },
          {
            "Name": "TooManyProposals",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "There can only be a maximum of `MaxProposals` active proposals."
            ]
          },
          {
            "Name": "WrongProposalWeight",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The given weight bound for the proposal was too low."
            ]
          },
          {
            "Name": "WrongProposalLength",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The given length bound for the proposal was too low."
            ]
          },
          {
            "Name": "PrimeAccountNotMember",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Prime account is not a member"
            ]
          }
        ],
        "Path": [
          "pallet_collective",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "457": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 157
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "458": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "TooManyMembers",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many members."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "459": {
        "TypeFields": [
          {
            "Name": "proposer",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "value",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "beneficiary",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "bond",
            "TypeName": "Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_treasury",
          "Proposal"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "460": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 272
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 8
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "461": {
        "TypeFields": [
          {
            "Name": "asset_kind",
            "TypeName": "AssetKind",
            "TypeId": 45
          },
          {
            "Name": "amount",
            "TypeName": "AssetBalance",
            "TypeId": 6
          },
          {
            "Name": "beneficiary",
            "TypeName": "Beneficiary",
            "TypeId": 0
          },
          {
            "Name": "valid_from",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "expire_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "status",
            "TypeName": "PaymentState<PaymentId>",
            "TypeId": 462
          }
        ],
        "Path": [
          "pallet_treasury",
          "SpendStatus"
        ],
        "TypeParams": [
          {
            "Name": "AssetKind",
            "TypeId": 45
          },
          {
            "Name": "AssetBalance",
            "TypeId": 6
          },
          {
            "Name": "Beneficiary",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PaymentId",
            "TypeId": 45
          }
        ],
        "TypeDef": "Composite"
      },
      "462": {
        "Variants": [
          {
            "Name": "Pending",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Attempted",
            "TypeFields": [
              {
                "Name": "id",
                "TypeName": "Id",
                "TypeId": 45
              }
            ],
            "Index": 1
          },
          {
            "Name": "Failed",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_treasury",
          "PaymentState"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 45
          }
        ],
        "TypeDef": "Variant"
      },
      "463": {
        "TypeFields": [
          {
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Permill"
        ],
        "TypeDef": "Composite"
      },
      "464": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 6
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "465": {
        "TypeFields": [
          {
            "TypeName": "[u8; 8]",
            "TypeId": 102
          }
        ],
        "Path": [
          "frame_support",
          "PalletId"
        ],
        "TypeDef": "Composite"
      },
      "466": {
        "Variants": [
          {
            "Name": "InsufficientProposersBalance",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Proposer's balance is too low."
            ]
          },
          {
            "Name": "InvalidIndex",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No proposal, bounty or spend at that index."
            ]
          },
          {
            "Name": "TooManyApprovals",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many approvals in the queue."
            ]
          },
          {
            "Name": "InsufficientPermission",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The spend origin is valid but the amount it is allowed to spend is lower than the",
              "amount to be spent."
            ]
          },
          {
            "Name": "ProposalNotApproved",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Proposal has not been approved."
            ]
          },
          {
            "Name": "FailedToConvertBalance",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The balance of the asset kind is not convertible to the balance of the native asset."
            ]
          },
          {
            "Name": "SpendExpired",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The spend has expired and cannot be claimed."
            ]
          },
          {
            "Name": "EarlyPayout",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The spend is not yet eligible for payout."
            ]
          },
          {
            "Name": "AlreadyAttempted",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The payment has already been attempted."
            ]
          },
          {
            "Name": "PayoutError",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "There was some issue with the mechanism of payment."
            ]
          },
          {
            "Name": "NotAttempted",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The payout was not yet attempted/claimed."
            ]
          },
          {
            "Name": "Inconclusive",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The payment has neither failed nor succeeded yet."
            ]
          }
        ],
        "Path": [
          "pallet_treasury",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the treasury pallet."
        ]
      },
      "467": {
        "Variants": [
          {
            "Name": "TooManyCalls",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Too many calls batched."
            ]
          }
        ],
        "Path": [
          "pallet_utility",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "468": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 469
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 323
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "469": {
        "TypeId": 323,
        "TypeDef": "Sequence"
      },
      "470": {
        "Variants": [
          {
            "Name": "V0",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "V1",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_vesting",
          "Releases"
        ],
        "TypeDef": "Variant"
      },
      "471": {
        "Variants": [
          {
            "Name": "NotVesting",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The account given is not vesting."
            ]
          },
          {
            "Name": "AtMaxVestingSchedules",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The account already has `MaxVestingSchedules` count of schedules and thus",
              "cannot add another one. Consider merging existing schedules in order to add another."
            ]
          },
          {
            "Name": "AmountLow",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Amount being transferred is too low to create a vesting schedule."
            ]
          },
          {
            "Name": "ScheduleIndexOutOfBounds",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "An index was out of bounds of the vesting schedules."
            ]
          },
          {
            "Name": "InvalidScheduleParams",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Failed to create a new schedule because some parameter was invalid."
            ]
          }
        ],
        "Path": [
          "pallet_vesting",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "Error for the vesting pallet."
        ]
      },
      "472": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 475
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 473
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "473": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 474
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 474
          }
        ],
        "TypeDef": "Variant"
      },
      "474": {
        "TypeFields": [
          {
            "Name": "maybe_id",
            "TypeName": "Option<Name>",
            "TypeId": 53
          },
          {
            "Name": "priority",
            "TypeName": "schedule::Priority",
            "TypeId": 2
          },
          {
            "Name": "call",
            "TypeName": "Call",
            "TypeId": 300
          },
          {
            "Name": "maybe_periodic",
            "TypeName": "Option<schedule::Period<BlockNumber>>",
            "TypeId": 325
          },
          {
            "Name": "origin",
            "TypeName": "PalletsOrigin",
            "TypeId": 314
          }
        ],
        "Path": [
          "pallet_scheduler",
          "Scheduled"
        ],
        "TypeParams": [
          {
            "Name": "Name",
            "TypeId": 1
          },
          {
            "Name": "Call",
            "TypeId": 300
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "PalletsOrigin",
            "TypeId": 314
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "475": {
        "TypeId": 473,
        "TypeDef": "Sequence"
      },
      "476": {
        "Variants": [
          {
            "Name": "FailedToSchedule",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Failed to schedule a call"
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Cannot find the scheduled call."
            ]
          },
          {
            "Name": "TargetBlockNumberInPast",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Given target block number is in the past."
            ]
          },
          {
            "Name": "RescheduleNoChange",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Reschedule failed because it does not change scheduled time."
            ]
          },
          {
            "Name": "Named",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Attempt to use a non-named function on a named task."
            ]
          }
        ],
        "Path": [
          "pallet_scheduler",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "477": {
        "TypeIds": [
          478,
          6
        ],
        "TypeDef": "Tuple"
      },
      "478": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 480
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 479
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "479": {
        "TypeFields": [
          {
            "Name": "delegate",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "proxy_type",
            "TypeName": "ProxyType",
            "TypeId": 55
          },
          {
            "Name": "delay",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_proxy",
          "ProxyDefinition"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "ProxyType",
            "TypeId": 55
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "480": {
        "TypeId": 479,
        "TypeDef": "Sequence"
      },
      "481": {
        "TypeIds": [
          482,
          6
        ],
        "TypeDef": "Tuple"
      },
      "482": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 484
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 483
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "483": {
        "TypeFields": [
          {
            "Name": "real",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "call_hash",
            "TypeName": "Hash",
            "TypeId": 12
          },
          {
            "Name": "height",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_proxy",
          "Announcement"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Hash",
            "TypeId": 12
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "484": {
        "TypeId": 483,
        "TypeDef": "Sequence"
      },
      "485": {
        "Variants": [
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "There are too many proxies registered or too many announcements pending."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Proxy registration not found."
            ]
          },
          {
            "Name": "NotProxy",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Sender is not a proxy of the account to be proxied."
            ]
          },
          {
            "Name": "Unproxyable",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "A call which is incompatible with the proxy type's filter was attempted."
            ]
          },
          {
            "Name": "Duplicate",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Account is already a proxy."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Call may not be made by proxy because it may escalate its privileges."
            ]
          },
          {
            "Name": "Unannounced",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Announcement, if made at all, was made too recently."
            ]
          },
          {
            "Name": "NoSelfProxy",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Cannot add self as proxy."
            ]
          }
        ],
        "Path": [
          "pallet_proxy",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "486": {
        "Variants": [
          {
            "Name": "Unrequested",
            "TypeFields": [
              {
                "Name": "deposit",
                "TypeName": "(AccountId, Balance)",
                "TypeId": 487
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 0
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "deposit",
                "TypeName": "Option<(AccountId, Balance)>",
                "TypeId": 488
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "len",
                "TypeName": "Option<u32>",
                "TypeId": 304
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_preimage",
          "OldRequestStatus"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Variant"
      },
      "487": {
        "TypeIds": [
          0,
          6
        ],
        "TypeDef": "Tuple"
      },
      "488": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 487
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 487
          }
        ],
        "TypeDef": "Variant"
      },
      "489": {
        "Variants": [
          {
            "Name": "Unrequested",
            "TypeFields": [
              {
                "Name": "ticket",
                "TypeName": "(AccountId, Ticket)",
                "TypeId": 491
              },
              {
                "Name": "len",
                "TypeName": "u32",
                "TypeId": 8
              }
            ],
            "Index": 0
          },
          {
            "Name": "Requested",
            "TypeFields": [
              {
                "Name": "maybe_ticket",
                "TypeName": "Option<(AccountId, Ticket)>",
                "TypeId": 492
              },
              {
                "Name": "count",
                "TypeName": "u32",
                "TypeId": 8
              },
              {
                "Name": "maybe_len",
                "TypeName": "Option<u32>",
                "TypeId": 304
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "pallet_preimage",
          "RequestStatus"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Ticket",
            "TypeId": 490
          }
        ],
        "TypeDef": "Variant"
      },
      "490": {
        "TypeFields": [
          {
            "TypeName": "F::Balance",
            "TypeId": 6
          }
        ],
        "Path": [
          "frame_support",
          "traits",
          "tokens",
          "fungible",
          "HoldConsideration"
        ],
        "TypeParams": [
          {
            "Name": "A"
          },
          {
            "Name": "F"
          },
          {
            "Name": "R"
          },
          {
            "Name": "D"
          }
        ],
        "TypeDef": "Composite"
      },
      "491": {
        "TypeIds": [
          0,
          490
        ],
        "TypeDef": "Tuple"
      },
      "492": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 491
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 491
          }
        ],
        "TypeDef": "Variant"
      },
      "493": {
        "TypeIds": [
          12,
          8
        ],
        "TypeDef": "Tuple"
      },
      "494": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "495": {
        "Variants": [
          {
            "Name": "TooBig",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Preimage is too large to store on-chain."
            ]
          },
          {
            "Name": "AlreadyNoted",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Preimage has already been noted on-chain."
            ]
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The user is not authorized to perform this action."
            ]
          },
          {
            "Name": "NotNoted",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The preimage cannot be removed since it has not yet been noted."
            ]
          },
          {
            "Name": "Requested",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "A preimage may not be removed when there are outstanding requests."
            ]
          },
          {
            "Name": "NotRequested",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The preimage request cannot be removed since no outstanding requests exist."
            ]
          },
          {
            "Name": "TooMany",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once."
            ]
          },
          {
            "Name": "TooFew",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Too few hashes were requested to be upgraded (i.e. zero)."
            ]
          }
        ],
        "Path": [
          "pallet_preimage",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "496": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 157
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "497": {
        "Variants": [
          {
            "Name": "AlreadyMember",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Already a member."
            ]
          },
          {
            "Name": "NotMember",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Not a member."
            ]
          },
          {
            "Name": "TooManyMembers",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Too many members."
            ]
          }
        ],
        "Path": [
          "pallet_membership",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "498": {
        "TypeFields": [
          {
            "Name": "reason",
            "TypeName": "Hash",
            "TypeId": 12
          },
          {
            "Name": "who",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "finder",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "closes",
            "TypeName": "Option<BlockNumber>",
            "TypeId": 311
          },
          {
            "Name": "tips",
            "TypeName": "Vec<(AccountId, Balance)>",
            "TypeId": 499
          },
          {
            "Name": "finders_fee",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "pallet_tips",
          "OpenTip"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Hash",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "499": {
        "TypeId": 487,
        "TypeDef": "Sequence"
      },
      "500": {
        "TypeFields": [
          {
            "TypeName": "u8",
            "TypeId": 2
          }
        ],
        "Path": [
          "sp_arithmetic",
          "per_things",
          "Percent"
        ],
        "TypeDef": "Composite"
      },
      "501": {
        "Variants": [
          {
            "Name": "ReasonTooBig",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The reason given is just too big."
            ]
          },
          {
            "Name": "AlreadyKnown",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The tip was already found/started."
            ]
          },
          {
            "Name": "UnknownTip",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The tip hash is unknown."
            ]
          },
          {
            "Name": "MaxTipAmountExceeded",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The tip given was too generous."
            ]
          },
          {
            "Name": "NotFinder",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The account attempting to retract the tip is not the finder of the tip."
            ]
          },
          {
            "Name": "StillOpen",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The tip cannot be claimed/closed because there are not enough tippers yet."
            ]
          },
          {
            "Name": "Premature",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The tip cannot be claimed/closed because it's still in the countdown period."
            ]
          }
        ],
        "Path": [
          "pallet_tips",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "502": {
        "TypeIds": [
          0,
          1
        ],
        "TypeDef": "Tuple"
      },
      "503": {
        "TypeFields": [
          {
            "Name": "when",
            "TypeName": "Timepoint<BlockNumber>",
            "TypeId": 61
          },
          {
            "Name": "deposit",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "depositor",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "approvals",
            "TypeName": "BoundedVec<AccountId, MaxApprovals>",
            "TypeId": 504
          }
        ],
        "Path": [
          "pallet_multisig",
          "Multisig"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "MaxApprovals"
          }
        ],
        "TypeDef": "Composite"
      },
      "504": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 157
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 0
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "505": {
        "Variants": [
          {
            "Name": "MinimumThreshold",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Threshold must be 2 or greater."
            ]
          },
          {
            "Name": "AlreadyApproved",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Call is already approved by this signatory."
            ]
          },
          {
            "Name": "NoApprovalsNeeded",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Call doesn't need any (more) approvals."
            ]
          },
          {
            "Name": "TooFewSignatories",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "There are too few signatories in the list."
            ]
          },
          {
            "Name": "TooManySignatories",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There are too many signatories in the list."
            ]
          },
          {
            "Name": "SignatoriesOutOfOrder",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The signatories were provided out of order; they should be ordered."
            ]
          },
          {
            "Name": "SenderInSignatories",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The sender was contained in the other signatories; it shouldn't be."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Multisig operation not found when attempting to cancel."
            ]
          },
          {
            "Name": "NotOwner",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Only the account that originally created the multisig is able to cancel it."
            ]
          },
          {
            "Name": "NoTimepoint",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "No timepoint was given, yet the multisig operation is already underway."
            ]
          },
          {
            "Name": "WrongTimepoint",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "A different timepoint was given to the multisig operation that is underway."
            ]
          },
          {
            "Name": "UnexpectedTimepoint",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "A timepoint was given, yet no multisig operation is underway."
            ]
          },
          {
            "Name": "MaxWeightTooLow",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The maximum weight information provided was too low."
            ]
          },
          {
            "Name": "AlreadyStored",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The data to be stored is already stored."
            ]
          }
        ],
        "Path": [
          "pallet_multisig",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "506": {
        "TypeFields": [
          {
            "Name": "pool_account",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "remote_asset_circulating_supply",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "remote_asset_ed",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "remote_asset_id",
            "TypeName": "VersionedAssetId",
            "TypeId": 63
          },
          {
            "Name": "remote_asset_total_supply",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "remote_reserve_location",
            "TypeName": "VersionedLocation",
            "TypeId": 89
          },
          {
            "Name": "remote_xcm_fee",
            "TypeName": "VersionedAsset",
            "TypeId": 97
          },
          {
            "Name": "status",
            "TypeName": "SwitchPairStatus",
            "TypeId": 507
          },
          {
            "Name": "remote_asset_sovereign_total_balance",
            "TypeName": "u128",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_asset_switch",
          "switch",
          "SwitchPairInfo"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "507": {
        "Variants": [
          {
            "Name": "Paused",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Running",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "pallet_asset_switch",
          "switch",
          "SwitchPairStatus"
        ],
        "TypeDef": "Variant"
      },
      "508": {
        "TypeFields": [
          {
            "Name": "from",
            "TypeName": "Source",
            "TypeId": 0
          },
          {
            "Name": "to",
            "TypeName": "Destination",
            "TypeId": 89
          },
          {
            "Name": "amount",
            "TypeName": "Amount",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_asset_switch",
          "switch",
          "UnconfirmedSwitchInfo"
        ],
        "TypeParams": [
          {
            "Name": "Source",
            "TypeId": 0
          },
          {
            "Name": "Destination",
            "TypeId": 89
          },
          {
            "Name": "Amount",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "509": {
        "Variants": [
          {
            "Name": "InvalidInput",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Provided switch pair info is not valid."
            ]
          },
          {
            "Name": "Hook",
            "TypeFields": [
              {
                "TypeName": "u8",
                "TypeId": 2
              }
            ],
            "Index": 1,
            "Docs": [
              "The runtime-injected logic returned an error with a specific code."
            ]
          },
          {
            "Name": "Liquidity",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "There are not enough remote assets to cover the specified amount of",
              "local tokens to switch."
            ]
          },
          {
            "Name": "LocalPoolBalance",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "Failure in transferring the local tokens from the user's balance to",
              "the switch pair pool account."
            ]
          },
          {
            "Name": "PoolInitialLiquidityRequirement",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The calculated switch pair pool account does not have enough local",
              "tokens to cover the specified `circulating_supply`."
            ]
          },
          {
            "Name": "SwitchPairAlreadyExisting",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "A switch pair has already been set."
            ]
          },
          {
            "Name": "SwitchPairNotEnabled",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The switch pair did not enable switches."
            ]
          },
          {
            "Name": "SwitchPairNotFound",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "No switch pair found."
            ]
          },
          {
            "Name": "UserSwitchBalance",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The user does not have enough local tokens to cover the requested",
              "switch."
            ]
          },
          {
            "Name": "UserXcmBalance",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The user does not have enough assets to pay for the remote XCM fees."
            ]
          },
          {
            "Name": "Xcm",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "Something regarding XCM went wrong."
            ]
          },
          {
            "Name": "Internal",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "Internal error."
            ]
          },
          {
            "Name": "AmountTooLow",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "Attempt to switch less than the local ED tokens."
            ]
          },
          {
            "Name": "PendingSwitches",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Some switches have not yet been processed."
            ]
          }
        ],
        "Path": [
          "pallet_asset_switch",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "510": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "issuer",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "admin",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "freezer",
            "TypeName": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "supply",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "deposit",
            "TypeName": "DepositBalance",
            "TypeId": 6
          },
          {
            "Name": "min_balance",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "is_sufficient",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "accounts",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "sufficients",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "approvals",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "status",
            "TypeName": "AssetStatus",
            "TypeId": 511
          }
        ],
        "Path": [
          "pallet_assets",
          "types",
          "AssetDetails"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "DepositBalance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "511": {
        "Variants": [
          {
            "Name": "Live",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Frozen",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Destroying",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_assets",
          "types",
          "AssetStatus"
        ],
        "TypeDef": "Variant"
      },
      "512": {
        "TypeIds": [
          76,
          0
        ],
        "TypeDef": "Tuple"
      },
      "513": {
        "TypeFields": [
          {
            "Name": "balance",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "status",
            "TypeName": "AccountStatus",
            "TypeId": 514
          },
          {
            "Name": "reason",
            "TypeName": "ExistenceReason<DepositBalance, AccountId>",
            "TypeId": 515
          },
          {
            "Name": "extra",
            "TypeName": "Extra",
            "TypeId": 45
          }
        ],
        "Path": [
          "pallet_assets",
          "types",
          "AssetAccount"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "DepositBalance",
            "TypeId": 6
          },
          {
            "Name": "Extra",
            "TypeId": 45
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "514": {
        "Variants": [
          {
            "Name": "Liquid",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Frozen",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "Blocked",
            "TypeFields": null,
            "Index": 2
          }
        ],
        "Path": [
          "pallet_assets",
          "types",
          "AccountStatus"
        ],
        "TypeDef": "Variant"
      },
      "515": {
        "Variants": [
          {
            "Name": "Consumer",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Sufficient",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "DepositHeld",
            "TypeFields": [
              {
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 2
          },
          {
            "Name": "DepositRefunded",
            "TypeFields": null,
            "Index": 3
          },
          {
            "Name": "DepositFrom",
            "TypeFields": [
              {
                "TypeName": "AccountId",
                "TypeId": 0
              },
              {
                "TypeName": "Balance",
                "TypeId": 6
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "pallet_assets",
          "types",
          "ExistenceReason"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "516": {
        "TypeIds": [
          76,
          0,
          0
        ],
        "TypeDef": "Tuple"
      },
      "517": {
        "TypeFields": [
          {
            "Name": "amount",
            "TypeName": "Balance",
            "TypeId": 6
          },
          {
            "Name": "deposit",
            "TypeName": "DepositBalance",
            "TypeId": 6
          }
        ],
        "Path": [
          "pallet_assets",
          "types",
          "Approval"
        ],
        "TypeParams": [
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "DepositBalance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "518": {
        "TypeFields": [
          {
            "Name": "deposit",
            "TypeName": "DepositBalance",
            "TypeId": 6
          },
          {
            "Name": "name",
            "TypeName": "BoundedString",
            "TypeId": 519
          },
          {
            "Name": "symbol",
            "TypeName": "BoundedString",
            "TypeId": 519
          },
          {
            "Name": "decimals",
            "TypeName": "u8",
            "TypeId": 2
          },
          {
            "Name": "is_frozen",
            "TypeName": "bool",
            "TypeId": 30
          }
        ],
        "Path": [
          "pallet_assets",
          "types",
          "AssetMetadata"
        ],
        "TypeParams": [
          {
            "Name": "DepositBalance",
            "TypeId": 6
          },
          {
            "Name": "BoundedString",
            "TypeId": 519
          }
        ],
        "TypeDef": "Composite"
      },
      "519": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "520": {
        "Variants": [
          {
            "Name": "BalanceLow",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Account balance must be greater than or equal to the transfer amount."
            ]
          },
          {
            "Name": "NoAccount",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The account to alter does not exist."
            ]
          },
          {
            "Name": "NoPermission",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The signing account has no permission to do the operation."
            ]
          },
          {
            "Name": "Unknown",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The given asset ID is unknown."
            ]
          },
          {
            "Name": "Frozen",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The origin account is frozen."
            ]
          },
          {
            "Name": "InUse",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The asset ID is already taken."
            ]
          },
          {
            "Name": "BadWitness",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Invalid witness data given."
            ]
          },
          {
            "Name": "MinBalanceZero",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Minimum balance should be non-zero."
            ]
          },
          {
            "Name": "UnavailableConsumer",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Unable to increment the consumer reference counters on the account. Either no provider",
              "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
              "fewer then the maximum number of consumers has been reached."
            ]
          },
          {
            "Name": "BadMetadata",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "Invalid metadata given."
            ]
          },
          {
            "Name": "Unapproved",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "No approval exists that would allow the transfer."
            ]
          },
          {
            "Name": "WouldDie",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The source account would not survive the transfer and it needs to stay alive."
            ]
          },
          {
            "Name": "AlreadyExists",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The asset-account already exists."
            ]
          },
          {
            "Name": "NoDeposit",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The asset-account doesn't have an associated deposit."
            ]
          },
          {
            "Name": "WouldBurn",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The operation would result in funds being burned."
            ]
          },
          {
            "Name": "LiveAsset",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The asset is a live asset and is actively being used. Usually emit for operations such",
              "as `start_destroy` which require the asset to be in a destroying state."
            ]
          },
          {
            "Name": "AssetNotLive",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The asset is not live, and likely being destroyed."
            ]
          },
          {
            "Name": "IncorrectStatus",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The asset status is not the expected status."
            ]
          },
          {
            "Name": "NotFrozen",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "The asset should be frozen before the given operation."
            ]
          },
          {
            "Name": "CallbackFailed",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "Callback action resulted in error"
            ]
          }
        ],
        "Path": [
          "pallet_assets",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          },
          {
            "Name": "I"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "521": {
        "TypeFields": [
          {
            "Name": "creator",
            "TypeName": "Creator",
            "TypeId": 0
          },
          {
            "Name": "created_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "ctype",
          "ctype_entry",
          "CtypeEntry"
        ],
        "TypeParams": [
          {
            "Name": "Creator",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "522": {
        "Variants": [
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "There is no CType with the given hash."
            ]
          },
          {
            "Name": "AlreadyExists",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The CType already exists."
            ]
          },
          {
            "Name": "UnableToPayFees",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The paying account was unable to pay the fees for creating a ctype."
            ]
          }
        ],
        "Path": [
          "ctype",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "523": {
        "TypeFields": [
          {
            "Name": "ctype_hash",
            "TypeName": "CtypeHash",
            "TypeId": 12
          },
          {
            "Name": "attester",
            "TypeName": "AttesterId",
            "TypeId": 0
          },
          {
            "Name": "authorization_id",
            "TypeName": "Option<AuthorizationId>",
            "TypeId": 113
          },
          {
            "Name": "revoked",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "deposit",
            "TypeName": "Deposit<AccountId, Balance>",
            "TypeId": 179
          }
        ],
        "Path": [
          "attestation",
          "attestations",
          "AttestationDetails"
        ],
        "TypeParams": [
          {
            "Name": "CtypeHash",
            "TypeId": 12
          },
          {
            "Name": "AttesterId",
            "TypeId": 0
          },
          {
            "Name": "AuthorizationId",
            "TypeId": 114
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "524": {
        "TypeIds": [
          114,
          12
        ],
        "TypeDef": "Tuple"
      },
      "525": {
        "Variants": [
          {
            "Name": "AlreadyAttested",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "There is already an attestation with the same claim hash stored on",
              "chain."
            ]
          },
          {
            "Name": "AlreadyRevoked",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The attestation has already been revoked."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "No attestation on chain matching the claim hash."
            ]
          },
          {
            "Name": "CTypeMismatch",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The attestation CType does not match the CType specified in the",
              "delegation hierarchy root."
            ]
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The call origin is not authorized to change the attestation."
            ]
          },
          {
            "Name": "MaxDelegatedAttestationsExceeded",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The maximum number of delegated attestations has already been",
              "reached for the corresponding delegation id such that another one",
              "cannot be added."
            ]
          }
        ],
        "Path": [
          "attestation",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "526": {
        "TypeFields": [
          {
            "Name": "hierarchy_root_id",
            "TypeName": "DelegationNodeId",
            "TypeId": 12
          },
          {
            "Name": "parent",
            "TypeName": "Option<DelegationNodeId>",
            "TypeId": 305
          },
          {
            "Name": "children",
            "TypeName": "BoundedBTreeSet<DelegationNodeId, MaxChildren>",
            "TypeId": 529
          },
          {
            "Name": "details",
            "TypeName": "DelegationDetails",
            "TypeId": 528
          },
          {
            "Name": "deposit",
            "TypeName": "Deposit<AccountId, Balance>",
            "TypeId": 179
          }
        ],
        "Path": [
          "delegation",
          "delegation_hierarchy",
          "DelegationNode"
        ],
        "TypeParams": [
          {
            "Name": "DelegationNodeId",
            "TypeId": 12
          },
          {
            "Name": "MaxChildren",
            "TypeId": 527
          },
          {
            "Name": "DelegationDetails",
            "TypeId": 528
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "527": {
        "Path": [
          "runtime_common",
          "constants",
          "delegation",
          "MaxChildren"
        ],
        "TypeDef": "Composite"
      },
      "528": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "DelegatorId",
            "TypeId": 0
          },
          {
            "Name": "revoked",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "permissions",
            "TypeName": "Permissions",
            "TypeId": 116
          }
        ],
        "Path": [
          "delegation",
          "delegation_hierarchy",
          "DelegationDetails"
        ],
        "TypeParams": [
          {
            "Name": "DelegatorId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "529": {
        "TypeFields": [
          {
            "TypeName": "BTreeSet<T>",
            "TypeId": 530
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_set",
          "BoundedBTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "530": {
        "TypeFields": [
          {
            "TypeId": 155
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "531": {
        "TypeFields": [
          {
            "Name": "ctype_hash",
            "TypeName": "CtypeHash",
            "TypeId": 12
          }
        ],
        "Path": [
          "delegation",
          "delegation_hierarchy",
          "DelegationHierarchyDetails"
        ],
        "TypeParams": [
          {
            "Name": "CtypeHash",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "532": {
        "Variants": [
          {
            "Name": "DelegationAlreadyExists",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "There is already a delegation node with the same ID stored on chain."
            ]
          },
          {
            "Name": "InvalidDelegateSignature",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The delegate's signature for the delegation creation operation is",
              "invalid."
            ]
          },
          {
            "Name": "DelegationNotFound",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "No delegation with the given ID stored on chain."
            ]
          },
          {
            "Name": "DelegateNotFound",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "No delegate with the given ID stored on chain."
            ]
          },
          {
            "Name": "HierarchyAlreadyExists",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "There is already a hierarchy with the same ID stored on chain."
            ]
          },
          {
            "Name": "HierarchyNotFound",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "No hierarchy with the given ID stored on chain."
            ]
          },
          {
            "Name": "MaxSearchDepthReached",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Max number of nodes checked without verifying the given condition."
            ]
          },
          {
            "Name": "NotOwnerOfParentDelegation",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The delegation creator is not allowed to write the delegation",
              "because they are not the owner of the delegation parent node."
            ]
          },
          {
            "Name": "NotOwnerOfDelegationHierarchy",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The delegation creator is not allowed to write the delegation",
              "because they are not the owner of the delegation root node."
            ]
          },
          {
            "Name": "ParentDelegationNotFound",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "No parent delegation with the given ID stored on chain."
            ]
          },
          {
            "Name": "ParentDelegationRevoked",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The parent delegation has previously been revoked."
            ]
          },
          {
            "Name": "UnauthorizedRevocation",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The delegation revoker is not allowed to revoke the delegation."
            ]
          },
          {
            "Name": "UnauthorizedRemoval",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The call origin is not authorized to remove the delegation."
            ]
          },
          {
            "Name": "UnauthorizedDelegation",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The delegation creator is not allowed to create the delegation."
            ]
          },
          {
            "Name": "AccessDenied",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The operation wasn't allowed because of insufficient rights."
            ]
          },
          {
            "Name": "ExceededRevocationBounds",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "Max number of revocations for delegation nodes has been reached for",
              "the operation."
            ]
          },
          {
            "Name": "ExceededRemovalBounds",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "Max number of removals for delegation nodes has been reached for the",
              "operation."
            ]
          },
          {
            "Name": "MaxRevocationsTooLarge",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The max number of revocation exceeds the limit for the pallet."
            ]
          },
          {
            "Name": "MaxRemovalsTooLarge",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "The max number of removals exceeds the limit for the pallet."
            ]
          },
          {
            "Name": "MaxParentChecksTooLarge",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The max number of parent checks exceeds the limit for the pallet."
            ]
          },
          {
            "Name": "Internal",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "An error that is not supposed to take place, yet it happened."
            ]
          },
          {
            "Name": "MaxChildrenExceeded",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "The max number of all children has been reached for the",
              "corresponding delegation node."
            ]
          }
        ],
        "Path": [
          "delegation",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "533": {
        "TypeFields": [
          {
            "Name": "authentication_key",
            "TypeName": "KeyIdOf<T>",
            "TypeId": 12
          },
          {
            "Name": "key_agreement_keys",
            "TypeName": "DidKeyAgreementKeySetOf<T>",
            "TypeId": 534
          },
          {
            "Name": "delegation_key",
            "TypeName": "Option<KeyIdOf<T>>",
            "TypeId": 305
          },
          {
            "Name": "attestation_key",
            "TypeName": "Option<KeyIdOf<T>>",
            "TypeId": 305
          },
          {
            "Name": "public_keys",
            "TypeName": "DidPublicKeyMapOf<T>",
            "TypeId": 535
          },
          {
            "Name": "last_tx_counter",
            "TypeName": "u64",
            "TypeId": 4
          },
          {
            "Name": "deposit",
            "TypeName": "Deposit<AccountIdOf<T>, BalanceOf<T>>",
            "TypeId": 179
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidDetails"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "534": {
        "TypeFields": [
          {
            "TypeName": "BTreeSet<T>",
            "TypeId": 530
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_set",
          "BoundedBTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 12
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "535": {
        "TypeFields": [
          {
            "TypeName": "BTreeMap<K, V>",
            "TypeId": 538
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_map",
          "BoundedBTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 12
          },
          {
            "Name": "V",
            "TypeId": 536
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "536": {
        "TypeFields": [
          {
            "Name": "key",
            "TypeName": "DidPublicKey<AccountId>",
            "TypeId": 537
          },
          {
            "Name": "block_number",
            "TypeName": "BlockNumber",
            "TypeId": 4
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidPublicKeyDetails"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Composite"
      },
      "537": {
        "Variants": [
          {
            "Name": "PublicVerificationKey",
            "TypeFields": [
              {
                "TypeName": "DidVerificationKey<AccountId>",
                "TypeId": 363
              }
            ],
            "Index": 0
          },
          {
            "Name": "PublicEncryptionKey",
            "TypeFields": [
              {
                "TypeName": "DidEncryptionKey",
                "TypeId": 359
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "did",
          "did_details",
          "DidPublicKey"
        ],
        "TypeParams": [
          {
            "Name": "AccountId",
            "TypeId": 0
          }
        ],
        "TypeDef": "Variant"
      },
      "538": {
        "TypeFields": [
          {
            "TypeId": 539
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 12
          },
          {
            "Name": "V",
            "TypeId": 536
          }
        ],
        "TypeDef": "Composite"
      },
      "539": {
        "TypeId": 540,
        "TypeDef": "Sequence"
      },
      "540": {
        "TypeIds": [
          12,
          536
        ],
        "TypeDef": "Tuple"
      },
      "541": {
        "TypeIds": [
          0,
          351
        ],
        "TypeDef": "Tuple"
      },
      "542": {
        "Variants": [
          {
            "Name": "InvalidSignatureFormat",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The DID operation signature is not in the format the verification",
              "key expects."
            ]
          },
          {
            "Name": "InvalidSignature",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The DID operation signature is invalid for the payload and the",
              "verification key provided."
            ]
          },
          {
            "Name": "AlreadyExists",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The DID with the given identifier is already present on chain."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "No DID with the given identifier is present on chain."
            ]
          },
          {
            "Name": "VerificationKeyNotFound",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "One or more verification keys referenced are not stored in the set",
              "of verification keys."
            ]
          },
          {
            "Name": "InvalidNonce",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The DID operation nonce is not equal to the current DID nonce + 1."
            ]
          },
          {
            "Name": "UnsupportedDidAuthorizationCall",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The called extrinsic does not support DID authorisation."
            ]
          },
          {
            "Name": "InvalidDidAuthorizationCall",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The call had parameters that conflicted with each other",
              "or were invalid."
            ]
          },
          {
            "Name": "MaxNewKeyAgreementKeysLimitExceeded",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "A number of new key agreement keys greater than the maximum allowed",
              "has been provided."
            ]
          },
          {
            "Name": "MaxPublicKeysExceeded",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The maximum number of public keys for this DID key identifier has",
              "been reached."
            ]
          },
          {
            "Name": "MaxKeyAgreementKeysExceeded",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The maximum number of key agreements has been reached for the DID",
              "subject."
            ]
          },
          {
            "Name": "BadDidOrigin",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The DID call was submitted by the wrong account"
            ]
          },
          {
            "Name": "TransactionExpired",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The block number provided in a DID-authorized operation is invalid."
            ]
          },
          {
            "Name": "AlreadyDeleted",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "The DID has already been previously deleted."
            ]
          },
          {
            "Name": "NotOwnerOfDeposit",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "Only the owner of the deposit can reclaim its reserved balance."
            ]
          },
          {
            "Name": "UnableToPayFees",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The origin is unable to reserve the deposit and pay the fee."
            ]
          },
          {
            "Name": "MaxNumberOfServicesExceeded",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The maximum number of service endpoints for a DID has been exceeded."
            ]
          },
          {
            "Name": "MaxServiceIdLengthExceeded",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The service endpoint ID exceeded the maximum allowed length."
            ]
          },
          {
            "Name": "MaxServiceTypeLengthExceeded",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "One of the service endpoint types exceeded the maximum allowed",
              "length."
            ]
          },
          {
            "Name": "MaxNumberOfTypesPerServiceExceeded",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The maximum number of types for a service endpoint has been",
              "exceeded."
            ]
          },
          {
            "Name": "MaxServiceUrlLengthExceeded",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "One of the service endpoint URLs exceeded the maximum allowed",
              "length."
            ]
          },
          {
            "Name": "MaxNumberOfUrlsPerServiceExceeded",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "The maximum number of URLs for a service endpoint has been exceeded."
            ]
          },
          {
            "Name": "ServiceAlreadyExists",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "A service with the provided ID is already present for the given DID."
            ]
          },
          {
            "Name": "ServiceNotFound",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "A service with the provided ID is not present under the given DID."
            ]
          },
          {
            "Name": "InvalidServiceEncoding",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "One of the service endpoint details contains non-ASCII characters."
            ]
          },
          {
            "Name": "MaxStoredEndpointsCountExceeded",
            "TypeFields": null,
            "Index": 25,
            "Docs": [
              "The number of service endpoints stored under the DID is larger than",
              "the number of endpoints to delete."
            ]
          },
          {
            "Name": "Internal",
            "TypeFields": null,
            "Index": 26,
            "Docs": [
              "An error that is not supposed to take place, yet it happened."
            ]
          }
        ],
        "Path": [
          "did",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "543": {
        "TypeFields": [
          {
            "Name": "did",
            "TypeName": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "deposit",
            "TypeName": "Deposit<Account, Balance>",
            "TypeId": 179
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "connection_record",
          "ConnectionRecord"
        ],
        "TypeParams": [
          {
            "Name": "DidIdentifier",
            "TypeId": 0
          },
          {
            "Name": "Account",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          }
        ],
        "TypeDef": "Composite"
      },
      "544": {
        "TypeIds": [
          0,
          119
        ],
        "TypeDef": "Tuple"
      },
      "545": {
        "Variants": [
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The association does not exist."
            ]
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The origin was not allowed to manage the association between the DID",
              "and the account ID."
            ]
          },
          {
            "Name": "OutdatedProof",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The supplied proof of ownership was outdated."
            ]
          },
          {
            "Name": "InsufficientFunds",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The account has insufficient funds and can't pay the fees or reserve",
              "the deposit."
            ]
          },
          {
            "Name": "Migration",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The ConnectedAccounts and ConnectedDids storage are out of sync.",
              "",
              "NOTE: this will only be returned if the storage has inconsistencies."
            ]
          }
        ],
        "Path": [
          "pallet_did_lookup",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "546": {
        "TypeFields": [
          {
            "Name": "owner",
            "TypeName": "Owner",
            "TypeId": 0
          },
          {
            "Name": "claimed_at",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "deposit",
            "TypeName": "Deposit",
            "TypeId": 179
          }
        ],
        "Path": [
          "pallet_web3_names",
          "web3_name",
          "Web3NameOwnership"
        ],
        "TypeParams": [
          {
            "Name": "Owner",
            "TypeId": 0
          },
          {
            "Name": "Deposit",
            "TypeId": 179
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Composite"
      },
      "547": {
        "Variants": [
          {
            "Name": "InsufficientFunds",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The tx submitter does not have enough funds to pay for the deposit."
            ]
          },
          {
            "Name": "AlreadyExists",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The specified name has already been previously claimed."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The specified name does not exist."
            ]
          },
          {
            "Name": "OwnerAlreadyExists",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The specified owner already owns a name."
            ]
          },
          {
            "Name": "OwnerNotFound",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The specified owner does not own any names."
            ]
          },
          {
            "Name": "Banned",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The specified name has been banned and cannot be interacted",
              "with."
            ]
          },
          {
            "Name": "NotBanned",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "The specified name is not currently banned."
            ]
          },
          {
            "Name": "AlreadyBanned",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The specified name has already been previously banned."
            ]
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "The actor cannot performed the specified operation."
            ]
          },
          {
            "Name": "TooShort",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "A name that is too short is being claimed."
            ]
          },
          {
            "Name": "TooLong",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "A name that is too long is being claimed."
            ]
          },
          {
            "Name": "InvalidCharacter",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "A name that contains not allowed characters is being claimed."
            ]
          }
        ],
        "Path": [
          "pallet_web3_names",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "548": {
        "TypeFields": [
          {
            "Name": "ctype_hash",
            "TypeName": "CTypeHash",
            "TypeId": 12
          },
          {
            "Name": "attester",
            "TypeName": "Attester",
            "TypeId": 0
          },
          {
            "Name": "revoked",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "block_number",
            "TypeName": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "deposit",
            "TypeName": "Deposit<AccountId, Balance>",
            "TypeId": 179
          },
          {
            "Name": "authorization_id",
            "TypeName": "Option<AuthorizationId>",
            "TypeId": 113
          }
        ],
        "Path": [
          "public_credentials",
          "credentials",
          "CredentialEntry"
        ],
        "TypeParams": [
          {
            "Name": "CTypeHash",
            "TypeId": 12
          },
          {
            "Name": "Attester",
            "TypeId": 0
          },
          {
            "Name": "BlockNumber",
            "TypeId": 4
          },
          {
            "Name": "AccountId",
            "TypeId": 0
          },
          {
            "Name": "Balance",
            "TypeId": 6
          },
          {
            "Name": "AuthorizationId",
            "TypeId": 114
          }
        ],
        "TypeDef": "Composite"
      },
      "549": {
        "Variants": [
          {
            "Name": "AlreadyAttested",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "A credential with the same root hash has already issued to the",
              "specified subject."
            ]
          },
          {
            "Name": "NotFound",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "No credential with the specified root hash has been issued to the",
              "specified subject."
            ]
          },
          {
            "Name": "UnableToPayFees",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "Not enough tokens to pay for the fees or the deposit."
            ]
          },
          {
            "Name": "InvalidInput",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The credential input is invalid."
            ]
          },
          {
            "Name": "NotAuthorized",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The caller is not authorized to performed the operation."
            ]
          },
          {
            "Name": "Internal",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "Catch-all for any other errors that should not happen, yet it",
              "happened."
            ]
          }
        ],
        "Path": [
          "public_credentials",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "550": {
        "Variants": [
          {
            "Name": "KeyParse",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "pallet_migration",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "551": {
        "TypeIds": [
          0,
          56
        ],
        "TypeDef": "Tuple"
      },
      "552": {
        "Variants": [
          {
            "Name": "CommitmentNotFound",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The specified commitment cannot be found."
            ]
          },
          {
            "Name": "IdentityProvider",
            "TypeFields": [
              {
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 1,
            "Docs": [
              "Error when retrieving the identity details of the provided subject."
            ]
          },
          {
            "Name": "IdentityCommitmentGenerator",
            "TypeFields": [
              {
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 2,
            "Docs": [
              "Error when generating a commitment for the retrieved identity."
            ]
          },
          {
            "Name": "Hook",
            "TypeFields": [
              {
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 3,
            "Docs": [
              "Error inside the external hook logic."
            ]
          }
        ],
        "Path": [
          "pallet_dip_provider",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "553": {
        "TypeIds": [
          167,
          168
        ],
        "TypeDef": "Tuple"
      },
      "554": {
        "Variants": [
          {
            "Name": "DepositNotFound",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The deposit with the provided key was not found within the specified",
              "namespace."
            ]
          },
          {
            "Name": "DepositExisting",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "A deposit with the provided key already exists within the specified",
              "namespace."
            ]
          },
          {
            "Name": "Unauthorized",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The origin was not authorized to perform the operation on the",
              "specified deposit entry."
            ]
          },
          {
            "Name": "FailedToHold",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The origin did not have enough fund to pay for the deposit."
            ]
          },
          {
            "Name": "FailedToRelease",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "Error when trying to release a previously-reserved deposit."
            ]
          },
          {
            "Name": "Hook",
            "TypeFields": [
              {
                "TypeName": "u16",
                "TypeId": 56
              }
            ],
            "Index": 5,
            "Docs": [
              "The external hook failed."
            ]
          }
        ],
        "Path": [
          "pallet_deposit_storage",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "555": {
        "TypeId": 556,
        "TypeDef": "Sequence"
      },
      "556": {
        "TypeFields": [
          {
            "Name": "used_bandwidth",
            "TypeName": "UsedBandwidth",
            "TypeId": 557
          },
          {
            "Name": "para_head_hash",
            "TypeName": "Option<H>",
            "TypeId": 305
          },
          {
            "Name": "consumed_go_ahead_signal",
            "TypeName": "Option<relay_chain::UpgradeGoAhead>",
            "TypeId": 562
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "Ancestor"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "557": {
        "TypeFields": [
          {
            "Name": "ump_msg_count",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "ump_total_bytes",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "hrmp_outgoing",
            "TypeName": "BTreeMap<ParaId, HrmpChannelUpdate>",
            "TypeId": 558
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "UsedBandwidth"
        ],
        "TypeDef": "Composite"
      },
      "558": {
        "TypeFields": [
          {
            "TypeId": 560
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 215
          },
          {
            "Name": "V",
            "TypeId": 559
          }
        ],
        "TypeDef": "Composite"
      },
      "559": {
        "TypeFields": [
          {
            "Name": "msg_count",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "total_bytes",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "HrmpChannelUpdate"
        ],
        "TypeDef": "Composite"
      },
      "560": {
        "TypeId": 561,
        "TypeDef": "Sequence"
      },
      "561": {
        "TypeIds": [
          215,
          559
        ],
        "TypeDef": "Tuple"
      },
      "562": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 563
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 563
          }
        ],
        "TypeDef": "Variant"
      },
      "563": {
        "Variants": [
          {
            "Name": "Abort",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "GoAhead",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "UpgradeGoAhead"
        ],
        "TypeDef": "Variant"
      },
      "564": {
        "TypeFields": [
          {
            "Name": "used_bandwidth",
            "TypeName": "UsedBandwidth",
            "TypeId": 557
          },
          {
            "Name": "hrmp_watermark",
            "TypeName": "Option<relay_chain::BlockNumber>",
            "TypeId": 304
          },
          {
            "Name": "consumed_go_ahead_signal",
            "TypeName": "Option<relay_chain::UpgradeGoAhead>",
            "TypeId": 562
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "unincluded_segment",
          "SegmentTracker"
        ],
        "TypeParams": [
          {
            "Name": "H",
            "TypeId": 12
          }
        ],
        "TypeDef": "Composite"
      },
      "565": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 566
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 566
          }
        ],
        "TypeDef": "Variant"
      },
      "566": {
        "Variants": [
          {
            "Name": "Present",
            "TypeFields": null,
            "Index": 0
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "UpgradeRestriction"
        ],
        "TypeDef": "Variant"
      },
      "567": {
        "TypeFields": [
          {
            "Name": "dmq_mqc_head",
            "TypeName": "relay_chain::Hash",
            "TypeId": 12
          },
          {
            "Name": "relay_dispatch_queue_remaining_capacity",
            "TypeName": "RelayDispatchQueueRemainingCapacity",
            "TypeId": 568
          },
          {
            "Name": "ingress_channels",
            "TypeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
            "TypeId": 569
          },
          {
            "Name": "egress_channels",
            "TypeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
            "TypeId": 569
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "relay_state_snapshot",
          "MessagingStateSnapshot"
        ],
        "TypeDef": "Composite"
      },
      "568": {
        "TypeFields": [
          {
            "Name": "remaining_count",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "remaining_size",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "relay_state_snapshot",
          "RelayDispatchQueueRemainingCapacity"
        ],
        "TypeDef": "Composite"
      },
      "569": {
        "TypeId": 570,
        "TypeDef": "Sequence"
      },
      "570": {
        "TypeIds": [
          215,
          571
        ],
        "TypeDef": "Tuple"
      },
      "571": {
        "TypeFields": [
          {
            "Name": "max_capacity",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "max_total_size",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "max_message_size",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "msg_count",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "total_size",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "mqc_head",
            "TypeName": "Option<Hash>",
            "TypeId": 305
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "AbridgedHrmpChannel"
        ],
        "TypeDef": "Composite"
      },
      "572": {
        "TypeFields": [
          {
            "Name": "max_code_size",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "max_head_data_size",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "max_upward_queue_count",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "max_upward_queue_size",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "max_upward_message_size",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "max_upward_message_num_per_candidate",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "hrmp_max_message_num_per_candidate",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "validation_upgrade_cooldown",
            "TypeName": "BlockNumber",
            "TypeId": 8
          },
          {
            "Name": "validation_upgrade_delay",
            "TypeName": "BlockNumber",
            "TypeId": 8
          },
          {
            "Name": "async_backing_params",
            "TypeName": "AsyncBackingParams",
            "TypeId": 573
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "AbridgedHostConfiguration"
        ],
        "TypeDef": "Composite"
      },
      "573": {
        "TypeFields": [
          {
            "Name": "max_candidate_depth",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "allowed_ancestry_len",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "polkadot_primitives",
          "v6",
          "async_backing",
          "AsyncBackingParams"
        ],
        "TypeDef": "Composite"
      },
      "574": {
        "TypeFields": [
          {
            "TypeName": "RelayHash",
            "TypeId": 12
          }
        ],
        "Path": [
          "cumulus_primitives_parachain_inherent",
          "MessageQueueChain"
        ],
        "TypeDef": "Composite"
      },
      "575": {
        "TypeFields": [
          {
            "TypeId": 576
          }
        ],
        "Path": [
          "BTreeMap"
        ],
        "TypeParams": [
          {
            "Name": "K",
            "TypeId": 215
          },
          {
            "Name": "V",
            "TypeId": 574
          }
        ],
        "TypeDef": "Composite"
      },
      "576": {
        "TypeId": 577,
        "TypeDef": "Sequence"
      },
      "577": {
        "TypeIds": [
          215,
          574
        ],
        "TypeDef": "Tuple"
      },
      "578": {
        "TypeId": 579,
        "TypeDef": "Sequence"
      },
      "579": {
        "TypeFields": [
          {
            "Name": "recipient",
            "TypeName": "Id",
            "TypeId": 215
          },
          {
            "Name": "data",
            "TypeName": "sp_std::vec::Vec<u8>",
            "TypeId": 13
          }
        ],
        "Path": [
          "polkadot_core_primitives",
          "OutboundHrmpMessage"
        ],
        "TypeParams": [
          {
            "Name": "Id",
            "TypeId": 215
          }
        ],
        "TypeDef": "Composite"
      },
      "580": {
        "Variants": [
          {
            "Name": "OverlappingUpgrades",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Attempt to upgrade validation function while existing upgrade pending."
            ]
          },
          {
            "Name": "ProhibitedByPolkadot",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Polkadot currently prohibits this parachain from upgrading its validation function."
            ]
          },
          {
            "Name": "TooBig",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The supplied validation function has compiled into a blob larger than Polkadot is",
              "willing to run."
            ]
          },
          {
            "Name": "ValidationDataNotAvailable",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The inherent which supplies the validation data did not run this block."
            ]
          },
          {
            "Name": "HostConfigurationNotAvailable",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The inherent which supplies the host configuration did not run this block."
            ]
          },
          {
            "Name": "NotScheduled",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "No validation function upgrade is currently scheduled."
            ]
          },
          {
            "Name": "NothingAuthorized",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "No code upgrade has been authorized."
            ]
          },
          {
            "Name": "Unauthorized",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The given code upgrade has not been authorized."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_parachain_system",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "581": {
        "TypeFields": [
          {
            "TypeName": "BTreeSet<T>",
            "TypeId": 582
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_btree_set",
          "BoundedBTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 215
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "582": {
        "TypeFields": [
          {
            "TypeId": 583
          }
        ],
        "Path": [
          "BTreeSet"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 215
          }
        ],
        "TypeDef": "Composite"
      },
      "583": {
        "TypeId": 215,
        "TypeDef": "Sequence"
      },
      "584": {
        "TypeId": 585,
        "TypeDef": "Sequence"
      },
      "585": {
        "TypeFields": [
          {
            "Name": "recipient",
            "TypeName": "ParaId",
            "TypeId": 215
          },
          {
            "Name": "state",
            "TypeName": "OutboundState",
            "TypeId": 586
          },
          {
            "Name": "signals_exist",
            "TypeName": "bool",
            "TypeId": 30
          },
          {
            "Name": "first_index",
            "TypeName": "u16",
            "TypeId": 56
          },
          {
            "Name": "last_index",
            "TypeName": "u16",
            "TypeId": 56
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "OutboundChannelDetails"
        ],
        "TypeDef": "Composite"
      },
      "586": {
        "Variants": [
          {
            "Name": "Ok",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Suspended",
            "TypeFields": null,
            "Index": 1
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "OutboundState"
        ],
        "TypeDef": "Variant"
      },
      "587": {
        "TypeIds": [
          215,
          56
        ],
        "TypeDef": "Tuple"
      },
      "588": {
        "TypeFields": [
          {
            "Name": "suspend_threshold",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "drop_threshold",
            "TypeName": "u32",
            "TypeId": 8
          },
          {
            "Name": "resume_threshold",
            "TypeName": "u32",
            "TypeId": 8
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "QueueConfigData"
        ],
        "TypeDef": "Composite"
      },
      "589": {
        "Variants": [
          {
            "Name": "BadQueueConfig",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Setting the queue config failed since one of its values was invalid."
            ]
          },
          {
            "Name": "AlreadySuspended",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "The execution is already suspended."
            ]
          },
          {
            "Name": "AlreadyResumed",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The execution is already resumed."
            ]
          }
        ],
        "Path": [
          "cumulus_pallet_xcmp_queue",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "590": {
        "Variants": [
          {
            "Name": "Pending",
            "TypeFields": [
              {
                "Name": "responder",
                "TypeName": "VersionedLocation",
                "TypeId": 89
              },
              {
                "Name": "maybe_match_querier",
                "TypeName": "Option<VersionedLocation>",
                "TypeId": 591
              },
              {
                "Name": "maybe_notify",
                "TypeName": "Option<(u8, u8)>",
                "TypeId": 592
              },
              {
                "Name": "timeout",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 0
          },
          {
            "Name": "VersionNotifier",
            "TypeFields": [
              {
                "Name": "origin",
                "TypeName": "VersionedLocation",
                "TypeId": 89
              },
              {
                "Name": "is_active",
                "TypeName": "bool",
                "TypeId": 30
              }
            ],
            "Index": 1
          },
          {
            "Name": "Ready",
            "TypeFields": [
              {
                "Name": "response",
                "TypeName": "VersionedResponse",
                "TypeId": 594
              },
              {
                "Name": "at",
                "TypeName": "BlockNumber",
                "TypeId": 4
              }
            ],
            "Index": 2
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "QueryStatus"
        ],
        "TypeParams": [
          {
            "Name": "BlockNumber",
            "TypeId": 4
          }
        ],
        "TypeDef": "Variant"
      },
      "591": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 89
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 89
          }
        ],
        "TypeDef": "Variant"
      },
      "592": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 593
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 593
          }
        ],
        "TypeDef": "Variant"
      },
      "593": {
        "TypeIds": [
          2,
          2
        ],
        "TypeDef": "Tuple"
      },
      "594": {
        "Variants": [
          {
            "Name": "V2",
            "TypeFields": [
              {
                "TypeName": "v2::Response",
                "TypeId": 402
              }
            ],
            "Index": 2
          },
          {
            "Name": "V3",
            "TypeFields": [
              {
                "TypeName": "v3::Response",
                "TypeId": 413
              }
            ],
            "Index": 3
          },
          {
            "Name": "V4",
            "TypeFields": [
              {
                "TypeName": "v4::Response",
                "TypeId": 190
              }
            ],
            "Index": 4
          }
        ],
        "Path": [
          "xcm",
          "VersionedResponse"
        ],
        "TypeDef": "Variant"
      },
      "595": {
        "TypeIds": [
          8,
          89
        ],
        "TypeDef": "Tuple"
      },
      "596": {
        "TypeIds": [
          4,
          10,
          8
        ],
        "TypeDef": "Tuple"
      },
      "597": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 599
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 598
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "598": {
        "TypeIds": [
          89,
          8
        ],
        "TypeDef": "Tuple"
      },
      "599": {
        "TypeId": 598,
        "TypeDef": "Sequence"
      },
      "600": {
        "Variants": [
          {
            "Name": "MigrateSupportedVersion",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "MigrateVersionNotifiers",
            "TypeFields": null,
            "Index": 1
          },
          {
            "Name": "NotifyCurrentTargets",
            "TypeFields": [
              {
                "TypeName": "Option<Vec<u8>>",
                "TypeId": 601
              }
            ],
            "Index": 2
          },
          {
            "Name": "MigrateAndNotifyOldTargets",
            "TypeFields": null,
            "Index": 3
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "VersionMigrationStage"
        ],
        "TypeDef": "Variant"
      },
      "601": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 13
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 13
          }
        ],
        "TypeDef": "Variant"
      },
      "602": {
        "TypeIds": [
          8,
          0,
          63
        ],
        "TypeDef": "Tuple"
      },
      "603": {
        "TypeFields": [
          {
            "Name": "amount",
            "TypeName": "u128",
            "TypeId": 6
          },
          {
            "Name": "owner",
            "TypeName": "VersionedLocation",
            "TypeId": 89
          },
          {
            "Name": "locker",
            "TypeName": "VersionedLocation",
            "TypeId": 89
          },
          {
            "Name": "consumers",
            "TypeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
            "TypeId": 604
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "RemoteLockedFungibleRecord"
        ],
        "TypeParams": [
          {
            "Name": "ConsumerIdentifier",
            "TypeId": 45
          },
          {
            "Name": "MaxConsumers"
          }
        ],
        "TypeDef": "Composite"
      },
      "604": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 606
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 605
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "605": {
        "TypeIds": [
          45,
          6
        ],
        "TypeDef": "Tuple"
      },
      "606": {
        "TypeId": 605,
        "TypeDef": "Sequence"
      },
      "607": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 609
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 608
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "608": {
        "TypeIds": [
          6,
          89
        ],
        "TypeDef": "Tuple"
      },
      "609": {
        "TypeId": 608,
        "TypeDef": "Sequence"
      },
      "610": {
        "Variants": [
          {
            "Name": "Unreachable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "The desired destination was unreachable, generally because there is a no way of routing",
              "to it."
            ]
          },
          {
            "Name": "SendFailure",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "There was some other issue (i.e. not to do with routing) in sending the message.",
              "Perhaps a lack of space for buffering the message."
            ]
          },
          {
            "Name": "Filtered",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The message execution fails the filter."
            ]
          },
          {
            "Name": "UnweighableMessage",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The message's weight could not be determined."
            ]
          },
          {
            "Name": "DestinationNotInvertible",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The destination `Location` provided cannot be inverted."
            ]
          },
          {
            "Name": "Empty",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "The assets to be sent are empty."
            ]
          },
          {
            "Name": "CannotReanchor",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "Could not re-anchor the assets to declare the fees for the destination chain."
            ]
          },
          {
            "Name": "TooManyAssets",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "Too many assets have been attempted for transfer."
            ]
          },
          {
            "Name": "InvalidOrigin",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Origin is invalid for sending."
            ]
          },
          {
            "Name": "BadVersion",
            "TypeFields": null,
            "Index": 9,
            "Docs": [
              "The version of the `Versioned` value used is not able to be interpreted."
            ]
          },
          {
            "Name": "BadLocation",
            "TypeFields": null,
            "Index": 10,
            "Docs": [
              "The given location could not be used (e.g. because it cannot be expressed in the",
              "desired version of XCM)."
            ]
          },
          {
            "Name": "NoSubscription",
            "TypeFields": null,
            "Index": 11,
            "Docs": [
              "The referenced subscription could not be found."
            ]
          },
          {
            "Name": "AlreadySubscribed",
            "TypeFields": null,
            "Index": 12,
            "Docs": [
              "The location is invalid since it already has a subscription from us."
            ]
          },
          {
            "Name": "CannotCheckOutTeleport",
            "TypeFields": null,
            "Index": 13,
            "Docs": [
              "Could not check-out the assets for teleportation to the destination chain."
            ]
          },
          {
            "Name": "LowBalance",
            "TypeFields": null,
            "Index": 14,
            "Docs": [
              "The owner does not own (all) of the asset that they wish to do the operation on."
            ]
          },
          {
            "Name": "TooManyLocks",
            "TypeFields": null,
            "Index": 15,
            "Docs": [
              "The asset owner has too many locks on the asset."
            ]
          },
          {
            "Name": "AccountNotSovereign",
            "TypeFields": null,
            "Index": 16,
            "Docs": [
              "The given account is not an identifiable sovereign account for any location."
            ]
          },
          {
            "Name": "FeesNotMet",
            "TypeFields": null,
            "Index": 17,
            "Docs": [
              "The operation required fees to be paid which the initiator could not meet."
            ]
          },
          {
            "Name": "LockNotFound",
            "TypeFields": null,
            "Index": 18,
            "Docs": [
              "A remote lock with the corresponding data could not be found."
            ]
          },
          {
            "Name": "InUse",
            "TypeFields": null,
            "Index": 19,
            "Docs": [
              "The unlock operation cannot succeed because there are still consumers of the lock."
            ]
          },
          {
            "Name": "InvalidAssetNotConcrete",
            "TypeFields": null,
            "Index": 20,
            "Docs": [
              "Invalid non-concrete asset."
            ]
          },
          {
            "Name": "InvalidAssetUnknownReserve",
            "TypeFields": null,
            "Index": 21,
            "Docs": [
              "Invalid asset, reserve chain could not be determined for it."
            ]
          },
          {
            "Name": "InvalidAssetUnsupportedReserve",
            "TypeFields": null,
            "Index": 22,
            "Docs": [
              "Invalid asset, do not support remote asset reserves with different fees reserves."
            ]
          },
          {
            "Name": "TooManyReserves",
            "TypeFields": null,
            "Index": 23,
            "Docs": [
              "Too many assets with different reserve locations have been attempted for transfer."
            ]
          },
          {
            "Name": "LocalExecutionIncomplete",
            "TypeFields": null,
            "Index": 24,
            "Docs": [
              "Local XCM execution incomplete."
            ]
          }
        ],
        "Path": [
          "pallet_xcm",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "611": {
        "TypeFields": [
          {
            "Name": "begin",
            "TypeName": "PageIndex",
            "TypeId": 8
          },
          {
            "Name": "end",
            "TypeName": "PageIndex",
            "TypeId": 8
          },
          {
            "Name": "count",
            "TypeName": "PageIndex",
            "TypeId": 8
          },
          {
            "Name": "ready_neighbours",
            "TypeName": "Option<Neighbours<MessageOrigin>>",
            "TypeId": 612
          },
          {
            "Name": "message_count",
            "TypeName": "u64",
            "TypeId": 4
          },
          {
            "Name": "size",
            "TypeName": "u64",
            "TypeId": 4
          }
        ],
        "Path": [
          "pallet_message_queue",
          "BookState"
        ],
        "TypeParams": [
          {
            "Name": "MessageOrigin",
            "TypeId": 214
          }
        ],
        "TypeDef": "Composite"
      },
      "612": {
        "Variants": [
          {
            "Name": "None",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Some",
            "TypeFields": [
              {
                "TypeId": 613
              }
            ],
            "Index": 1
          }
        ],
        "Path": [
          "Option"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 613
          }
        ],
        "TypeDef": "Variant"
      },
      "613": {
        "TypeFields": [
          {
            "Name": "prev",
            "TypeName": "MessageOrigin",
            "TypeId": 214
          },
          {
            "Name": "next",
            "TypeName": "MessageOrigin",
            "TypeId": 214
          }
        ],
        "Path": [
          "pallet_message_queue",
          "Neighbours"
        ],
        "TypeParams": [
          {
            "Name": "MessageOrigin",
            "TypeId": 214
          }
        ],
        "TypeDef": "Composite"
      },
      "614": {
        "TypeIds": [
          214,
          8
        ],
        "TypeDef": "Tuple"
      },
      "615": {
        "TypeFields": [
          {
            "Name": "remaining",
            "TypeName": "Size",
            "TypeId": 8
          },
          {
            "Name": "remaining_size",
            "TypeName": "Size",
            "TypeId": 8
          },
          {
            "Name": "first_index",
            "TypeName": "Size",
            "TypeId": 8
          },
          {
            "Name": "first",
            "TypeName": "Size",
            "TypeId": 8
          },
          {
            "Name": "last",
            "TypeName": "Size",
            "TypeId": 8
          },
          {
            "Name": "heap",
            "TypeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>",
            "TypeId": 616
          }
        ],
        "Path": [
          "pallet_message_queue",
          "Page"
        ],
        "TypeParams": [
          {
            "Name": "Size",
            "TypeId": 8
          },
          {
            "Name": "HeapSize"
          }
        ],
        "TypeDef": "Composite"
      },
      "616": {
        "TypeFields": [
          {
            "TypeName": "Vec<T>",
            "TypeId": 13
          }
        ],
        "Path": [
          "bounded_collections",
          "bounded_vec",
          "BoundedVec"
        ],
        "TypeParams": [
          {
            "Name": "T",
            "TypeId": 2
          },
          {
            "Name": "S"
          }
        ],
        "TypeDef": "Composite"
      },
      "617": {
        "Variants": [
          {
            "Name": "NotReapable",
            "TypeFields": null,
            "Index": 0,
            "Docs": [
              "Page is not reapable because it has items remaining to be processed and is not old",
              "enough."
            ]
          },
          {
            "Name": "NoPage",
            "TypeFields": null,
            "Index": 1,
            "Docs": [
              "Page to be reaped does not exist."
            ]
          },
          {
            "Name": "NoMessage",
            "TypeFields": null,
            "Index": 2,
            "Docs": [
              "The referenced message could not be found."
            ]
          },
          {
            "Name": "AlreadyProcessed",
            "TypeFields": null,
            "Index": 3,
            "Docs": [
              "The message was already processed and cannot be processed again."
            ]
          },
          {
            "Name": "Queued",
            "TypeFields": null,
            "Index": 4,
            "Docs": [
              "The message is queued for future execution."
            ]
          },
          {
            "Name": "InsufficientWeight",
            "TypeFields": null,
            "Index": 5,
            "Docs": [
              "There is temporarily not enough weight to continue servicing messages."
            ]
          },
          {
            "Name": "TemporarilyUnprocessable",
            "TypeFields": null,
            "Index": 6,
            "Docs": [
              "This message is temporarily unprocessable.",
              "",
              "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
              "retrying."
            ]
          },
          {
            "Name": "QueuePaused",
            "TypeFields": null,
            "Index": 7,
            "Docs": [
              "The queue is paused and no message can be executed from it.",
              "",
              "This can change at any time and may resolve in the future by re-trying."
            ]
          },
          {
            "Name": "RecursiveDisallowed",
            "TypeFields": null,
            "Index": 8,
            "Docs": [
              "Another call is in progress and needs to finish before this call can happen."
            ]
          }
        ],
        "Path": [
          "pallet_message_queue",
          "pallet",
          "Error"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Variant",
        "Docs": [
          "The `Error` enum of this pallet."
        ]
      },
      "618": {
        "TypeFields": [
          {
            "TypeId": 13
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "unchecked_extrinsic",
          "UncheckedExtrinsic"
        ],
        "TypeParams": [
          {
            "Name": "Address",
            "TypeId": 241
          },
          {
            "Name": "Call",
            "TypeId": 301
          },
          {
            "Name": "Signature",
            "TypeId": 371
          },
          {
            "Name": "Extra",
            "TypeId": 619
          }
        ],
        "TypeDef": "Composite"
      },
      "619": {
        "TypeIds": [
          620,
          621,
          622,
          623,
          624,
          626,
          627,
          628
        ],
        "TypeDef": "Tuple"
      },
      "620": {
        "Path": [
          "frame_system",
          "extensions",
          "check_non_zero_sender",
          "CheckNonZeroSender"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "621": {
        "Path": [
          "frame_system",
          "extensions",
          "check_spec_version",
          "CheckSpecVersion"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "622": {
        "Path": [
          "frame_system",
          "extensions",
          "check_tx_version",
          "CheckTxVersion"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "623": {
        "Path": [
          "frame_system",
          "extensions",
          "check_genesis",
          "CheckGenesis"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "624": {
        "TypeFields": [
          {
            "TypeName": "Era",
            "TypeId": 625
          }
        ],
        "Path": [
          "frame_system",
          "extensions",
          "check_mortality",
          "CheckMortality"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "625": {
        "Variants": [
          {
            "Name": "Immortal",
            "TypeFields": null,
            "Index": 0
          },
          {
            "Name": "Mortal1",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 1
          },
          {
            "Name": "Mortal2",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 2
          },
          {
            "Name": "Mortal3",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 3
          },
          {
            "Name": "Mortal4",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 4
          },
          {
            "Name": "Mortal5",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 5
          },
          {
            "Name": "Mortal6",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 6
          },
          {
            "Name": "Mortal7",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 7
          },
          {
            "Name": "Mortal8",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 8
          },
          {
            "Name": "Mortal9",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 9
          },
          {
            "Name": "Mortal10",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 10
          },
          {
            "Name": "Mortal11",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 11
          },
          {
            "Name": "Mortal12",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 12
          },
          {
            "Name": "Mortal13",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 13
          },
          {
            "Name": "Mortal14",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 14
          },
          {
            "Name": "Mortal15",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 15
          },
          {
            "Name": "Mortal16",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 16
          },
          {
            "Name": "Mortal17",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 17
          },
          {
            "Name": "Mortal18",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 18
          },
          {
            "Name": "Mortal19",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 19
          },
          {
            "Name": "Mortal20",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 20
          },
          {
            "Name": "Mortal21",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 21
          },
          {
            "Name": "Mortal22",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 22
          },
          {
            "Name": "Mortal23",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 23
          },
          {
            "Name": "Mortal24",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 24
          },
          {
            "Name": "Mortal25",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 25
          },
          {
            "Name": "Mortal26",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 26
          },
          {
            "Name": "Mortal27",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 27
          },
          {
            "Name": "Mortal28",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 28
          },
          {
            "Name": "Mortal29",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 29
          },
          {
            "Name": "Mortal30",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 30
          },
          {
            "Name": "Mortal31",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 31
          },
          {
            "Name": "Mortal32",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 32
          },
          {
            "Name": "Mortal33",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 33
          },
          {
            "Name": "Mortal34",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 34
          },
          {
            "Name": "Mortal35",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 35
          },
          {
            "Name": "Mortal36",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 36
          },
          {
            "Name": "Mortal37",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 37
          },
          {
            "Name": "Mortal38",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 38
          },
          {
            "Name": "Mortal39",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 39
          },
          {
            "Name": "Mortal40",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 40
          },
          {
            "Name": "Mortal41",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 41
          },
          {
            "Name": "Mortal42",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 42
          },
          {
            "Name": "Mortal43",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 43
          },
          {
            "Name": "Mortal44",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 44
          },
          {
            "Name": "Mortal45",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 45
          },
          {
            "Name": "Mortal46",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 46
          },
          {
            "Name": "Mortal47",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 47
          },
          {
            "Name": "Mortal48",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 48
          },
          {
            "Name": "Mortal49",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 49
          },
          {
            "Name": "Mortal50",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 50
          },
          {
            "Name": "Mortal51",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 51
          },
          {
            "Name": "Mortal52",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 52
          },
          {
            "Name": "Mortal53",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 53
          },
          {
            "Name": "Mortal54",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 54
          },
          {
            "Name": "Mortal55",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 55
          },
          {
            "Name": "Mortal56",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 56
          },
          {
            "Name": "Mortal57",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 57
          },
          {
            "Name": "Mortal58",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 58
          },
          {
            "Name": "Mortal59",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 59
          },
          {
            "Name": "Mortal60",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 60
          },
          {
            "Name": "Mortal61",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 61
          },
          {
            "Name": "Mortal62",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 62
          },
          {
            "Name": "Mortal63",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 63
          },
          {
            "Name": "Mortal64",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 64
          },
          {
            "Name": "Mortal65",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 65
          },
          {
            "Name": "Mortal66",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 66
          },
          {
            "Name": "Mortal67",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 67
          },
          {
            "Name": "Mortal68",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 68
          },
          {
            "Name": "Mortal69",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 69
          },
          {
            "Name": "Mortal70",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 70
          },
          {
            "Name": "Mortal71",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 71
          },
          {
            "Name": "Mortal72",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 72
          },
          {
            "Name": "Mortal73",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 73
          },
          {
            "Name": "Mortal74",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 74
          },
          {
            "Name": "Mortal75",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 75
          },
          {
            "Name": "Mortal76",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 76
          },
          {
            "Name": "Mortal77",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 77
          },
          {
            "Name": "Mortal78",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 78
          },
          {
            "Name": "Mortal79",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 79
          },
          {
            "Name": "Mortal80",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 80
          },
          {
            "Name": "Mortal81",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 81
          },
          {
            "Name": "Mortal82",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 82
          },
          {
            "Name": "Mortal83",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 83
          },
          {
            "Name": "Mortal84",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 84
          },
          {
            "Name": "Mortal85",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 85
          },
          {
            "Name": "Mortal86",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 86
          },
          {
            "Name": "Mortal87",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 87
          },
          {
            "Name": "Mortal88",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 88
          },
          {
            "Name": "Mortal89",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 89
          },
          {
            "Name": "Mortal90",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 90
          },
          {
            "Name": "Mortal91",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 91
          },
          {
            "Name": "Mortal92",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 92
          },
          {
            "Name": "Mortal93",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 93
          },
          {
            "Name": "Mortal94",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 94
          },
          {
            "Name": "Mortal95",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 95
          },
          {
            "Name": "Mortal96",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 96
          },
          {
            "Name": "Mortal97",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 97
          },
          {
            "Name": "Mortal98",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 98
          },
          {
            "Name": "Mortal99",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 99
          },
          {
            "Name": "Mortal100",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 100
          },
          {
            "Name": "Mortal101",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 101
          },
          {
            "Name": "Mortal102",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 102
          },
          {
            "Name": "Mortal103",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 103
          },
          {
            "Name": "Mortal104",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 104
          },
          {
            "Name": "Mortal105",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 105
          },
          {
            "Name": "Mortal106",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 106
          },
          {
            "Name": "Mortal107",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 107
          },
          {
            "Name": "Mortal108",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 108
          },
          {
            "Name": "Mortal109",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 109
          },
          {
            "Name": "Mortal110",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 110
          },
          {
            "Name": "Mortal111",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 111
          },
          {
            "Name": "Mortal112",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 112
          },
          {
            "Name": "Mortal113",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 113
          },
          {
            "Name": "Mortal114",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 114
          },
          {
            "Name": "Mortal115",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 115
          },
          {
            "Name": "Mortal116",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 116
          },
          {
            "Name": "Mortal117",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 117
          },
          {
            "Name": "Mortal118",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 118
          },
          {
            "Name": "Mortal119",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 119
          },
          {
            "Name": "Mortal120",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 120
          },
          {
            "Name": "Mortal121",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 121
          },
          {
            "Name": "Mortal122",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 122
          },
          {
            "Name": "Mortal123",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 123
          },
          {
            "Name": "Mortal124",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 124
          },
          {
            "Name": "Mortal125",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 125
          },
          {
            "Name": "Mortal126",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 126
          },
          {
            "Name": "Mortal127",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 127
          },
          {
            "Name": "Mortal128",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 128
          },
          {
            "Name": "Mortal129",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 129
          },
          {
            "Name": "Mortal130",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 130
          },
          {
            "Name": "Mortal131",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 131
          },
          {
            "Name": "Mortal132",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 132
          },
          {
            "Name": "Mortal133",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 133
          },
          {
            "Name": "Mortal134",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 134
          },
          {
            "Name": "Mortal135",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 135
          },
          {
            "Name": "Mortal136",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 136
          },
          {
            "Name": "Mortal137",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 137
          },
          {
            "Name": "Mortal138",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 138
          },
          {
            "Name": "Mortal139",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 139
          },
          {
            "Name": "Mortal140",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 140
          },
          {
            "Name": "Mortal141",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 141
          },
          {
            "Name": "Mortal142",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 142
          },
          {
            "Name": "Mortal143",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 143
          },
          {
            "Name": "Mortal144",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 144
          },
          {
            "Name": "Mortal145",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 145
          },
          {
            "Name": "Mortal146",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 146
          },
          {
            "Name": "Mortal147",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 147
          },
          {
            "Name": "Mortal148",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 148
          },
          {
            "Name": "Mortal149",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 149
          },
          {
            "Name": "Mortal150",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 150
          },
          {
            "Name": "Mortal151",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 151
          },
          {
            "Name": "Mortal152",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 152
          },
          {
            "Name": "Mortal153",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 153
          },
          {
            "Name": "Mortal154",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 154
          },
          {
            "Name": "Mortal155",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 155
          },
          {
            "Name": "Mortal156",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 156
          },
          {
            "Name": "Mortal157",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 157
          },
          {
            "Name": "Mortal158",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 158
          },
          {
            "Name": "Mortal159",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 159
          },
          {
            "Name": "Mortal160",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 160
          },
          {
            "Name": "Mortal161",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 161
          },
          {
            "Name": "Mortal162",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 162
          },
          {
            "Name": "Mortal163",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 163
          },
          {
            "Name": "Mortal164",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 164
          },
          {
            "Name": "Mortal165",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 165
          },
          {
            "Name": "Mortal166",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 166
          },
          {
            "Name": "Mortal167",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 167
          },
          {
            "Name": "Mortal168",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 168
          },
          {
            "Name": "Mortal169",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 169
          },
          {
            "Name": "Mortal170",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 170
          },
          {
            "Name": "Mortal171",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 171
          },
          {
            "Name": "Mortal172",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 172
          },
          {
            "Name": "Mortal173",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 173
          },
          {
            "Name": "Mortal174",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 174
          },
          {
            "Name": "Mortal175",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 175
          },
          {
            "Name": "Mortal176",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 176
          },
          {
            "Name": "Mortal177",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 177
          },
          {
            "Name": "Mortal178",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 178
          },
          {
            "Name": "Mortal179",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 179
          },
          {
            "Name": "Mortal180",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 180
          },
          {
            "Name": "Mortal181",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 181
          },
          {
            "Name": "Mortal182",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 182
          },
          {
            "Name": "Mortal183",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 183
          },
          {
            "Name": "Mortal184",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 184
          },
          {
            "Name": "Mortal185",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 185
          },
          {
            "Name": "Mortal186",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 186
          },
          {
            "Name": "Mortal187",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 187
          },
          {
            "Name": "Mortal188",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 188
          },
          {
            "Name": "Mortal189",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 189
          },
          {
            "Name": "Mortal190",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 190
          },
          {
            "Name": "Mortal191",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 191
          },
          {
            "Name": "Mortal192",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 192
          },
          {
            "Name": "Mortal193",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 193
          },
          {
            "Name": "Mortal194",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 194
          },
          {
            "Name": "Mortal195",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 195
          },
          {
            "Name": "Mortal196",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 196
          },
          {
            "Name": "Mortal197",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 197
          },
          {
            "Name": "Mortal198",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 198
          },
          {
            "Name": "Mortal199",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 199
          },
          {
            "Name": "Mortal200",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 200
          },
          {
            "Name": "Mortal201",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 201
          },
          {
            "Name": "Mortal202",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 202
          },
          {
            "Name": "Mortal203",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 203
          },
          {
            "Name": "Mortal204",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 204
          },
          {
            "Name": "Mortal205",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 205
          },
          {
            "Name": "Mortal206",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 206
          },
          {
            "Name": "Mortal207",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 207
          },
          {
            "Name": "Mortal208",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 208
          },
          {
            "Name": "Mortal209",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 209
          },
          {
            "Name": "Mortal210",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 210
          },
          {
            "Name": "Mortal211",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 211
          },
          {
            "Name": "Mortal212",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 212
          },
          {
            "Name": "Mortal213",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 213
          },
          {
            "Name": "Mortal214",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 214
          },
          {
            "Name": "Mortal215",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 215
          },
          {
            "Name": "Mortal216",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 216
          },
          {
            "Name": "Mortal217",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 217
          },
          {
            "Name": "Mortal218",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 218
          },
          {
            "Name": "Mortal219",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 219
          },
          {
            "Name": "Mortal220",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 220
          },
          {
            "Name": "Mortal221",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 221
          },
          {
            "Name": "Mortal222",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 222
          },
          {
            "Name": "Mortal223",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 223
          },
          {
            "Name": "Mortal224",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 224
          },
          {
            "Name": "Mortal225",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 225
          },
          {
            "Name": "Mortal226",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 226
          },
          {
            "Name": "Mortal227",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 227
          },
          {
            "Name": "Mortal228",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 228
          },
          {
            "Name": "Mortal229",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 229
          },
          {
            "Name": "Mortal230",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 230
          },
          {
            "Name": "Mortal231",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 231
          },
          {
            "Name": "Mortal232",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 232
          },
          {
            "Name": "Mortal233",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 233
          },
          {
            "Name": "Mortal234",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 234
          },
          {
            "Name": "Mortal235",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 235
          },
          {
            "Name": "Mortal236",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 236
          },
          {
            "Name": "Mortal237",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 237
          },
          {
            "Name": "Mortal238",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 238
          },
          {
            "Name": "Mortal239",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 239
          },
          {
            "Name": "Mortal240",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 240
          },
          {
            "Name": "Mortal241",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 241
          },
          {
            "Name": "Mortal242",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 242
          },
          {
            "Name": "Mortal243",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 243
          },
          {
            "Name": "Mortal244",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 244
          },
          {
            "Name": "Mortal245",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 245
          },
          {
            "Name": "Mortal246",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 246
          },
          {
            "Name": "Mortal247",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 247
          },
          {
            "Name": "Mortal248",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 248
          },
          {
            "Name": "Mortal249",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 249
          },
          {
            "Name": "Mortal250",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 250
          },
          {
            "Name": "Mortal251",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 251
          },
          {
            "Name": "Mortal252",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 252
          },
          {
            "Name": "Mortal253",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 253
          },
          {
            "Name": "Mortal254",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 254
          },
          {
            "Name": "Mortal255",
            "TypeFields": [
              {
                "TypeId": 2
              }
            ],
            "Index": 255
          }
        ],
        "Path": [
          "sp_runtime",
          "generic",
          "era",
          "Era"
        ],
        "TypeDef": "Variant"
      },
      "626": {
        "TypeFields": [
          {
            "TypeName": "T::Nonce",
            "TypeId": 11
          }
        ],
        "Path": [
          "frame_system",
          "extensions",
          "check_nonce",
          "CheckNonce"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "627": {
        "Path": [
          "frame_system",
          "extensions",
          "check_weight",
          "CheckWeight"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      },
      "628": {
        "TypeFields": [
          {
            "TypeName": "BalanceOf<T>",
            "TypeId": 72
          }
        ],
        "Path": [
          "pallet_transaction_payment",
          "ChargeTransactionPayment"
        ],
        "TypeParams": [
          {
            "Name": "T"
          }
        ],
        "TypeDef": "Composite"
      }
    },
    "Modules": {
      "0": {
        "Name": "System",
        "Storage": {
          "Prefix": "System",
          "Entries": [
            {
              "Name": "Account",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 3
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA",
              "Docs": [
                " The full account information for a particular account ID."
              ]
            },
            {
              "Name": "ExtrinsicCount",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Total extrinsics count for the current block."
              ]
            },
            {
              "Name": "BlockWeight",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 9,
                "Item2": null
              },
              "Default": "AAAAAAAA",
              "Docs": [
                " The current weight for the block."
              ]
            },
            {
              "Name": "AllExtrinsicsLen",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Total length (in bytes) for all extrinsics put together, for the current block."
              ]
            },
            {
              "Name": "BlockHash",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 12
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Map of block numbers to block hashes."
              ]
            },
            {
              "Name": "ExtrinsicData",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 8,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Extrinsics data for the current block (maps an extrinsic's index to its data)."
              ]
            },
            {
              "Name": "Number",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The current block number being processed. Set by `execute_block`."
              ]
            },
            {
              "Name": "ParentHash",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 12,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Hash of the previous block."
              ]
            },
            {
              "Name": "Digest",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 14,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Digest of the current block, also part of the block header."
              ]
            },
            {
              "Name": "Events",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 18,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Events deposited for the current block.",
                "",
                " NOTE: The item is unbound and should therefore never be read on chain.",
                " It could otherwise inflate the PoV size of a block.",
                "",
                " Events have a large in-memory size. Box the events to not go out-of-memory",
                " just in case someone still reads them from within the runtime."
              ]
            },
            {
              "Name": "EventCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of events in the `Events<T>` list."
              ]
            },
            {
              "Name": "EventTopics",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 218
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                " of events in the `<Events<T>>` list.",
                "",
                " All topic vectors have deterministic storage locations depending on the topic. This",
                " allows light-clients to leverage the changes trie storage tracking mechanism and",
                " in case of changes fetch the list of events of interest.",
                "",
                " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                " the `EventIndex` then in case if the topic has the same contents on the next block",
                " no notification will be triggered thus the event might be lost."
              ]
            },
            {
              "Name": "LastRuntimeUpgrade",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 219,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
              ]
            },
            {
              "Name": "UpgradedToU32RefCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
              ]
            },
            {
              "Name": "UpgradedToTripleRefCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                " (default) if not."
              ]
            },
            {
              "Name": "ExecutionPhase",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 217,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The execution phase of the block."
              ]
            },
            {
              "Name": "AuthorizedUpgrade",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 221,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " `Some` if a code upgrade has been authorized."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 222
        },
        "Events": {
          "TypeId": 21
        },
        "Constants": [
          {
            "Name": "BlockWeights",
            "TypeId": 226,
            "Value": "AlsfXQAHAIhSanQCAEABwqCpHQABB9AJGKRLAgDQAAEHAOa9T1cCAPAAAQAAwqCpHQABB9CrrL5oAgAgAQEHAIhSanQCAEABAQcAopQaHQIAUADCoKkdAAAAAA==",
            "Docs": [
              " Block & extrinsics weights: base values and limits."
            ]
          },
          {
            "Name": "BlockLength",
            "TypeId": 230,
            "Value": "AAA8AAAAUAAAAFAA",
            "Docs": [
              " The maximum length of a block (in bytes)."
            ]
          },
          {
            "Name": "BlockHashCount",
            "TypeId": 4,
            "Value": "YAkAAAAAAAA=",
            "Docs": [
              " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
            ]
          },
          {
            "Name": "DbWeight",
            "TypeId": 232,
            "Value": "CJ0mAgAAAAAA3OcEAAAAAA==",
            "Docs": [
              " The weight of runtime database operations the runtime can invoke."
            ]
          },
          {
            "Name": "Version",
            "TypeId": 233,
            "Value": "OGtpbHQtc3Bpcml0bmV0OGtpbHQtc3Bpcml0bmV0AQAAAI0sAAAAAAAASN9qy2iZB2CbBAAAADfjl/x8kfXkAgAAALydiZBPW5I/AQAAADfIuxNQqaKoBAAAAPP/FNWrUnBZAwAAAED+OtQB+JWaBgAAANK8mJfu0I8VAwAAAPeLJ4vlP0VMAgAAAKs8BXIpH+uLAQAAAN1xjVzFMmLUAQAAANe92KJyyg1lAQAAAOqT4/FvPWliAgAAACZglVXAZWYDAgAAAKR7fVRJlMmbAQAAAEW/ulGjELIjAQAAAMOz6NMyc5kNAQAAAKP9VTbupw50AQAAAPvFd7nXR+/WAQAAAAoAAAAA",
            "Docs": [
              " Get the chain's current version."
            ]
          },
          {
            "Name": "SS58Prefix",
            "TypeId": 56,
            "Value": "JgA=",
            "Docs": [
              " The designated SS58 prefix of this chain.",
              "",
              " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
              " that the runtime should know about the prefix in order to make use of it as",
              " an identifier of the chain."
            ]
          }
        ],
        "Errors": {
          "TypeId": 237
        },
        "Index": 0
      },
      "2": {
        "Name": "Timestamp",
        "Storage": {
          "Prefix": "Timestamp",
          "Entries": [
            {
              "Name": "Now",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The current time for the current block."
              ]
            },
            {
              "Name": "DidUpdate",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Whether the timestamp has been updated in this block.",
                "",
                " This value is updated to `true` upon successful submission of a timestamp by a node.",
                " It is then checked at the end of each block execution in the `on_finalize` hook."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 238
        },
        "Events": null,
        "Constants": [
          {
            "Name": "MinimumPeriod",
            "TypeId": 4,
            "Value": "cBcAAAAAAAA=",
            "Docs": [
              " The minimum period between blocks.",
              "",
              " Be aware that this is different to the *expected* period that the block production",
              " apparatus provides. Your chosen consensus system will generally work with this to",
              " determine a sensible block time. For example, in the Aura pallet it will be double this",
              " period on default settings."
            ]
          }
        ],
        "Errors": null,
        "Index": 2
      },
      "5": {
        "Name": "Indices",
        "Storage": {
          "Prefix": "Indices",
          "Entries": [
            {
              "Name": "Accounts",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 239
                }
              },
              "Default": "AA==",
              "Docs": [
                " The lookup from index to account."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 240
        },
        "Events": {
          "TypeId": 31
        },
        "Constants": [
          {
            "Name": "Deposit",
            "TypeId": 6,
            "Value": "ALR88yg1AAAAAAAAAAAAAA==",
            "Docs": [
              " The deposit needed for reserving an index."
            ]
          }
        ],
        "Errors": {
          "TypeId": 243
        },
        "Index": 5
      },
      "6": {
        "Name": "Balances",
        "Storage": {
          "Prefix": "Balances",
          "Entries": [
            {
              "Name": "TotalIssuance",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The total units issued in the system."
              ]
            },
            {
              "Name": "InactiveIssuance",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The total units of outstanding deactivated balance in the system."
              ]
            },
            {
              "Name": "Account",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 5
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgA==",
              "Docs": [
                " The Balances pallet example of storing the balance of an account.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                "  }",
                " ```",
                "",
                " You can also store the balance of an account in the `System` pallet.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "   type AccountStore = System",
                "  }",
                " ```",
                "",
                " But this comes with tradeoffs, storing account balances in the system pallet stores",
                " `frame_system` data alongside the account data contrary to storing account balances in the",
                " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                " NOTE: This is only used in the case that this pallet is used to store balances."
              ]
            },
            {
              "Name": "Locks",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 244
                }
              },
              "Default": "AA==",
              "Docs": [
                " Any liquidity locks on some account balances.",
                " NOTE: Should only be accessed when setting, changing and freeing a lock."
              ]
            },
            {
              "Name": "Reserves",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 248
                }
              },
              "Default": "AA==",
              "Docs": [
                " Named reserves on some account balances."
              ]
            },
            {
              "Name": "Holds",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 251
                }
              },
              "Default": "AA==",
              "Docs": [
                " Holds on account balances."
              ]
            },
            {
              "Name": "Freezes",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 254
                }
              },
              "Default": "AA==",
              "Docs": [
                " Freeze locks on account balances."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 259
        },
        "Events": {
          "TypeId": 32
        },
        "Constants": [
          {
            "Name": "ExistentialDeposit",
            "TypeId": 6,
            "Value": "AKByThgJAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
              "",
              " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
              " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
              " In case you have multiple sources of provider references, you may also get unexpected",
              " behaviour if you set this to zero.",
              "",
              " Bottom line: Do yourself a favour and make it at least one!"
            ]
          },
          {
            "Name": "MaxLocks",
            "TypeId": 8,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of locks that should exist on an account.",
              " Not strictly enforced, but used for weight estimation."
            ]
          },
          {
            "Name": "MaxReserves",
            "TypeId": 8,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of named reserves that can exist on an account."
            ]
          },
          {
            "Name": "MaxFreezes",
            "TypeId": 8,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of individual freeze locks that can exist on an account at any time."
            ]
          }
        ],
        "Errors": {
          "TypeId": 261
        },
        "Index": 6
      },
      "7": {
        "Name": "TransactionPayment",
        "Storage": {
          "Prefix": "TransactionPayment",
          "Entries": [
            {
              "Name": "NextFeeMultiplier",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 262,
                "Item2": null
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": []
            },
            {
              "Name": "StorageVersion",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 263,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": null,
        "Events": {
          "TypeId": 34
        },
        "Constants": [
          {
            "Name": "OperationalFeeMultiplier",
            "TypeId": 2,
            "Value": "BQ==",
            "Docs": [
              " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
              " `priority`",
              "",
              " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
              " added to a tip component in regular `priority` calculations.",
              " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
              " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
              "",
              " ```rust,ignore",
              " // For `Normal`",
              " let priority = priority_calc(tip);",
              "",
              " // For `Operational`",
              " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
              " let priority = priority_calc(tip + virtual_tip);",
              " ```",
              "",
              " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
              " sent with the transaction. So, not only does the transaction get a priority bump based",
              " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
              " transactions."
            ]
          }
        ],
        "Errors": null,
        "Index": 7
      },
      "23": {
        "Name": "Aura",
        "Storage": {
          "Prefix": "Aura",
          "Entries": [
            {
              "Name": "Authorities",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 264,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current authority set."
              ]
            },
            {
              "Name": "CurrentSlot",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 268,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The current slot of this block.",
                "",
                " This will be set in `on_initialize`."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 23
      },
      "22": {
        "Name": "Session",
        "Storage": {
          "Prefix": "Session",
          "Entries": [
            {
              "Name": "Validators",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 157,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current set of validators."
              ]
            },
            {
              "Name": "CurrentIndex",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Current index of the session."
              ]
            },
            {
              "Name": "QueuedChanged",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if the underlying economic identities or weighting behind the validators",
                " has changed in the queued validator set."
              ]
            },
            {
              "Name": "QueuedKeys",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 269,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The queued keys for the next session. When the next session begins, these keys",
                " will be used to determine the validator's session keys."
              ]
            },
            {
              "Name": "DisabledValidators",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 272,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Indices of disabled validators.",
                "",
                " The vec is always kept sorted so that we can find whether a given validator is",
                " disabled using binary search. It gets cleared when `on_session_ending` returns",
                " a new set of identities."
              ]
            },
            {
              "Name": "NextKeys",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 271
                }
              },
              "Default": "AA==",
              "Docs": [
                " The next session keys for a validator."
              ]
            },
            {
              "Name": "KeyOwner",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 273,
                  "Value": 0
                }
              },
              "Default": "AA==",
              "Docs": [
                " The owner of a key. The key is the `KeyTypeId` + the encoded key."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 275
        },
        "Events": {
          "TypeId": 35
        },
        "Constants": [],
        "Errors": {
          "TypeId": 276
        },
        "Index": 22
      },
      "21": {
        "Name": "ParachainStaking",
        "Storage": {
          "Prefix": "ParachainStaking",
          "Entries": [
            {
              "Name": "MaxSelectedCandidates",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The maximum number of collator candidates selected at each round."
              ]
            },
            {
              "Name": "Round",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 277,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAFAAAAAAAAAA=",
              "Docs": [
                " Current round number and next round scheduled transition."
              ]
            },
            {
              "Name": "LastDelegation",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 278
                }
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " Delegation information for the latest session in which a delegator",
                " delegated.",
                "",
                " It maps from an account to the number of delegations in the last",
                " session in which they (re-)delegated."
              ]
            },
            {
              "Name": "DelegatorState",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 279
                }
              },
              "Default": "AA==",
              "Docs": [
                " Delegation staking information.",
                "",
                " It maps from an account to its delegation details."
              ]
            },
            {
              "Name": "CandidatePool",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 280
                }
              },
              "Default": "AA==",
              "Docs": [
                " The staking information for a candidate.",
                "",
                " It maps from an account to its information.",
                " Moreover, it counts the number of candidates."
              ]
            },
            {
              "Name": "CounterForCandidatePool",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                "Counter for the related counted storage map"
              ]
            },
            {
              "Name": "TotalCollatorStake",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 285,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Total funds locked to back the currently selected collators.",
                " The sum of all collator and their delegator stakes.",
                "",
                " Note: There are more funds locked by this pallet, since the backing for",
                " non collating candidates is not included in `TotalCollatorStake`."
              ]
            },
            {
              "Name": "TopCandidates",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 286,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The collator candidates with the highest amount of stake.",
                "",
                " Each time the stake of a collator is increased, it is checked whether",
                " this pushes another candidate out of the list. When the stake is",
                " reduced however, it is not checked if another candidate has more stake,",
                " since this would require iterating over the entire `CandidatePool`.",
                "",
                " There must always be more candidates than `MaxSelectedCandidates` so",
                " that a collator can drop out of the collator set by reducing their",
                " stake."
              ]
            },
            {
              "Name": "InflationConfig",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 288,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
              "Docs": [
                " Inflation configuration."
              ]
            },
            {
              "Name": "Unstaking",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 291
                }
              },
              "Default": "AA==",
              "Docs": [
                " The funds waiting to be unstaked.",
                "",
                " It maps from accounts to all the funds addressed to them in the future",
                " blocks."
              ]
            },
            {
              "Name": "MaxCollatorCandidateStake",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The maximum amount a collator candidate can stake."
              ]
            },
            {
              "Name": "LastRewardReduction",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The year in which the last automatic reduction of the reward rates",
                " occurred.",
                "",
                " It starts at zero at genesis and increments by one every BLOCKS_PER_YEAR",
                " many blocks."
              ]
            },
            {
              "Name": "BlocksAuthored",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 4
                }
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The number of authored blocks for collators. It is updated via the",
                " `note_author` hook when authoring a block ."
              ]
            },
            {
              "Name": "BlocksRewarded",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 4
                }
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The number of blocks for which rewards have been claimed by an address.",
                "",
                " For collators, this can be at most BlocksAuthored. It is updated when",
                " incrementing collator rewards, either when calling",
                " `inc_collator_rewards` or updating the `InflationInfo`.",
                "",
                " For delegators, this can be at most BlocksAuthored of the collator.It is",
                " updated when incrementing delegator rewards, either when calling",
                " `inc_delegator_rewards` or updating the `InflationInfo`."
              ]
            },
            {
              "Name": "Rewards",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 6
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The accumulated rewards for collator candidates and delegators.",
                "",
                " It maps from accounts to their total rewards since the last payout."
              ]
            },
            {
              "Name": "ForceNewRound",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 295
        },
        "Events": {
          "TypeId": 36
        },
        "Constants": [
          {
            "Name": "MinBlocksPerRound",
            "TypeId": 4,
            "Value": "LAEAAAAAAAA=",
            "Docs": [
              " Minimum number of blocks validation rounds can last."
            ]
          },
          {
            "Name": "DefaultBlocksPerRound",
            "TypeId": 4,
            "Value": "WAIAAAAAAAA=",
            "Docs": [
              " Default number of blocks validation rounds last, as set in the",
              " genesis configuration."
            ]
          },
          {
            "Name": "StakeDuration",
            "TypeId": 4,
            "Value": "4MQAAAAAAAA=",
            "Docs": [
              " Number of blocks for which unstaked balance will still be locked",
              " before it can be unlocked by actively calling the extrinsic",
              " `unlock_unstaked`."
            ]
          },
          {
            "Name": "ExitQueueDelay",
            "TypeId": 8,
            "Value": "AgAAAA==",
            "Docs": [
              " Number of rounds a collator has to stay active after submitting a",
              " request to leave the set of collator candidates."
            ]
          },
          {
            "Name": "MinCollators",
            "TypeId": 8,
            "Value": "EAAAAA==",
            "Docs": [
              " Minimum number of collators selected from the set of candidates at",
              " every validation round."
            ]
          },
          {
            "Name": "MinRequiredCollators",
            "TypeId": 8,
            "Value": "BAAAAA==",
            "Docs": [
              " Minimum number of collators which cannot leave the network if there",
              " are no others."
            ]
          },
          {
            "Name": "MaxDelegationsPerRound",
            "TypeId": 8,
            "Value": "AQAAAA==",
            "Docs": [
              " Maximum number of delegations which can be made within the same",
              " round.",
              "",
              " NOTE: To prevent re-delegation-reward attacks, we should keep this",
              " to be one."
            ]
          },
          {
            "Name": "MaxDelegatorsPerCollator",
            "TypeId": 8,
            "Value": "IwAAAA==",
            "Docs": [
              " Maximum number of delegators a single collator can have."
            ]
          },
          {
            "Name": "MaxTopCandidates",
            "TypeId": 8,
            "Value": "SwAAAA==",
            "Docs": [
              " Maximum size of the top candidates set."
            ]
          },
          {
            "Name": "MinCollatorStake",
            "TypeId": 6,
            "Value": "AADoiQQjx4oAAAAAAAAAAA==",
            "Docs": [
              " Minimum stake required for any account to be elected as validator",
              " for a round."
            ]
          },
          {
            "Name": "MinCollatorCandidateStake",
            "TypeId": 6,
            "Value": "AADoiQQjx4oAAAAAAAAAAA==",
            "Docs": [
              " Minimum stake required for any account to be added to the set of",
              " candidates."
            ]
          },
          {
            "Name": "MinDelegatorStake",
            "TypeId": 6,
            "Value": "AACC3+QNRwAAAAAAAAAAAA==",
            "Docs": [
              " Minimum stake required for any account to become a delegator."
            ]
          },
          {
            "Name": "MaxUnstakeRequests",
            "TypeId": 8,
            "Value": "CgAAAA==",
            "Docs": [
              " Max number of concurrent active unstaking requests before",
              " unlocking.",
              "",
              " NOTE: To protect against irremovability of a candidate or delegator,",
              " we only allow for MaxUnstakeRequests - 1 many manual unstake",
              " requests. The last one serves as a placeholder for the cases of",
              " calling either `kick_delegator`, `force_remove_candidate` or",
              " `execute_leave_candidates`. Otherwise, a user could max out their",
              " unstake requests and prevent themselves from being kicked from the",
              " set of candidates/delegators until they unlock their funds."
            ]
          },
          {
            "Name": "NetworkRewardStart",
            "TypeId": 4,
            "Value": "SKPIAAAAAAA=",
            "Docs": [
              " The starting block number for the network rewards. Once the current",
              " block number exceeds this start, the beneficiary will receive the",
              " configured reward in each block."
            ]
          },
          {
            "Name": "NetworkRewardRate",
            "TypeId": 37,
            "Value": "AACKXXhFYwE=",
            "Docs": [
              " The rate in percent for the network rewards which are based on the",
              " maximum number of collators and the maximum amount a collator can",
              " stake."
            ]
          }
        ],
        "Errors": {
          "TypeId": 296
        },
        "Index": 21
      },
      "20": {
        "Name": "Authorship",
        "Storage": {
          "Prefix": "Authorship",
          "Entries": [
            {
              "Name": "Author",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Author of current block."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 20
      },
      "24": {
        "Name": "AuraExt",
        "Storage": {
          "Prefix": "AuraExt",
          "Entries": [
            {
              "Name": "Authorities",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 264,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Serves as cache for the authorities.",
                "",
                " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                " but we require the old authorities to verify the seal when validating a PoV. This will",
                " always be updated to the latest AuRa authorities in `on_finalize`."
              ]
            },
            {
              "Name": "SlotInfo",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 297,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Current slot paired with a number of authored blocks.",
                "",
                " Updated on each block initialization."
              ]
            }
          ]
        },
        "Calls": null,
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 24
      },
      "30": {
        "Name": "Democracy",
        "Storage": {
          "Prefix": "Democracy",
          "Entries": [
            {
              "Name": "PublicPropCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of (public) proposals that have been made so far."
              ]
            },
            {
              "Name": "PublicProps",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 298,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The public proposals. Unsorted. The second item is the proposal."
              ]
            },
            {
              "Name": "DepositOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 8,
                  "Value": 438
                }
              },
              "Default": "AA==",
              "Docs": [
                " Those who have locked a deposit.",
                "",
                " TWOX-NOTE: Safe, as increasing integer keys are safe."
              ]
            },
            {
              "Name": "ReferendumCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The next free referendum index, aka the number of referenda started so far."
              ]
            },
            {
              "Name": "LowestUnbaked",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The lowest referendum index representing an unbaked referendum. Equal to",
                " `ReferendumCount` if there isn't a unbaked referendum."
              ]
            },
            {
              "Name": "ReferendumInfoOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 8,
                  "Value": 440
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information concerning any given referendum.",
                "",
                " TWOX-NOTE: SAFE as indexes are not under an attacker���s control."
              ]
            },
            {
              "Name": "VotingOf",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 443
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " All votes for a particular voter. We store the balance for the number of votes that we",
                " have recorded. The second item is the total amount of delegations, that will be added.",
                "",
                " TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway."
              ]
            },
            {
              "Name": "LastTabledWasExternal",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " True if the last referendum tabled was submitted externally. False if it was a public",
                " proposal."
              ]
            },
            {
              "Name": "NextExternal",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 449,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The referendum to be tabled whenever it would be valid to table an external proposal.",
                " This happens when a referendum needs to be tabled and one of two conditions are met:",
                " - `LastTabledWasExternal` is `false`; or",
                " - `PublicProps` is empty."
              ]
            },
            {
              "Name": "Blacklist",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 450
                }
              },
              "Default": "AA==",
              "Docs": [
                " A record of who vetoed what. Maps proposal hash to a possible existent block number",
                " (until when it may not be resubmitted) and who vetoed it."
              ]
            },
            {
              "Name": "Cancellations",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 30
                }
              },
              "Default": "AA==",
              "Docs": [
                " Record of all proposals that have been subject to emergency cancellation."
              ]
            },
            {
              "Name": "MetadataOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 42,
                  "Value": 12
                }
              },
              "Default": "AA==",
              "Docs": [
                " General information concerning any proposal or referendum.",
                " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                " dump or IPFS hash of a JSON file.",
                "",
                " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                " large preimages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 302
        },
        "Events": {
          "TypeId": 38
        },
        "Constants": [
          {
            "Name": "EnactmentPeriod",
            "TypeId": 4,
            "Value": "IBwAAAAAAAA=",
            "Docs": [
              " The period between a proposal being approved and enacted.",
              "",
              " It should generally be a little more than the unstake period to ensure that",
              " voting stakers have an opportunity to remove themselves from the system in the case",
              " where they are on the losing side of a vote."
            ]
          },
          {
            "Name": "LaunchPeriod",
            "TypeId": 4,
            "Value": "4MQAAAAAAAA=",
            "Docs": [
              " How often (in blocks) new public referenda are launched."
            ]
          },
          {
            "Name": "VotingPeriod",
            "TypeId": 4,
            "Value": "4MQAAAAAAAA=",
            "Docs": [
              " How often (in blocks) to check for new votes."
            ]
          },
          {
            "Name": "VoteLockingPeriod",
            "TypeId": 4,
            "Value": "4MQAAAAAAAA=",
            "Docs": [
              " The minimum period of vote locking.",
              "",
              " It should be no shorter than enactment period to ensure that in the case of an approval,",
              " those successful voters are locked into the consequences that their votes entail."
            ]
          },
          {
            "Name": "MinimumDeposit",
            "TypeId": 6,
            "Value": "AIDGpH6NAwAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount to be used as a deposit for a public referendum proposal."
            ]
          },
          {
            "Name": "InstantAllowed",
            "TypeId": 30,
            "Value": "AQ==",
            "Docs": [
              " Indicator for whether an emergency origin is even allowed to happen. Some chains may",
              " want to set this permanently to `false`, others may want to condition it on things such",
              " as an upgrade having happened recently."
            ]
          },
          {
            "Name": "FastTrackVotingPeriod",
            "TypeId": 4,
            "Value": "hAMAAAAAAAA=",
            "Docs": [
              " Minimum voting period allowed for a fast-track referendum."
            ]
          },
          {
            "Name": "CooloffPeriod",
            "TypeId": 4,
            "Value": "4MQAAAAAAAA=",
            "Docs": [
              " Period in blocks where an external proposal may not be re-submitted after being vetoed."
            ]
          },
          {
            "Name": "MaxVotes",
            "TypeId": 8,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of votes for an account.",
              "",
              " Also used to compute weight, an overly big value can",
              " lead to extrinsic with very big weight: see `delegate` for instance."
            ]
          },
          {
            "Name": "MaxProposals",
            "TypeId": 8,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of public proposals that can exist at any time."
            ]
          },
          {
            "Name": "MaxDeposits",
            "TypeId": 8,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of deposits a public proposal may have at any time."
            ]
          },
          {
            "Name": "MaxBlacklisted",
            "TypeId": 8,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of items which can be blacklisted."
            ]
          }
        ],
        "Errors": {
          "TypeId": 451
        },
        "Index": 30
      },
      "31": {
        "Name": "Council",
        "Storage": {
          "Prefix": "Council",
          "Entries": [
            {
              "Name": "Proposals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 452,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The hashes of the active proposals."
              ]
            },
            {
              "Name": "ProposalOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 301
                }
              },
              "Default": "AA==",
              "Docs": [
                " Actual proposal for a given hash, if it's current."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 453
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Proposals so far."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 157,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective. This is stored sorted (just by value)."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The prime member that helps determine the default vote behavior in case of absentations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 306
        },
        "Events": {
          "TypeId": 43
        },
        "Constants": [
          {
            "Name": "MaxProposalWeight",
            "TypeId": 10,
            "Value": "BwBEKTU6AgCgAA==",
            "Docs": [
              " The maximum weight of a dispatch call that can be proposed and executed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 454
        },
        "Index": 31
      },
      "32": {
        "Name": "TechnicalCommittee",
        "Storage": {
          "Prefix": "TechnicalCommittee",
          "Entries": [
            {
              "Name": "Proposals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 455,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The hashes of the active proposals."
              ]
            },
            {
              "Name": "ProposalOf",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 301
                }
              },
              "Default": "AA==",
              "Docs": [
                " Actual proposal for a given hash, if it's current."
              ]
            },
            {
              "Name": "Voting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 453
                }
              },
              "Default": "AA==",
              "Docs": [
                " Votes on a given proposal, if it is ongoing."
              ]
            },
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Proposals so far."
              ]
            },
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 157,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current members of the collective. This is stored sorted (just by value)."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The prime member that helps determine the default vote behavior in case of absentations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 308
        },
        "Events": {
          "TypeId": 46
        },
        "Constants": [
          {
            "Name": "MaxProposalWeight",
            "TypeId": 10,
            "Value": "BwBEKTU6AgCgAA==",
            "Docs": [
              " The maximum weight of a dispatch call that can be proposed and executed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 456
        },
        "Index": 32
      },
      "34": {
        "Name": "TechnicalMembership",
        "Storage": {
          "Prefix": "TechnicalMembership",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 457,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current membership, stored as an ordered Vec."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current prime member, if one exists."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 309
        },
        "Events": {
          "TypeId": 47
        },
        "Constants": [],
        "Errors": {
          "TypeId": 458
        },
        "Index": 34
      },
      "35": {
        "Name": "Treasury",
        "Storage": {
          "Prefix": "Treasury",
          "Entries": [
            {
              "Name": "ProposalCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Number of proposals that have been made."
              ]
            },
            {
              "Name": "Proposals",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 8,
                  "Value": 459
                }
              },
              "Default": "AA==",
              "Docs": [
                " Proposals that have been made."
              ]
            },
            {
              "Name": "Deactivated",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 6,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAA==",
              "Docs": [
                " The amount which has been reported as inactive to Currency."
              ]
            },
            {
              "Name": "Approvals",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 460,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Proposal indices that have been approved but not yet awarded."
              ]
            },
            {
              "Name": "SpendCount",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The count of spends that have been made."
              ]
            },
            {
              "Name": "Spends",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 8,
                  "Value": 461
                }
              },
              "Default": "AA==",
              "Docs": [
                " Spends that have been approved and being processed."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 310
        },
        "Events": {
          "TypeId": 48
        },
        "Constants": [
          {
            "Name": "ProposalBond",
            "TypeId": 463,
            "Value": "UMMAAA==",
            "Docs": [
              " Fraction of a proposal's value that should be bonded in order to place the proposal.",
              " An accepted proposal gets these back. A rejected proposal does not."
            ]
          },
          {
            "Name": "ProposalBondMinimum",
            "TypeId": 6,
            "Value": "AACC3+QNRwAAAAAAAAAAAA==",
            "Docs": [
              " Minimum amount of funds that should be placed in a deposit for making a proposal."
            ]
          },
          {
            "Name": "ProposalBondMaximum",
            "TypeId": 464,
            "Value": "AA==",
            "Docs": [
              " Maximum amount of funds that should be placed in a deposit for making a proposal."
            ]
          },
          {
            "Name": "SpendPeriod",
            "TypeId": 4,
            "Value": "wKgAAAAAAAA=",
            "Docs": [
              " Period between successive spends."
            ]
          },
          {
            "Name": "Burn",
            "TypeId": 463,
            "Value": "AAAAAA==",
            "Docs": [
              " Percentage of spare funds (if any) that are burnt per spend period."
            ]
          },
          {
            "Name": "PalletId",
            "TypeId": 465,
            "Value": "a2lsdC90c3k=",
            "Docs": [
              " The treasury's pallet id, used for deriving its sovereign account ID."
            ]
          },
          {
            "Name": "MaxApprovals",
            "TypeId": 8,
            "Value": "ZAAAAA==",
            "Docs": [
              " The maximum number of approvals that can wait in the spending queue.",
              "",
              " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
            ]
          },
          {
            "Name": "PayoutPeriod",
            "TypeId": 4,
            "Value": "wEsDAAAAAAA=",
            "Docs": [
              " The period during which an approved treasury spend has to be claimed."
            ]
          }
        ],
        "Errors": {
          "TypeId": 466
        },
        "Index": 35
      },
      "40": {
        "Name": "Utility",
        "Storage": null,
        "Calls": {
          "TypeId": 312
        },
        "Events": {
          "TypeId": 49
        },
        "Constants": [
          {
            "Name": "batched_calls_limit",
            "TypeId": 8,
            "Value": "qioAAA==",
            "Docs": [
              " The limit on the number of batched calls."
            ]
          }
        ],
        "Errors": {
          "TypeId": 467
        },
        "Index": 40
      },
      "41": {
        "Name": "Vesting",
        "Storage": {
          "Prefix": "Vesting",
          "Entries": [
            {
              "Name": "Vesting",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 468
                }
              },
              "Default": "AA==",
              "Docs": [
                " Information regarding the vesting of a given account."
              ]
            },
            {
              "Name": "StorageVersion",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 470,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Storage version of the pallet.",
                "",
                " New networks start with latest version, as determined by the genesis build."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 322
        },
        "Events": {
          "TypeId": 50
        },
        "Constants": [
          {
            "Name": "MinVestedTransfer",
            "TypeId": 6,
            "Value": "AEB6EPNaAAAAAAAAAAAAAA==",
            "Docs": [
              " The minimum amount transferred to call `vested_transfer`."
            ]
          },
          {
            "Name": "MaxVestingSchedules",
            "TypeId": 8,
            "Value": "HAAAAA==",
            "Docs": []
          }
        ],
        "Errors": {
          "TypeId": 471
        },
        "Index": 41
      },
      "42": {
        "Name": "Scheduler",
        "Storage": {
          "Prefix": "Scheduler",
          "Entries": [
            {
              "Name": "IncompleteSince",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": []
            },
            {
              "Name": "Agenda",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 472
                }
              },
              "Default": "AA==",
              "Docs": [
                " Items to be executed, indexed by the block number that they should be executed on."
              ]
            },
            {
              "Name": "Lookup",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 1,
                  "Value": 52
                }
              },
              "Default": "AA==",
              "Docs": [
                " Lookup from a name to the block number and index of the task.",
                "",
                " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                " identities."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 324
        },
        "Events": {
          "TypeId": 51
        },
        "Constants": [
          {
            "Name": "MaximumWeight",
            "TypeId": 10,
            "Value": "BwCg2yFdAgAAAQ==",
            "Docs": [
              " The maximum weight that may be scheduled per block for any dispatchables."
            ]
          },
          {
            "Name": "MaxScheduledPerBlock",
            "TypeId": 8,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum number of scheduled calls in the queue for a single block.",
              "",
              " NOTE:",
              " + Dependent pallets' benchmarks might require a higher limit for the setting. Set a",
              " higher limit under `runtime-benchmarks` feature."
            ]
          }
        ],
        "Errors": {
          "TypeId": 476
        },
        "Index": 42
      },
      "43": {
        "Name": "Proxy",
        "Storage": {
          "Prefix": "Proxy",
          "Entries": [
            {
              "Name": "Proxies",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 477
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The set of account proxies. Maps the account which has delegated to the accounts",
                " which are being delegated to, together with the amount held on deposit."
              ]
            },
            {
              "Name": "Announcements",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 0,
                  "Value": 481
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The announcements made by the proxy (key)."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 326
        },
        "Events": {
          "TypeId": 54
        },
        "Constants": [
          {
            "Name": "ProxyDepositBase",
            "TypeId": 6,
            "Value": "ACD3pUszAAAAAAAAAAAAAA==",
            "Docs": [
              " The base amount of currency needed to reserve for creating a proxy.",
              "",
              " This is held for an additional storage item whose value size is",
              " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
            ]
          },
          {
            "Name": "ProxyDepositFactor",
            "TypeId": 6,
            "Value": "APSpK4ABAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of currency needed per proxy added.",
              "",
              " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
              " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
              " into account `32 + proxy_type.encode().len()` bytes of data."
            ]
          },
          {
            "Name": "MaxProxies",
            "TypeId": 8,
            "Value": "CgAAAA==",
            "Docs": [
              " The maximum amount of proxies allowed for a single account."
            ]
          },
          {
            "Name": "MaxPending",
            "TypeId": 8,
            "Value": "CgAAAA==",
            "Docs": [
              " The maximum amount of time-delayed announcements that are allowed to be pending."
            ]
          },
          {
            "Name": "AnnouncementDepositBase",
            "TypeId": 6,
            "Value": "ACD3pUszAAAAAAAAAAAAAA==",
            "Docs": [
              " The base amount of currency needed to reserve for creating an announcement.",
              "",
              " This is held when a new storage item holding a `Balance` is created (typically 16",
              " bytes)."
            ]
          },
          {
            "Name": "AnnouncementDepositFactor",
            "TypeId": 6,
            "Value": "AOhTVwADAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of currency needed per announcement made.",
              "",
              " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
              " into a pre-existing storage value."
            ]
          }
        ],
        "Errors": {
          "TypeId": 485
        },
        "Index": 43
      },
      "44": {
        "Name": "Preimage",
        "Storage": {
          "Prefix": "Preimage",
          "Entries": [
            {
              "Name": "StatusFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 486
                }
              },
              "Default": "AA==",
              "Docs": [
                " The request status of a given hash."
              ]
            },
            {
              "Name": "RequestStatusFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 489
                }
              },
              "Default": "AA==",
              "Docs": [
                " The request status of a given hash."
              ]
            },
            {
              "Name": "PreimageFor",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 493,
                  "Value": 494
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 328
        },
        "Events": {
          "TypeId": 57
        },
        "Constants": [],
        "Errors": {
          "TypeId": 495
        },
        "Index": 44
      },
      "45": {
        "Name": "TipsMembership",
        "Storage": {
          "Prefix": "TipsMembership",
          "Entries": [
            {
              "Name": "Members",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 496,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current membership, stored as an ordered Vec."
              ]
            },
            {
              "Name": "Prime",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 0,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current prime member, if one exists."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 329
        },
        "Events": {
          "TypeId": 58
        },
        "Constants": [],
        "Errors": {
          "TypeId": 497
        },
        "Index": 45
      },
      "46": {
        "Name": "Tips",
        "Storage": {
          "Prefix": "Tips",
          "Entries": [
            {
              "Name": "Tips",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 12,
                  "Value": 498
                }
              },
              "Default": "AA==",
              "Docs": [
                " TipsMap that are not yet completed. Keyed by the hash of `(reason, who)` from the value.",
                " This has the insecure enumerable hash function since the key itself is already",
                " guaranteed to be a secure hash."
              ]
            },
            {
              "Name": "Reasons",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Simple preimage lookup from the reason's hash to the original data. Again, has an",
                " insecure enumerable hash since the key is guaranteed to be the result of a secure hash."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 330
        },
        "Events": {
          "TypeId": 59
        },
        "Constants": [
          {
            "Name": "MaximumReasonLength",
            "TypeId": 8,
            "Value": "AEAAAA==",
            "Docs": [
              " Maximum acceptable reason length.",
              "",
              " Benchmarks depend on this value, be sure to update weights file when changing this value"
            ]
          },
          {
            "Name": "DataDepositPerByte",
            "TypeId": 6,
            "Value": "AHQ7pAsAAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount held on deposit per byte within the tip report reason or bounty description."
            ]
          },
          {
            "Name": "TipCountdown",
            "TypeId": 4,
            "Value": "IBwAAAAAAAA=",
            "Docs": [
              " The period for which a tip remains open after is has achieved threshold tippers."
            ]
          },
          {
            "Name": "TipFindersFee",
            "TypeId": 500,
            "Value": "AA==",
            "Docs": [
              " The percent of the final tip which goes to the original reporter of the tip."
            ]
          },
          {
            "Name": "TipReportDepositBase",
            "TypeId": 6,
            "Value": "APRWKPoyAAAAAAAAAAAAAA==",
            "Docs": [
              " The non-zero amount held on deposit for placing a tip report."
            ]
          },
          {
            "Name": "MaxTipAmount",
            "TypeId": 6,
            "Value": "AAAQYy1ex2sFAAAAAAAAAA==",
            "Docs": [
              " The maximum amount for a single tip."
            ]
          }
        ],
        "Errors": {
          "TypeId": 501
        },
        "Index": 46
      },
      "47": {
        "Name": "Multisig",
        "Storage": {
          "Prefix": "Multisig",
          "Entries": [
            {
              "Name": "Multisigs",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 502,
                  "Value": 503
                }
              },
              "Default": "AA==",
              "Docs": [
                " The set of open multisig operations."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 331
        },
        "Events": {
          "TypeId": 60
        },
        "Constants": [
          {
            "Name": "DepositBase",
            "TypeId": 6,
            "Value": "AIAbhO4yAAAAAAAAAAAAAA==",
            "Docs": [
              " The base amount of currency needed to reserve for creating a multisig execution or to",
              " store a dispatch call for later.",
              "",
              " This is held for an additional storage item whose value size is",
              " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
              " `32 + sizeof(AccountId)` bytes."
            ]
          },
          {
            "Name": "DepositFactor",
            "TypeId": 6,
            "Value": "AHQ7pAsAAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of currency needed per unit threshold when creating a multisig execution.",
              "",
              " This is held for adding 32 bytes more into a pre-existing storage value."
            ]
          },
          {
            "Name": "MaxSignatories",
            "TypeId": 8,
            "Value": "QAAAAA==",
            "Docs": [
              " The maximum amount of signatories allowed in the multisig."
            ]
          }
        ],
        "Errors": {
          "TypeId": 505
        },
        "Index": 47
      },
      "48": {
        "Name": "AssetSwitchPool1",
        "Storage": {
          "Prefix": "AssetSwitchPool1",
          "Entries": [
            {
              "Name": "SwitchPair",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 506,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Stores the switch pair."
              ]
            },
            {
              "Name": "PendingSwitchConfirmations",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 4,
                  "Value": 508
                }
              },
              "Default": "AA==",
              "Docs": [
                " Stores the switches that have been applied locally but not yet on the",
                " remote. Used to rollback failed ones."
              ]
            },
            {
              "Name": "CounterForPendingSwitchConfirmations",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                "Counter for the related counted storage map"
              ]
            },
            {
              "Name": "NextQueryId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " Stores the next query ID to use for queries."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 333
        },
        "Events": {
          "TypeId": 62
        },
        "Constants": [],
        "Errors": {
          "TypeId": 509
        },
        "Index": 48
      },
      "49": {
        "Name": "Fungibles",
        "Storage": {
          "Prefix": "Fungibles",
          "Entries": [
            {
              "Name": "Asset",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 76,
                  "Value": 510
                }
              },
              "Default": "AA==",
              "Docs": [
                " Details of an asset."
              ]
            },
            {
              "Name": "Account",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 512,
                  "Value": 513
                }
              },
              "Default": "AA==",
              "Docs": [
                " The holdings of a specific account for a specific asset."
              ]
            },
            {
              "Name": "Approvals",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 516,
                  "Value": 517
                }
              },
              "Default": "AA==",
              "Docs": [
                " Approved balance transfers. First balance is the amount approved for transfer. Second",
                " is the amount of `T::Currency` reserved for storing this.",
                " First key is the asset ID, second key is the owner and third key is the delegate."
              ]
            },
            {
              "Name": "Metadata",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 76,
                  "Value": 518
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " Metadata of an asset."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 334
        },
        "Events": {
          "TypeId": 110
        },
        "Constants": [
          {
            "Name": "RemoveItemsLimit",
            "TypeId": 8,
            "Value": "6AMAAA==",
            "Docs": [
              " Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.",
              "",
              " Must be configured to result in a weight that makes each call fit in a block."
            ]
          },
          {
            "Name": "AssetDeposit",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The basic amount of funds that must be reserved for an asset."
            ]
          },
          {
            "Name": "AssetAccountDeposit",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of funds that must be reserved for a non-provider asset account to be",
              " maintained."
            ]
          },
          {
            "Name": "MetadataDepositBase",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The basic amount of funds that must be reserved when adding metadata to your asset."
            ]
          },
          {
            "Name": "MetadataDepositPerByte",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The additional funds that must be reserved for the number of bytes you store in your",
              " metadata."
            ]
          },
          {
            "Name": "ApprovalDeposit",
            "TypeId": 6,
            "Value": "AAAAAAAAAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of funds that must be reserved when creating a new approval."
            ]
          },
          {
            "Name": "StringLimit",
            "TypeId": 8,
            "Value": "BAAAAA==",
            "Docs": [
              " The maximum length of a name or symbol stored on-chain."
            ]
          }
        ],
        "Errors": {
          "TypeId": 520
        },
        "Index": 49
      },
      "61": {
        "Name": "Ctype",
        "Storage": {
          "Prefix": "Ctype",
          "Entries": [
            {
              "Name": "Ctypes",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 521
                }
              },
              "Default": "AA==",
              "Docs": [
                " CTypes stored on chain.",
                "",
                " It maps from a CType hash to its creator and block number in which it",
                " was created."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 335
        },
        "Events": {
          "TypeId": 111
        },
        "Constants": [],
        "Errors": {
          "TypeId": 522
        },
        "Index": 61
      },
      "62": {
        "Name": "Attestation",
        "Storage": {
          "Prefix": "Attestation",
          "Entries": [
            {
              "Name": "Attestations",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 523
                }
              },
              "Default": "AA==",
              "Docs": [
                " Attestations stored on chain.",
                "",
                " It maps from a claim hash to the full attestation."
              ]
            },
            {
              "Name": "ExternalAttestations",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 524,
                  "Value": 30
                }
              },
              "Default": "AA==",
              "Docs": [
                " Delegated attestations stored on chain.",
                "",
                " It maps from a delegation ID to a vector of claim hashes."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 336
        },
        "Events": {
          "TypeId": 112
        },
        "Constants": [
          {
            "Name": "Deposit",
            "TypeId": 6,
            "Value": "ABzJ3QBuAAAAAAAAAAAAAA==",
            "Docs": [
              " The deposit that is required for storing an attestation."
            ]
          },
          {
            "Name": "MaxDelegatedAttestations",
            "TypeId": 8,
            "Value": "6AMAAA==",
            "Docs": [
              " The maximum number of delegated attestations which can be made by",
              " the same delegation."
            ]
          }
        ],
        "Errors": {
          "TypeId": 525
        },
        "Index": 62
      },
      "63": {
        "Name": "Delegation",
        "Storage": {
          "Prefix": "Delegation",
          "Entries": [
            {
              "Name": "DelegationNodes",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 526
                }
              },
              "Default": "AA==",
              "Docs": [
                " Delegation nodes stored on chain.",
                "",
                " It maps from a node ID to the node details."
              ]
            },
            {
              "Name": "DelegationHierarchies",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 531
                }
              },
              "Default": "AA==",
              "Docs": [
                " Delegation hierarchies stored on chain.",
                "",
                " It maps for a (root) node ID to the hierarchy details."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 340
        },
        "Events": {
          "TypeId": 115
        },
        "Constants": [
          {
            "Name": "Deposit",
            "TypeId": 6,
            "Value": "AIDGpH6NAwAAAAAAAAAAAA==",
            "Docs": [
              " The deposit that is required for storing a delegation."
            ]
          },
          {
            "Name": "MaxSignatureByteLength",
            "TypeId": 56,
            "Value": "QAA=",
            "Docs": []
          },
          {
            "Name": "MaxRevocations",
            "TypeId": 8,
            "Value": "BQAAAA==",
            "Docs": [
              " Maximum number of revocations."
            ]
          },
          {
            "Name": "MaxRemovals",
            "TypeId": 8,
            "Value": "BQAAAA==",
            "Docs": [
              " Maximum number of removals. Should be same as MaxRevocations"
            ]
          },
          {
            "Name": "MaxParentChecks",
            "TypeId": 8,
            "Value": "BQAAAA==",
            "Docs": [
              " Maximum number of upwards traversals of the delegation tree from a",
              " node to the root and thus the depth of the delegation tree."
            ]
          },
          {
            "Name": "MaxChildren",
            "TypeId": 8,
            "Value": "6AMAAA==",
            "Docs": [
              " Maximum number of all children for a delegation node. For a binary",
              " tree, this should be twice the maximum depth of the tree, i.e.",
              " `2 ^ MaxParentChecks`."
            ]
          }
        ],
        "Errors": {
          "TypeId": 532
        },
        "Index": 63
      },
      "64": {
        "Name": "Did",
        "Storage": {
          "Prefix": "Did",
          "Entries": [
            {
              "Name": "Did",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 533
                }
              },
              "Default": "AA==",
              "Docs": [
                " DIDs stored on chain.",
                "",
                " It maps from a DID identifier to the DID details."
              ]
            },
            {
              "Name": "ServiceEndpoints",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 541,
                  "Value": 350
                }
              },
              "Default": "AA==",
              "Docs": [
                " Service endpoints associated with DIDs.",
                "",
                " It maps from (DID identifier, service ID) to the service details."
              ]
            },
            {
              "Name": "DidEndpointsCount",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 8
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Counter of service endpoints for each DID.",
                "",
                " It maps from (DID identifier) to a 32-bit counter."
              ]
            },
            {
              "Name": "DidBlacklist",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 45
                }
              },
              "Default": "AA==",
              "Docs": [
                " The set of DIDs that have been deleted and cannot therefore be created",
                " again for security reasons.",
                "",
                " It maps from a DID identifier to a unit tuple, for the sake of tracking",
                " DID identifiers."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 347
        },
        "Events": {
          "TypeId": 117
        },
        "Constants": [
          {
            "Name": "BaseDeposit",
            "TypeId": 6,
            "Value": "AACNSf0aBwAAAAAAAAAAAA==",
            "Docs": [
              " The amount of balance that will be taken for each DID as a deposit",
              " to incentivise fair use of the on chain storage. The deposits",
              " increase by the amount of used keys and service endpoints. The",
              " deposit can be reclaimed when the DID is deleted."
            ]
          },
          {
            "Name": "ServiceEndpointDeposit",
            "TypeId": 6,
            "Value": "APAk7r3tAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of balance that will be taken for each service endpoint",
              " as a deposit to incentivise fair use of the on chain storage. The",
              " deposit can be reclaimed when the service endpoint is removed or the",
              " DID deleted."
            ]
          },
          {
            "Name": "KeyDeposit",
            "TypeId": 6,
            "Value": "ANwgdJcBAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of balance that will be taken for each added key as a",
              " deposit to incentivise fair use of the on chain storage."
            ]
          },
          {
            "Name": "Fee",
            "TypeId": 6,
            "Value": "ACA9iHktAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of balance that will be taken for each DID as a fee to",
              " incentivise fair use of the on chain storage. The fee will not get",
              " refunded when the DID is deleted."
            ]
          },
          {
            "Name": "MaxPublicKeysPerDid",
            "TypeId": 8,
            "Value": "FAAAAA==",
            "Docs": [
              " Maximum number of total public keys which can be stored per DID key",
              " identifier. This includes the ones currently used for",
              " authentication, key agreement, attestation, and delegation."
            ]
          },
          {
            "Name": "MaxNewKeyAgreementKeys",
            "TypeId": 8,
            "Value": "CgAAAA==",
            "Docs": [
              " Maximum number of key agreement keys that can be added in a creation",
              " operation."
            ]
          },
          {
            "Name": "MaxTotalKeyAgreementKeys",
            "TypeId": 8,
            "Value": "EwAAAA==",
            "Docs": [
              " Maximum number of total key agreement keys that can be stored for a",
              " DID subject.",
              "",
              " Should be greater than `MaxNewKeyAgreementKeys`."
            ]
          },
          {
            "Name": "MaxBlocksTxValidity",
            "TypeId": 4,
            "Value": "LAEAAAAAAAA=",
            "Docs": [
              " The maximum number of blocks a DID-authorized operation is",
              " considered valid after its creation."
            ]
          },
          {
            "Name": "MaxNumberOfServicesPerDid",
            "TypeId": 8,
            "Value": "GQAAAA==",
            "Docs": [
              " The maximum number of services that can be stored under a DID."
            ]
          },
          {
            "Name": "MaxServiceIdLength",
            "TypeId": 8,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum length of a service ID."
            ]
          },
          {
            "Name": "MaxServiceTypeLength",
            "TypeId": 8,
            "Value": "MgAAAA==",
            "Docs": [
              " The maximum length of a service type description."
            ]
          },
          {
            "Name": "MaxNumberOfTypesPerService",
            "TypeId": 8,
            "Value": "AQAAAA==",
            "Docs": [
              " The maximum number of a types description for a service endpoint."
            ]
          },
          {
            "Name": "MaxServiceUrlLength",
            "TypeId": 8,
            "Value": "0AcAAA==",
            "Docs": [
              " The maximum length of a service URL."
            ]
          },
          {
            "Name": "MaxNumberOfUrlsPerService",
            "TypeId": 8,
            "Value": "AgAAAA==",
            "Docs": [
              " The maximum number of a URLs for a service endpoint."
            ]
          }
        ],
        "Errors": {
          "TypeId": 542
        },
        "Index": 64
      },
      "66": {
        "Name": "Inflation",
        "Storage": null,
        "Calls": null,
        "Events": null,
        "Constants": [
          {
            "Name": "InitialPeriodLength",
            "TypeId": 4,
            "Value": "SKPIAAAAAAA=",
            "Docs": [
              " The length of the initial period in which the constant reward is",
              " minted. Once the current block exceeds this, rewards are no further",
              " issued."
            ]
          },
          {
            "Name": "InitialPeriodReward",
            "TypeId": 6,
            "Value": "NvU5/a6zAgAAAAAAAAAAAA==",
            "Docs": [
              " The amount of newly issued tokens per block during the initial",
              " period."
            ]
          }
        ],
        "Errors": null,
        "Index": 66
      },
      "67": {
        "Name": "DidLookup",
        "Storage": {
          "Prefix": "DidLookup",
          "Entries": [
            {
              "Name": "ConnectedDids",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 119,
                  "Value": 543
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping from account identifiers to DIDs."
              ]
            },
            {
              "Name": "ConnectedAccounts",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 544,
                  "Value": 45
                }
              },
              "Default": "AA==",
              "Docs": [
                " Mapping from (DID + account identifier) -> ().",
                " The empty tuple is used as a sentinel value to simply indicate the",
                " presence of a given tuple in the map."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 369
        },
        "Events": {
          "TypeId": 118
        },
        "Constants": [
          {
            "Name": "Deposit",
            "TypeId": 6,
            "Value": "AMCv1pE2AAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of balance that will be taken for each DID as a deposit",
              " to incentivise fair use of the on chain storage. The deposit can be",
              " reclaimed when the DID is deleted."
            ]
          }
        ],
        "Errors": {
          "TypeId": 545
        },
        "Index": 67
      },
      "68": {
        "Name": "Web3Names",
        "Storage": {
          "Prefix": "Web3Names",
          "Entries": [
            {
              "Name": "Owner",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 122,
                  "Value": 546
                }
              },
              "Default": "AA==",
              "Docs": [
                " Map of name -> ownership details."
              ]
            },
            {
              "Name": "Names",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 122
                }
              },
              "Default": "AA==",
              "Docs": [
                " Map of owner -> name."
              ]
            },
            {
              "Name": "Banned",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 122,
                  "Value": 45
                }
              },
              "Default": "AA==",
              "Docs": [
                " Map of name -> ().",
                "",
                " If a name key is present, the name is currently banned."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 373
        },
        "Events": {
          "TypeId": 121
        },
        "Constants": [
          {
            "Name": "Deposit",
            "TypeId": 6,
            "Value": "ANRQqF1rAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of KILT to deposit to claim a name."
            ]
          },
          {
            "Name": "MinNameLength",
            "TypeId": 8,
            "Value": "AwAAAA==",
            "Docs": [
              " The min encoded length of a name."
            ]
          },
          {
            "Name": "MaxNameLength",
            "TypeId": 8,
            "Value": "IAAAAA==",
            "Docs": [
              " The max encoded length of a name."
            ]
          }
        ],
        "Errors": {
          "TypeId": 547
        },
        "Index": 68
      },
      "69": {
        "Name": "PublicCredentials",
        "Storage": {
          "Prefix": "PublicCredentials",
          "Entries": [
            {
              "Name": "Credentials",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 163,
                  "Value": 548
                }
              },
              "Default": "AA==",
              "Docs": [
                " The map of public credentials already attested.",
                " It maps from a (subject id + credential id) -> the creation",
                " details of the credential."
              ]
            },
            {
              "Name": "CredentialSubjects",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 125
                }
              },
              "Default": "AA==",
              "Docs": [
                " A reverse index mapping from credential ID to the subject the credential",
                " was issued to.",
                "",
                " It it used to perform efficient lookup of credentials given their ID."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 374
        },
        "Events": {
          "TypeId": 124
        },
        "Constants": [
          {
            "Name": "Deposit",
            "TypeId": 6,
            "Value": "AFxqUfxFAAAAAAAAAAAAAA==",
            "Docs": [
              " The amount of tokens to reserve when attesting a public credential."
            ]
          },
          {
            "Name": "MaxEncodedClaimsLength",
            "TypeId": 8,
            "Value": "oIYBAA==",
            "Docs": [
              " The maximum length in bytes of the encoded claims of a credential."
            ]
          },
          {
            "Name": "MaxSubjectIdLength",
            "TypeId": 8,
            "Value": "DAEAAA==",
            "Docs": [
              " The maximum length in bytes of the raw credential subject",
              " identifier."
            ]
          }
        ],
        "Errors": {
          "TypeId": 549
        },
        "Index": 69
      },
      "70": {
        "Name": "Migration",
        "Storage": {
          "Prefix": "Migration",
          "Entries": [
            {
              "Name": "MigratedKeys",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 12,
                  "Value": 45
                }
              },
              "Default": "AA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 378
        },
        "Events": {
          "TypeId": 151
        },
        "Constants": [
          {
            "Name": "MaxMigrationsPerPallet",
            "TypeId": 8,
            "Value": "ZAAAAA==",
            "Docs": [
              " The max amount on migrations for each pallet"
            ]
          }
        ],
        "Errors": {
          "TypeId": 550
        },
        "Index": 70
      },
      "71": {
        "Name": "DipProvider",
        "Storage": {
          "Prefix": "DipProvider",
          "Entries": [
            {
              "Name": "IdentityCommitments",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 551,
                  "Value": 12
                }
              },
              "Default": "AA==",
              "Docs": [
                " The pallet contains a single storage element, the `IdentityCommitments`",
                " double map. Its first key is the `Identifier` of subjects, while the",
                " second key is the commitment version. The values are identity",
                " commitments."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 379
        },
        "Events": {
          "TypeId": 165
        },
        "Constants": [],
        "Errors": {
          "TypeId": 552
        },
        "Index": 71
      },
      "72": {
        "Name": "DepositStorage",
        "Storage": {
          "Prefix": "DepositStorage",
          "Entries": [
            {
              "Name": "Deposits",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 553,
                  "Value": 169
                }
              },
              "Default": "AA==",
              "Docs": [
                " Storage of all deposits. Its first key is a namespace, and the second",
                " one the deposit key. Its value includes the details associated to a",
                " deposit instance."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 381
        },
        "Events": {
          "TypeId": 166
        },
        "Constants": [
          {
            "Name": "MaxKeyLength",
            "TypeId": 8,
            "Value": "IwAAAA==",
            "Docs": [
              " The maximum length of keys."
            ]
          }
        ],
        "Errors": {
          "TypeId": 554
        },
        "Index": 72
      },
      "80": {
        "Name": "ParachainSystem",
        "Storage": {
          "Prefix": "ParachainSystem",
          "Entries": [
            {
              "Name": "UnincludedSegment",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 555,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Latest included block descendants the runtime accepted. In other words, these are",
                " ancestors of the currently executing block which have not been included in the observed",
                " relay-chain state.",
                "",
                " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                " in the pallet."
              ]
            },
            {
              "Name": "AggregatedUnincludedSegment",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 564,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                " latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                " respect to relay chain constraints."
              ]
            },
            {
              "Name": "PendingValidationCode",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " In case of a scheduled upgrade, this storage field contains the validation code to be",
                " applied.",
                "",
                " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                " with the new validation code. This concludes the upgrade process."
              ]
            },
            {
              "Name": "NewValidationCode",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Validation code that is set by the parachain and is to be communicated to collator and",
                " consequently the relay-chain.",
                "",
                " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                " the value."
              ]
            },
            {
              "Name": "ValidationData",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 384,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The [`PersistedValidationData`] set for this block.",
                " This value is expected to be set only once per block and it's never stored",
                " in the trie."
              ]
            },
            {
              "Name": "DidSetValidationCode",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Were the validation data set to notify the relay chain?"
              ]
            },
            {
              "Name": "LastRelayChainBlockNumber",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The relay chain block number associated with the last parachain block.",
                "",
                " This is updated in `on_finalize`."
              ]
            },
            {
              "Name": "UpgradeRestrictionSignal",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 565,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                " candidate will be invalid.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "Name": "UpgradeGoAhead",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 562,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Optional upgrade go-ahead signal from the relay-chain.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "Name": "RelayStateProof",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 386,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The state proof for the last relay parent block.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "RelevantMessagingState",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 567,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The snapshot of some state related to messaging relevant to the current parachain as per",
                " the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "HostConfiguration",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 572,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The parachain host configuration that was obtained from the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "Name": "LastDmqMqcHead",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 574,
                "Item2": null
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The last downward message queue chain head we have observed.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "Name": "LastHrmpMqcHeads",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 575,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The message queue chain heads we have observed per each channel incoming channel.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "Name": "ProcessedDownwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " Number of downward messages processed in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "HrmpWatermark",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " HRMP watermark that was set in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "HrmpOutboundMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 578,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " HRMP messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "UpwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 225,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Upward messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "Name": "PendingUpwardMessages",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 225,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Upward messages that are still pending and not yet send to the relay chain."
              ]
            },
            {
              "Name": "UpwardDeliveryFeeFactor",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 262,
                "Item2": null
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": [
                " The factor to multiply the base delivery fee by for UMP."
              ]
            },
            {
              "Name": "AnnouncedHrmpMessagesPerCandidate",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                " announcing the weight of `on_initialize` and `on_finalize`."
              ]
            },
            {
              "Name": "ReservedXcmpWeightOverride",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 10,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "Name": "ReservedDmpWeightOverride",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 10,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The weight we reserve at the beginning of the block for processing DMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "Name": "CustomValidationHeadData",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 13,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " A custom head data that should be returned as result of `validate_block`.",
                "",
                " See `Pallet::set_custom_validation_head_data` for more information."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 382
        },
        "Events": {
          "TypeId": 180
        },
        "Constants": [],
        "Errors": {
          "TypeId": 580
        },
        "Index": 80
      },
      "81": {
        "Name": "ParachainInfo",
        "Storage": {
          "Prefix": "ParachainInfo",
          "Entries": [
            {
              "Name": "ParachainId",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 215,
                "Item2": null
              },
              "Default": "ZAAAAA==",
              "Docs": []
            }
          ]
        },
        "Calls": {
          "TypeId": 395
        },
        "Events": null,
        "Constants": [],
        "Errors": null,
        "Index": 81
      },
      "82": {
        "Name": "XcmpQueue",
        "Storage": {
          "Prefix": "XcmpQueue",
          "Entries": [
            {
              "Name": "InboundXcmpSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 581,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The suspended inbound XCMP channels. All others are not suspended.",
                "",
                " This is a `StorageValue` instead of a `StorageMap` since we expect multiple reads per block",
                " to different keys with a one byte payload. The access to `BoundedBTreeSet` will be cached",
                " within the block and therefore only included once in the proof size.",
                "",
                " NOTE: The PoV benchmarking cannot know this and will over-estimate, but the actual proof",
                " will be smaller."
              ]
            },
            {
              "Name": "OutboundXcmpStatus",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 584,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                " and last outbound message. If the two indices are equal, then it indicates an empty",
                " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                " case of the need to send a high-priority signal message this block.",
                " The bool is true if there is a signal message waiting to be sent."
              ]
            },
            {
              "Name": "OutboundXcmpMessages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat",
                    "Twox64Concat"
                  ],
                  "Key": 587,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " The messages outbound in a given XCMP channel."
              ]
            },
            {
              "Name": "SignalMessages",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 215,
                  "Value": 13
                }
              },
              "Default": "AA==",
              "Docs": [
                " Any signal messages waiting to be sent."
              ]
            },
            {
              "Name": "QueueConfig",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 588,
                "Item2": null
              },
              "Default": "IAAAADAAAAAIAAAA",
              "Docs": [
                " The configuration which controls the dynamics of the outbound queue."
              ]
            },
            {
              "Name": "QueueSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
              ]
            },
            {
              "Name": "DeliveryFeeFactor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 215,
                  "Value": 262
                }
              },
              "Default": "AABkp7O24A0AAAAAAAAAAA==",
              "Docs": [
                " The factor to multiply the base delivery fee by."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 396
        },
        "Events": {
          "TypeId": 181
        },
        "Constants": [
          {
            "Name": "MaxInboundSuspended",
            "TypeId": 8,
            "Value": "6AMAAA==",
            "Docs": [
              " The maximum number of inbound XCMP channels that can be suspended simultaneously.",
              "",
              " Any further channel suspensions will fail and messages may get dropped without further",
              " notice. Choosing a high value (1000) is okay; the trade-off that is described in",
              " [`InboundXcmpSuspended`] still applies at that scale."
            ]
          }
        ],
        "Errors": {
          "TypeId": 589
        },
        "Index": 82
      },
      "83": {
        "Name": "PolkadotXcm",
        "Storage": {
          "Prefix": "PolkadotXcm",
          "Entries": [
            {
              "Name": "QueryCounter",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 4,
                "Item2": null
              },
              "Default": "AAAAAAAAAAA=",
              "Docs": [
                " The latest available query index."
              ]
            },
            {
              "Name": "Queries",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 4,
                  "Value": 590
                }
              },
              "Default": "AA==",
              "Docs": [
                " The ongoing queries."
              ]
            },
            {
              "Name": "AssetTraps",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Identity"
                  ],
                  "Key": 12,
                  "Value": 8
                }
              },
              "Default": "AAAAAA==",
              "Docs": [
                " The existing asset traps.",
                "",
                " Key is the blake2 256 hash of (origin, versioned `Assets`) pair. Value is the number of",
                " times this pair has been trapped (usually just 1 if it exists at all)."
              ]
            },
            {
              "Name": "SafeXcmVersion",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 8,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                " then the destinations whose XCM version is unknown are considered unreachable."
              ]
            },
            {
              "Name": "SupportedVersion",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 595,
                  "Value": 8
                }
              },
              "Default": "AA==",
              "Docs": [
                " The Latest versions that we know various locations support."
              ]
            },
            {
              "Name": "VersionNotifiers",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 595,
                  "Value": 4
                }
              },
              "Default": "AA==",
              "Docs": [
                " All locations that we have requested version notifications from."
              ]
            },
            {
              "Name": "VersionNotifyTargets",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 595,
                  "Value": 596
                }
              },
              "Default": "AA==",
              "Docs": [
                " The target locations that are subscribed to our version changes, as well as the most recent",
                " of our versions we informed them of."
              ]
            },
            {
              "Name": "VersionDiscoveryQueue",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 597,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                " the `u32` counter is the number of times that a send to the destination has been attempted,",
                " which is used as a prioritization."
              ]
            },
            {
              "Name": "CurrentMigration",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 600,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The current migration's stage, if any."
              ]
            },
            {
              "Name": "RemoteLockedFungibles",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "BlakeTwo128Concat",
                    "BlakeTwo128Concat"
                  ],
                  "Key": 602,
                  "Value": 603
                }
              },
              "Default": "AA==",
              "Docs": [
                " Fungible assets which we know are locked on a remote chain."
              ]
            },
            {
              "Name": "LockedFungibles",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "BlakeTwo128Concat"
                  ],
                  "Key": 0,
                  "Value": 607
                }
              },
              "Default": "AA==",
              "Docs": [
                " Fungible assets which we know are locked on this chain."
              ]
            },
            {
              "Name": "XcmExecutionSuspended",
              "Modifier": "Default",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 30,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " Global suspension state of the XCM executor."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 397
        },
        "Events": {
          "TypeId": 182
        },
        "Constants": [],
        "Errors": {
          "TypeId": 610
        },
        "Index": 83
      },
      "84": {
        "Name": "CumulusXcm",
        "Storage": null,
        "Calls": null,
        "Events": {
          "TypeId": 212
        },
        "Constants": [],
        "Errors": null,
        "Index": 84
      },
      "86": {
        "Name": "MessageQueue",
        "Storage": {
          "Prefix": "MessageQueue",
          "Entries": [
            {
              "Name": "BookStateFor",
              "Modifier": "Default",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat"
                  ],
                  "Key": 214,
                  "Value": 611
                }
              },
              "Default": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
              "Docs": [
                " The index of the first and last (non-empty) pages."
              ]
            },
            {
              "Name": "ServiceHead",
              "Modifier": "Optional",
              "StorageType": "Plain",
              "TypeMap": {
                "Item1": 214,
                "Item2": null
              },
              "Default": "AA==",
              "Docs": [
                " The origin at which we should begin servicing."
              ]
            },
            {
              "Name": "Pages",
              "Modifier": "Optional",
              "StorageType": "Map",
              "TypeMap": {
                "Item1": 0,
                "Item2": {
                  "Hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "Key": 614,
                  "Value": 615
                }
              },
              "Default": "AA==",
              "Docs": [
                " The map of page indices to pages."
              ]
            }
          ]
        },
        "Calls": {
          "TypeId": 435
        },
        "Events": {
          "TypeId": 213
        },
        "Constants": [
          {
            "Name": "HeapSize",
            "TypeId": 8,
            "Value": "AAABAA==",
            "Docs": [
              " The size of the page; this implies the maximum message size which can be sent.",
              "",
              " A good value depends on the expected message sizes, their weights, the weight that is",
              " available for processing them and the maximal needed message size. The maximal message",
              " size is slightly lower than this as defined by [`MaxMessageLenOf`]."
            ]
          },
          {
            "Name": "MaxStale",
            "TypeId": 8,
            "Value": "CAAAAA==",
            "Docs": [
              " The maximum number of stale pages (i.e. of overweight messages) allowed before culling",
              " can happen. Once there are more stale pages than this, then historical pages may be",
              " dropped, even if they contain unprocessed overweight messages."
            ]
          },
          {
            "Name": "ServiceWeight",
            "TypeId": 229,
            "Value": "AQcAFtC+KAIAcAA=",
            "Docs": [
              " The amount of weight (if any) which should be provided to the message queue for",
              " servicing enqueued items.",
              "",
              " This may be legitimately `None` in the case that you will call",
              " `ServiceQueues::service_queues` manually."
            ]
          }
        ],
        "Errors": {
          "TypeId": 617
        },
        "Index": 86
      }
    },
    "Extrinsic": {
      "TypeId": 618,
      "Version": 4,
      "SignedExtensions": [
        {
          "SignedIdentifier": "CheckNonZeroSender",
          "SignedExtType": 620,
          "AddSignedExtType": 45
        },
        {
          "SignedIdentifier": "CheckSpecVersion",
          "SignedExtType": 621,
          "AddSignedExtType": 8
        },
        {
          "SignedIdentifier": "CheckTxVersion",
          "SignedExtType": 622,
          "AddSignedExtType": 8
        },
        {
          "SignedIdentifier": "CheckGenesis",
          "SignedExtType": 623,
          "AddSignedExtType": 12
        },
        {
          "SignedIdentifier": "CheckMortality",
          "SignedExtType": 624,
          "AddSignedExtType": 12
        },
        {
          "SignedIdentifier": "CheckNonce",
          "SignedExtType": 626,
          "AddSignedExtType": 45
        },
        {
          "SignedIdentifier": "CheckWeight",
          "SignedExtType": 627,
          "AddSignedExtType": 45
        },
        {
          "SignedIdentifier": "ChargeTransactionPayment",
          "SignedExtType": 628,
          "AddSignedExtType": 45
        }
      ]
    },
    "TypeId": 153
  }
}