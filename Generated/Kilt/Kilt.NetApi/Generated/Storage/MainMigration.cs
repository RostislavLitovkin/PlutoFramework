//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Kilt.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> MigrationStorage
    /// </summary>
    public sealed class MigrationStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> MigrationStorage Constructor
        /// </summary>
        public MigrationStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Migration", "MigratedKeys"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Kilt.NetApi.Generated.Model.primitive_types.H256), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
        }
        
        /// <summary>
        /// >> MigratedKeysParams
        /// </summary>
        public static string MigratedKeysParams(Kilt.NetApi.Generated.Model.primitive_types.H256 key)
        {
            return RequestGenerator.GetStorage("Migration", "MigratedKeys", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MigratedKeysDefault
        /// Default value as hex string
        /// </summary>
        public static string MigratedKeysDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> MigratedKeys
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> MigratedKeys(Kilt.NetApi.Generated.Model.primitive_types.H256 key, string blockhash, CancellationToken token)
        {
            string parameters = MigrationStorage.MigratedKeysParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> MigrationCalls
    /// </summary>
    public sealed class MigrationCalls
    {
        
        /// <summary>
        /// >> update_balance
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method UpdateBalance(Kilt.NetApi.Generated.Model.pallet_migration.pallet.EntriesToMigrate requested_migrations)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(requested_migrations.Encode());
            return new Method(70, "Migration", 0, "update_balance", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> MigrationConstants
    /// </summary>
    public sealed class MigrationConstants
    {
        
        /// <summary>
        /// >> MaxMigrationsPerPallet
        ///  The max amount on migrations for each pallet
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxMigrationsPerPallet()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x64000000");
            return result;
        }
    }
    
    /// <summary>
    /// >> MigrationErrors
    /// </summary>
    public enum MigrationErrors
    {
        
        /// <summary>
        /// >> KeyParse
        /// </summary>
        KeyParse,
    }
}
