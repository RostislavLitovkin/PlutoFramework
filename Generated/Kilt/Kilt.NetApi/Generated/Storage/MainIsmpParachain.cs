//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Kilt.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> IsmpParachainStorage
    /// </summary>
    public sealed class IsmpParachainStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> IsmpParachainStorage Constructor
        /// </summary>
        public IsmpParachainStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("IsmpParachain", "RelayChainStateCommitments"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Kilt.NetApi.Generated.Model.primitive_types.H256)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("IsmpParachain", "ConsensusUpdated"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.Bool)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("IsmpParachain", "Parachains"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
        }
        
        /// <summary>
        /// >> RelayChainStateCommitmentsParams
        ///  Mapping of relay chain heights to it's state commitment. The state commitment of the parent
        ///  relay block is inserted at every block in `on_finalize`. This commitment is gotten from
        ///  parachain-system.
        /// </summary>
        public static string RelayChainStateCommitmentsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("IsmpParachain", "RelayChainStateCommitments", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> RelayChainStateCommitmentsDefault
        /// Default value as hex string
        /// </summary>
        public static string RelayChainStateCommitmentsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> RelayChainStateCommitments
        ///  Mapping of relay chain heights to it's state commitment. The state commitment of the parent
        ///  relay block is inserted at every block in `on_finalize`. This commitment is gotten from
        ///  parachain-system.
        /// </summary>
        public async Task<Kilt.NetApi.Generated.Model.primitive_types.H256> RelayChainStateCommitments(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = IsmpParachainStorage.RelayChainStateCommitmentsParams(key);
            var result = await _client.GetStorageAsync<Kilt.NetApi.Generated.Model.primitive_types.H256>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ConsensusUpdatedParams
        ///  Tracks whether we've already seen the `update_parachain_consensus` inherent
        /// </summary>
        public static string ConsensusUpdatedParams()
        {
            return RequestGenerator.GetStorage("IsmpParachain", "ConsensusUpdated", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> ConsensusUpdatedDefault
        /// Default value as hex string
        /// </summary>
        public static string ConsensusUpdatedDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ConsensusUpdated
        ///  Tracks whether we've already seen the `update_parachain_consensus` inherent
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.Bool> ConsensusUpdated(string blockhash, CancellationToken token)
        {
            string parameters = IsmpParachainStorage.ConsensusUpdatedParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.Bool>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ParachainsParams
        ///  List of parachains that this state machine is interested in.
        /// </summary>
        public static string ParachainsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("IsmpParachain", "Parachains", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ParachainsDefault
        /// Default value as hex string
        /// </summary>
        public static string ParachainsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Parachains
        ///  List of parachains that this state machine is interested in.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> Parachains(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = IsmpParachainStorage.ParachainsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> IsmpParachainCalls
    /// </summary>
    public sealed class IsmpParachainCalls
    {
        
        /// <summary>
        /// >> update_parachain_consensus
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method UpdateParachainConsensus(Kilt.NetApi.Generated.Model.ismp.messaging.ConsensusMessage data)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(data.Encode());
            return new Method(92, "IsmpParachain", 0, "update_parachain_consensus", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_parachain
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method AddParachain(Substrate.NetApi.Model.Types.Base.BaseVec<Kilt.NetApi.Generated.Model.ismp_parachain.ParachainData> para_ids)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(para_ids.Encode());
            return new Method(92, "IsmpParachain", 1, "add_parachain", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_parachain
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoveParachain(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U32> para_ids)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(para_ids.Encode());
            return new Method(92, "IsmpParachain", 2, "remove_parachain", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> IsmpParachainConstants
    /// </summary>
    public sealed class IsmpParachainConstants
    {
    }
}
