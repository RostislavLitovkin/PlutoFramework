//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.pallet_deposit_storage.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> DepositNotFound
        /// The deposit with the provided key was not found within the specified
        /// namespace.
        /// </summary>
        DepositNotFound = 0,
        
        /// <summary>
        /// >> DepositExisting
        /// A deposit with the provided key already exists within the specified
        /// namespace.
        /// </summary>
        DepositExisting = 1,
        
        /// <summary>
        /// >> Unauthorized
        /// The origin was not authorized to perform the operation on the
        /// specified deposit entry.
        /// </summary>
        Unauthorized = 2,
        
        /// <summary>
        /// >> FailedToHold
        /// The origin did not have enough fund to pay for the deposit.
        /// </summary>
        FailedToHold = 3,
        
        /// <summary>
        /// >> FailedToRelease
        /// Error when trying to release a previously-reserved deposit.
        /// </summary>
        FailedToRelease = 4,
        
        /// <summary>
        /// >> Hook
        /// The external hook failed.
        /// </summary>
        Hook = 5,
        
        /// <summary>
        /// >> Internal
        /// Internal error.
        /// </summary>
        Internal = 6,
    }
    
    /// <summary>
    /// >> 659 - Variant[pallet_deposit_storage.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnumRust<Error>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumError()
        {
				AddTypeDecoder<BaseVoid>(Error.DepositNotFound);
				AddTypeDecoder<BaseVoid>(Error.DepositExisting);
				AddTypeDecoder<BaseVoid>(Error.Unauthorized);
				AddTypeDecoder<BaseVoid>(Error.FailedToHold);
				AddTypeDecoder<BaseVoid>(Error.FailedToRelease);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U16>(Error.Hook);
				AddTypeDecoder<BaseVoid>(Error.Internal);
        }
    }
}
