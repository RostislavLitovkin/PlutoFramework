//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.pallet_deposit_storage.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> reclaim_deposit
        /// Reclaim a deposit that was previously taken. If there is no deposit
        /// with the given key under the given namespace, it returns an error.
        /// If a deposit exists, the deposit hooks are invoked after the deposit
        /// has been removed from the pallet storage.
        /// </summary>
        reclaim_deposit = 0,
    }
    
    /// <summary>
    /// >> 374 - Variant[pallet_deposit_storage.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.runtime_common.deposits.EnumDepositNamespace, Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10>>(Call.reclaim_deposit);
        }
    }
}
