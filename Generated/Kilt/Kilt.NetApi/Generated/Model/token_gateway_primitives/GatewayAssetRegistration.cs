//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.token_gateway_primitives
{
    
    
    /// <summary>
    /// >> 496 - Composite[token_gateway_primitives.GatewayAssetRegistration]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class GatewayAssetRegistration : BaseType
    {
        
        /// <summary>
        /// >> name
        /// </summary>
        public Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT33 Name { get; set; }
        /// <summary>
        /// >> symbol
        /// </summary>
        public Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT34 Symbol { get; set; }
        /// <summary>
        /// >> chains
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Kilt.NetApi.Generated.Model.ismp.host.EnumStateMachine> Chains { get; set; }
        /// <summary>
        /// >> minimum_balance
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> MinimumBalance { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "GatewayAssetRegistration";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Name.Encode());
            result.AddRange(Symbol.Encode());
            result.AddRange(Chains.Encode());
            result.AddRange(MinimumBalance.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Name = new Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT33();
            Name.Decode(byteArray, ref p);
            Symbol = new Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT34();
            Symbol.Decode(byteArray, ref p);
            Chains = new Substrate.NetApi.Model.Types.Base.BaseVec<Kilt.NetApi.Generated.Model.ismp.host.EnumStateMachine>();
            Chains.Decode(byteArray, ref p);
            MinimumBalance = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128>();
            MinimumBalance.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
