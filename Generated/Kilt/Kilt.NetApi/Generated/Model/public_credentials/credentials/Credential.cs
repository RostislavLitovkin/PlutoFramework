//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.public_credentials.credentials
{
    
    
    /// <summary>
    /// >> 368 - Composite[public_credentials.credentials.Credential]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Credential : BaseType
    {
        
        /// <summary>
        /// >> ctype_hash
        /// </summary>
        public Kilt.NetApi.Generated.Model.primitive_types.H256 CtypeHash { get; set; }
        /// <summary>
        /// >> subject
        /// </summary>
        public Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT24 Subject { get; set; }
        /// <summary>
        /// >> claims
        /// </summary>
        public Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT25 Claims { get; set; }
        /// <summary>
        /// >> authorization
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Kilt.NetApi.Generated.Model.runtime_common.authorization.EnumPalletAuthorize> Authorization { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Credential";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(CtypeHash.Encode());
            result.AddRange(Subject.Encode());
            result.AddRange(Claims.Encode());
            result.AddRange(Authorization.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            CtypeHash = new Kilt.NetApi.Generated.Model.primitive_types.H256();
            CtypeHash.Decode(byteArray, ref p);
            Subject = new Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT24();
            Subject.Decode(byteArray, ref p);
            Claims = new Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT25();
            Claims.Decode(byteArray, ref p);
            Authorization = new Substrate.NetApi.Model.Types.Base.BaseOpt<Kilt.NetApi.Generated.Model.runtime_common.authorization.EnumPalletAuthorize>();
            Authorization.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
