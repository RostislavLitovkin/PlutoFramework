//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.parachain_staking.pallet
{
    
    
    /// <summary>
    /// >> Event
    /// The `Event` enum of this pallet
    /// </summary>
    public enum Event
    {
        
        /// <summary>
        /// >> NewRound
        /// A new staking round has started.
        /// \[block number, round number\]
        /// </summary>
        NewRound = 0,
        
        /// <summary>
        /// >> EnteredTopCandidates
        /// A new account has joined the set of top candidates.
        /// \[account\]
        /// </summary>
        EnteredTopCandidates = 1,
        
        /// <summary>
        /// >> LeftTopCandidates
        /// An account was removed from the set of top candidates.
        /// \[account\]
        /// </summary>
        LeftTopCandidates = 2,
        
        /// <summary>
        /// >> JoinedCollatorCandidates
        /// A new account has joined the set of collator candidates.
        /// \[account, amount staked by the new candidate\]
        /// </summary>
        JoinedCollatorCandidates = 3,
        
        /// <summary>
        /// >> CollatorStakedMore
        /// A collator candidate has increased the amount of funds at stake.
        /// \[collator's account, previous stake, new stake\]
        /// </summary>
        CollatorStakedMore = 4,
        
        /// <summary>
        /// >> CollatorStakedLess
        /// A collator candidate has decreased the amount of funds at stake.
        /// \[collator's account, previous stake, new stake\]
        /// </summary>
        CollatorStakedLess = 5,
        
        /// <summary>
        /// >> CollatorScheduledExit
        /// A collator candidate has started the process to leave the set of
        /// candidates. \[round number, collator's account, round number when
        /// the collator will be effectively removed from the set of
        /// candidates\]
        /// </summary>
        CollatorScheduledExit = 6,
        
        /// <summary>
        /// >> CollatorCanceledExit
        /// A collator candidate has canceled the process to leave the set of
        /// candidates and was added back to the candidate pool. \[collator's
        /// account\]
        /// </summary>
        CollatorCanceledExit = 7,
        
        /// <summary>
        /// >> CandidateLeft
        /// An account has left the set of collator candidates.
        /// \[account, amount of funds un-staked\]
        /// </summary>
        CandidateLeft = 8,
        
        /// <summary>
        /// >> CollatorRemoved
        /// An account was forcedly removed from the  set of collator
        /// candidates. \[account, amount of funds un-staked\]
        /// </summary>
        CollatorRemoved = 9,
        
        /// <summary>
        /// >> MaxCandidateStakeChanged
        /// The maximum candidate stake has been changed.
        /// \[new max amount\]
        /// </summary>
        MaxCandidateStakeChanged = 10,
        
        /// <summary>
        /// >> DelegatorStakedMore
        /// A delegator has increased the amount of funds at stake for a
        /// collator. \[delegator's account, collator's account, previous
        /// delegation stake, new delegation stake\]
        /// </summary>
        DelegatorStakedMore = 11,
        
        /// <summary>
        /// >> DelegatorStakedLess
        /// A delegator has decreased the amount of funds at stake for a
        /// collator. \[delegator's account, collator's account, previous
        /// delegation stake, new delegation stake\]
        /// </summary>
        DelegatorStakedLess = 12,
        
        /// <summary>
        /// >> DelegatorLeft
        /// An account has left the set of delegators.
        /// \[account, amount of funds un-staked\]
        /// </summary>
        DelegatorLeft = 13,
        
        /// <summary>
        /// >> Delegation
        /// An account has delegated a new collator candidate.
        /// \[account, amount of funds staked, total amount of delegators' funds
        /// staked for the collator candidate\]
        /// </summary>
        Delegation = 14,
        
        /// <summary>
        /// >> DelegationReplaced
        /// A new delegation has replaced an existing one in the set of ongoing
        /// delegations for a collator candidate. \[new delegator's account,
        /// amount of funds staked in the new delegation, replaced delegator's
        /// account, amount of funds staked in the replace delegation, collator
        /// candidate's account, new total amount of delegators' funds staked
        /// for the collator candidate\]
        /// </summary>
        DelegationReplaced = 15,
        
        /// <summary>
        /// >> DelegatorLeftCollator
        /// An account has stopped delegating a collator candidate.
        /// \[account, collator candidate's account, old amount of delegators'
        /// funds staked, new amount of delegators' funds staked\]
        /// </summary>
        DelegatorLeftCollator = 16,
        
        /// <summary>
        /// >> Rewarded
        /// A collator or a delegator has received a reward.
        /// \[account, amount of reward\]
        /// </summary>
        Rewarded = 17,
        
        /// <summary>
        /// >> RoundInflationSet
        /// Inflation configuration for future validation rounds has changed.
        /// \[maximum collator's staking rate, maximum collator's reward rate,
        /// maximum delegator's staking rate, maximum delegator's reward rate\]
        /// </summary>
        RoundInflationSet = 18,
        
        /// <summary>
        /// >> MaxSelectedCandidatesSet
        /// The maximum number of collator candidates selected in future
        /// validation rounds has changed. \[old value, new value\]
        /// </summary>
        MaxSelectedCandidatesSet = 19,
        
        /// <summary>
        /// >> BlocksPerRoundSet
        /// The length in blocks for future validation rounds has changed.
        /// \[round number, first block in the current round, old value, new
        /// value\]
        /// </summary>
        BlocksPerRoundSet = 20,
    }
    
    /// <summary>
    /// >> 36 - Variant[parachain_staking.pallet.Event]
    /// The `Event` enum of this pallet
    /// </summary>
    public sealed class EnumEvent : BaseEnumRust<Event>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumEvent()
        {
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>(Event.NewRound);
				AddTypeDecoder<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32>(Event.EnteredTopCandidates);
				AddTypeDecoder<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32>(Event.LeftTopCandidates);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.JoinedCollatorCandidates);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.CollatorStakedMore);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.CollatorStakedLess);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32>>(Event.CollatorScheduledExit);
				AddTypeDecoder<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32>(Event.CollatorCanceledExit);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.CandidateLeft);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.CollatorRemoved);
				AddTypeDecoder<Substrate.NetApi.Model.Types.Primitive.U128>(Event.MaxCandidateStakeChanged);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.DelegatorStakedMore);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.DelegatorStakedLess);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.DelegatorLeft);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.Delegation);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.DelegationReplaced);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.DelegatorLeftCollator);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(Event.Rewarded);
				AddTypeDecoder<BaseTuple<Kilt.NetApi.Generated.Model.sp_arithmetic.per_things.Perquintill, Kilt.NetApi.Generated.Model.sp_arithmetic.per_things.Perquintill, Kilt.NetApi.Generated.Model.sp_arithmetic.per_things.Perquintill, Kilt.NetApi.Generated.Model.sp_arithmetic.per_things.Perquintill>>(Event.RoundInflationSet);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>>(Event.MaxSelectedCandidatesSet);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U64>>(Event.BlocksPerRoundSet);
        }
    }
}
