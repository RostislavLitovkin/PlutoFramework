//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.pallet_bonded_coins.types
{
    
    
    /// <summary>
    /// >> 660 - Composite[pallet_bonded_coins.types.PoolDetails]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class PoolDetails : BaseType
    {
        
        /// <summary>
        /// >> owner
        /// </summary>
        public Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32 Owner { get; set; }
        /// <summary>
        /// >> manager
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32> Manager { get; set; }
        /// <summary>
        /// >> curve
        /// </summary>
        public Kilt.NetApi.Generated.Model.pallet_bonded_coins.curves.EnumCurve Curve { get; set; }
        /// <summary>
        /// >> collateral
        /// </summary>
        public Kilt.NetApi.Generated.Model.staging_xcm.v4.location.Location Collateral { get; set; }
        /// <summary>
        /// >> bonded_currencies
        /// </summary>
        public Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT52 BondedCurrencies { get; set; }
        /// <summary>
        /// >> state
        /// </summary>
        public Kilt.NetApi.Generated.Model.pallet_bonded_coins.types.EnumPoolStatus State { get; set; }
        /// <summary>
        /// >> currencies_settings
        /// </summary>
        public Kilt.NetApi.Generated.Model.pallet_bonded_coins.types.BondedCurrenciesSettings CurrenciesSettings { get; set; }
        /// <summary>
        /// >> deposit
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Deposit { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "PoolDetails";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Owner.Encode());
            result.AddRange(Manager.Encode());
            result.AddRange(Curve.Encode());
            result.AddRange(Collateral.Encode());
            result.AddRange(BondedCurrencies.Encode());
            result.AddRange(State.Encode());
            result.AddRange(CurrenciesSettings.Encode());
            result.AddRange(Deposit.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Owner = new Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32();
            Owner.Decode(byteArray, ref p);
            Manager = new Substrate.NetApi.Model.Types.Base.BaseOpt<Kilt.NetApi.Generated.Model.sp_core.crypto.AccountId32>();
            Manager.Decode(byteArray, ref p);
            Curve = new Kilt.NetApi.Generated.Model.pallet_bonded_coins.curves.EnumCurve();
            Curve.Decode(byteArray, ref p);
            Collateral = new Kilt.NetApi.Generated.Model.staging_xcm.v4.location.Location();
            Collateral.Decode(byteArray, ref p);
            BondedCurrencies = new Kilt.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT52();
            BondedCurrencies.Decode(byteArray, ref p);
            State = new Kilt.NetApi.Generated.Model.pallet_bonded_coins.types.EnumPoolStatus();
            State.Decode(byteArray, ref p);
            CurrenciesSettings = new Kilt.NetApi.Generated.Model.pallet_bonded_coins.types.BondedCurrenciesSettings();
            CurrenciesSettings.Decode(byteArray, ref p);
            Deposit = new Substrate.NetApi.Model.Types.Primitive.U128();
            Deposit.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
