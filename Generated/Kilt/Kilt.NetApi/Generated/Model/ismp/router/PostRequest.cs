//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.ismp.router
{
    
    
    /// <summary>
    /// >> 458 - Composite[ismp.router.PostRequest]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class PostRequest : BaseType
    {
        
        /// <summary>
        /// >> source
        /// </summary>
        public Kilt.NetApi.Generated.Model.ismp.host.EnumStateMachine Source { get; set; }
        /// <summary>
        /// >> dest
        /// </summary>
        public Kilt.NetApi.Generated.Model.ismp.host.EnumStateMachine Dest { get; set; }
        /// <summary>
        /// >> nonce
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 Nonce { get; set; }
        /// <summary>
        /// >> from
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> From { get; set; }
        /// <summary>
        /// >> to
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> To { get; set; }
        /// <summary>
        /// >> timeout_timestamp
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 TimeoutTimestamp { get; set; }
        /// <summary>
        /// >> body
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> Body { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "PostRequest";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Source.Encode());
            result.AddRange(Dest.Encode());
            result.AddRange(Nonce.Encode());
            result.AddRange(From.Encode());
            result.AddRange(To.Encode());
            result.AddRange(TimeoutTimestamp.Encode());
            result.AddRange(Body.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Source = new Kilt.NetApi.Generated.Model.ismp.host.EnumStateMachine();
            Source.Decode(byteArray, ref p);
            Dest = new Kilt.NetApi.Generated.Model.ismp.host.EnumStateMachine();
            Dest.Decode(byteArray, ref p);
            Nonce = new Substrate.NetApi.Model.Types.Primitive.U64();
            Nonce.Decode(byteArray, ref p);
            From = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>();
            From.Decode(byteArray, ref p);
            To = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>();
            To.Decode(byteArray, ref p);
            TimeoutTimestamp = new Substrate.NetApi.Model.Types.Primitive.U64();
            TimeoutTimestamp.Decode(byteArray, ref p);
            Body = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>();
            Body.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
