//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.delegation.delegation_hierarchy
{
    
    
    /// <summary>
    /// >> 632 - Composite[delegation.delegation_hierarchy.DelegationNode]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class DelegationNode : BaseType
    {
        
        /// <summary>
        /// >> hierarchy_root_id
        /// </summary>
        public Kilt.NetApi.Generated.Model.primitive_types.H256 HierarchyRootId { get; set; }
        /// <summary>
        /// >> parent
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Kilt.NetApi.Generated.Model.primitive_types.H256> Parent { get; set; }
        /// <summary>
        /// >> children
        /// </summary>
        public Kilt.NetApi.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT2 Children { get; set; }
        /// <summary>
        /// >> details
        /// </summary>
        public Kilt.NetApi.Generated.Model.delegation.delegation_hierarchy.DelegationDetails Details { get; set; }
        /// <summary>
        /// >> deposit
        /// </summary>
        public Kilt.NetApi.Generated.Model.kilt_support.deposit.Deposit Deposit { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "DelegationNode";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(HierarchyRootId.Encode());
            result.AddRange(Parent.Encode());
            result.AddRange(Children.Encode());
            result.AddRange(Details.Encode());
            result.AddRange(Deposit.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            HierarchyRootId = new Kilt.NetApi.Generated.Model.primitive_types.H256();
            HierarchyRootId.Decode(byteArray, ref p);
            Parent = new Substrate.NetApi.Model.Types.Base.BaseOpt<Kilt.NetApi.Generated.Model.primitive_types.H256>();
            Parent.Decode(byteArray, ref p);
            Children = new Kilt.NetApi.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT2();
            Children.Decode(byteArray, ref p);
            Details = new Kilt.NetApi.Generated.Model.delegation.delegation_hierarchy.DelegationDetails();
            Details.Decode(byteArray, ref p);
            Deposit = new Kilt.NetApi.Generated.Model.kilt_support.deposit.Deposit();
            Deposit.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
