//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Kilt.NetApi.Generated.Model.attestation.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> AlreadyAttested
        /// There is already an attestation with the same claim hash stored on
        /// chain.
        /// </summary>
        AlreadyAttested = 0,
        
        /// <summary>
        /// >> AlreadyRevoked
        /// The attestation has already been revoked.
        /// </summary>
        AlreadyRevoked = 1,
        
        /// <summary>
        /// >> NotFound
        /// No attestation on chain matching the claim hash.
        /// </summary>
        NotFound = 2,
        
        /// <summary>
        /// >> CTypeMismatch
        /// The attestation CType does not match the CType specified in the
        /// delegation hierarchy root.
        /// </summary>
        CTypeMismatch = 3,
        
        /// <summary>
        /// >> NotAuthorized
        /// The call origin is not authorized to change the attestation.
        /// </summary>
        NotAuthorized = 4,
        
        /// <summary>
        /// >> MaxDelegatedAttestationsExceeded
        /// The maximum number of delegated attestations has already been
        /// reached for the corresponding delegation id such that another one
        /// cannot be added.
        /// </summary>
        MaxDelegatedAttestationsExceeded = 5,
    }
    
    /// <summary>
    /// >> 631 - Variant[attestation.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnum<Error>
    {
    }
}
