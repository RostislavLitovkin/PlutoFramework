//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using XcavatePaseo.NetApi.Generated.Storage;


namespace XcavatePaseo.NetApi.Generated
{
    
    
    /// <summary>
    /// >> Substrate Client Extension, including all Storage classes direct access.
    /// </summary>
    public sealed class SubstrateClientExt : Substrate.NetApi.SubstrateClient
    {
        
        /// <summary>
        /// StorageKeyDict for key definition informations.
        /// </summary>
        public System.Collections.Generic.Dictionary<System.Tuple<string, string>, System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>> StorageKeyDict;
        
        /// <summary>
        /// SystemStorage storage calls.
        /// </summary>
        public SystemStorage SystemStorage;
        
        /// <summary>
        /// ParachainSystemStorage storage calls.
        /// </summary>
        public ParachainSystemStorage ParachainSystemStorage;
        
        /// <summary>
        /// TimestampStorage storage calls.
        /// </summary>
        public TimestampStorage TimestampStorage;
        
        /// <summary>
        /// ParachainInfoStorage storage calls.
        /// </summary>
        public ParachainInfoStorage ParachainInfoStorage;
        
        /// <summary>
        /// SudoStorage storage calls.
        /// </summary>
        public SudoStorage SudoStorage;
        
        /// <summary>
        /// UtilityStorage storage calls.
        /// </summary>
        public UtilityStorage UtilityStorage;
        
        /// <summary>
        /// ProxyStorage storage calls.
        /// </summary>
        public ProxyStorage ProxyStorage;
        
        /// <summary>
        /// MigrationsStorage storage calls.
        /// </summary>
        public MigrationsStorage MigrationsStorage;
        
        /// <summary>
        /// MaintenanceModeStorage storage calls.
        /// </summary>
        public MaintenanceModeStorage MaintenanceModeStorage;
        
        /// <summary>
        /// TxPauseStorage storage calls.
        /// </summary>
        public TxPauseStorage TxPauseStorage;
        
        /// <summary>
        /// BalancesStorage storage calls.
        /// </summary>
        public BalancesStorage BalancesStorage;
        
        /// <summary>
        /// TransactionPaymentStorage storage calls.
        /// </summary>
        public TransactionPaymentStorage TransactionPaymentStorage;
        
        /// <summary>
        /// RealEstateAssetsStorage storage calls.
        /// </summary>
        public RealEstateAssetsStorage RealEstateAssetsStorage;
        
        /// <summary>
        /// RealEstateAssetsFreezerStorage storage calls.
        /// </summary>
        public RealEstateAssetsFreezerStorage RealEstateAssetsFreezerStorage;
        
        /// <summary>
        /// AssetsFreezerStorage storage calls.
        /// </summary>
        public AssetsFreezerStorage AssetsFreezerStorage;
        
        /// <summary>
        /// AssetTxPaymentStorage storage calls.
        /// </summary>
        public AssetTxPaymentStorage AssetTxPaymentStorage;
        
        /// <summary>
        /// MultisigStorage storage calls.
        /// </summary>
        public MultisigStorage MultisigStorage;
        
        /// <summary>
        /// NftsStorage storage calls.
        /// </summary>
        public NftsStorage NftsStorage;
        
        /// <summary>
        /// NftFractionalizationStorage storage calls.
        /// </summary>
        public NftFractionalizationStorage NftFractionalizationStorage;
        
        /// <summary>
        /// RandomnessCollectiveFlipStorage storage calls.
        /// </summary>
        public RandomnessCollectiveFlipStorage RandomnessCollectiveFlipStorage;
        
        /// <summary>
        /// AuthoritiesNotingStorage storage calls.
        /// </summary>
        public AuthoritiesNotingStorage AuthoritiesNotingStorage;
        
        /// <summary>
        /// AuthorInherentStorage storage calls.
        /// </summary>
        public AuthorInherentStorage AuthorInherentStorage;
        
        /// <summary>
        /// XcmpQueueStorage storage calls.
        /// </summary>
        public XcmpQueueStorage XcmpQueueStorage;
        
        /// <summary>
        /// CumulusXcmStorage storage calls.
        /// </summary>
        public CumulusXcmStorage CumulusXcmStorage;
        
        /// <summary>
        /// PolkadotXcmStorage storage calls.
        /// </summary>
        public PolkadotXcmStorage PolkadotXcmStorage;
        
        /// <summary>
        /// MessageQueueStorage storage calls.
        /// </summary>
        public MessageQueueStorage MessageQueueStorage;
        
        /// <summary>
        /// AssetsStorage storage calls.
        /// </summary>
        public AssetsStorage AssetsStorage;
        
        /// <summary>
        /// ForeignAssetsCreatorStorage storage calls.
        /// </summary>
        public ForeignAssetsCreatorStorage ForeignAssetsCreatorStorage;
        
        /// <summary>
        /// AssetRateStorage storage calls.
        /// </summary>
        public AssetRateStorage AssetRateStorage;
        
        /// <summary>
        /// XcmExecutorUtilsStorage storage calls.
        /// </summary>
        public XcmExecutorUtilsStorage XcmExecutorUtilsStorage;
        
        /// <summary>
        /// XcavateWhitelistStorage storage calls.
        /// </summary>
        public XcavateWhitelistStorage XcavateWhitelistStorage;
        
        /// <summary>
        /// NftMarketplaceStorage storage calls.
        /// </summary>
        public NftMarketplaceStorage NftMarketplaceStorage;
        
        /// <summary>
        /// PropertyManagementStorage storage calls.
        /// </summary>
        public PropertyManagementStorage PropertyManagementStorage;
        
        /// <summary>
        /// PropertyGovernanceStorage storage calls.
        /// </summary>
        public PropertyGovernanceStorage PropertyGovernanceStorage;
        
        /// <summary>
        /// RootTestingStorage storage calls.
        /// </summary>
        public RootTestingStorage RootTestingStorage;
        
        /// <summary>
        /// AsyncBackingStorage storage calls.
        /// </summary>
        public AsyncBackingStorage AsyncBackingStorage;
        
        public SubstrateClientExt(System.Uri uri, Substrate.NetApi.Model.Extrinsics.ChargeType chargeType) : 
                base(uri, chargeType)
        {
            StorageKeyDict = new System.Collections.Generic.Dictionary<System.Tuple<string, string>, System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>>();
            this.SystemStorage = new SystemStorage(this);
            this.ParachainSystemStorage = new ParachainSystemStorage(this);
            this.TimestampStorage = new TimestampStorage(this);
            this.ParachainInfoStorage = new ParachainInfoStorage(this);
            this.SudoStorage = new SudoStorage(this);
            this.UtilityStorage = new UtilityStorage(this);
            this.ProxyStorage = new ProxyStorage(this);
            this.MigrationsStorage = new MigrationsStorage(this);
            this.MaintenanceModeStorage = new MaintenanceModeStorage(this);
            this.TxPauseStorage = new TxPauseStorage(this);
            this.BalancesStorage = new BalancesStorage(this);
            this.TransactionPaymentStorage = new TransactionPaymentStorage(this);
            this.RealEstateAssetsStorage = new RealEstateAssetsStorage(this);
            this.RealEstateAssetsFreezerStorage = new RealEstateAssetsFreezerStorage(this);
            this.AssetsFreezerStorage = new AssetsFreezerStorage(this);
            this.AssetTxPaymentStorage = new AssetTxPaymentStorage(this);
            this.MultisigStorage = new MultisigStorage(this);
            this.NftsStorage = new NftsStorage(this);
            this.NftFractionalizationStorage = new NftFractionalizationStorage(this);
            this.RandomnessCollectiveFlipStorage = new RandomnessCollectiveFlipStorage(this);
            this.AuthoritiesNotingStorage = new AuthoritiesNotingStorage(this);
            this.AuthorInherentStorage = new AuthorInherentStorage(this);
            this.XcmpQueueStorage = new XcmpQueueStorage(this);
            this.CumulusXcmStorage = new CumulusXcmStorage(this);
            this.PolkadotXcmStorage = new PolkadotXcmStorage(this);
            this.MessageQueueStorage = new MessageQueueStorage(this);
            this.AssetsStorage = new AssetsStorage(this);
            this.ForeignAssetsCreatorStorage = new ForeignAssetsCreatorStorage(this);
            this.AssetRateStorage = new AssetRateStorage(this);
            this.XcmExecutorUtilsStorage = new XcmExecutorUtilsStorage(this);
            this.XcavateWhitelistStorage = new XcavateWhitelistStorage(this);
            this.NftMarketplaceStorage = new NftMarketplaceStorage(this);
            this.PropertyManagementStorage = new PropertyManagementStorage(this);
            this.PropertyGovernanceStorage = new PropertyGovernanceStorage(this);
            this.RootTestingStorage = new RootTestingStorage(this);
            this.AsyncBackingStorage = new AsyncBackingStorage(this);
        }
    }
}
