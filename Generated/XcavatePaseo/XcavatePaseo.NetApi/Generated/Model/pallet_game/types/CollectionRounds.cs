//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace XcavatePaseo.NetApi.Generated.Model.pallet_game.types
{
    
    
    /// <summary>
    /// >> 501 - Composite[pallet_game.types.CollectionRounds]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class CollectionRounds : BaseType
    {
        
        /// <summary>
        /// >> xorange
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xorange { get; set; }
        /// <summary>
        /// >> xpink
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xpink { get; set; }
        /// <summary>
        /// >> xblue
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xblue { get; set; }
        /// <summary>
        /// >> xcyan
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xcyan { get; set; }
        /// <summary>
        /// >> xcoral
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xcoral { get; set; }
        /// <summary>
        /// >> xpurple
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xpurple { get; set; }
        /// <summary>
        /// >> xleafgreen
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xleafgreen { get; set; }
        /// <summary>
        /// >> xgreen
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Xgreen { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "CollectionRounds";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Xorange.Encode());
            result.AddRange(Xpink.Encode());
            result.AddRange(Xblue.Encode());
            result.AddRange(Xcyan.Encode());
            result.AddRange(Xcoral.Encode());
            result.AddRange(Xpurple.Encode());
            result.AddRange(Xleafgreen.Encode());
            result.AddRange(Xgreen.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Xorange = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xorange.Decode(byteArray, ref p);
            Xpink = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xpink.Decode(byteArray, ref p);
            Xblue = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xblue.Decode(byteArray, ref p);
            Xcyan = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xcyan.Decode(byteArray, ref p);
            Xcoral = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xcoral.Decode(byteArray, ref p);
            Xpurple = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xpurple.Decode(byteArray, ref p);
            Xleafgreen = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xleafgreen.Decode(byteArray, ref p);
            Xgreen = new Substrate.NetApi.Model.Types.Primitive.U32();
            Xgreen.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
