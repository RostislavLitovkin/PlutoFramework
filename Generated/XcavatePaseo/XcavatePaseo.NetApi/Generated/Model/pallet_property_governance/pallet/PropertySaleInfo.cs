//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace XcavatePaseo.NetApi.Generated.Model.pallet_property_governance.pallet
{
    
    
    /// <summary>
    /// >> 585 - Composite[pallet_property_governance.pallet.PropertySaleInfo]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class PropertySaleInfo : BaseType
    {
        
        /// <summary>
        /// >> spv_lawyer
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> SpvLawyer { get; set; }
        /// <summary>
        /// >> buyer_lawyer
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> BuyerLawyer { get; set; }
        /// <summary>
        /// >> buyer
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> Buyer { get; set; }
        /// <summary>
        /// >> spv_status
        /// </summary>
        public XcavatePaseo.NetApi.Generated.Model.pallet_property_governance.pallet.EnumDocumentStatus SpvStatus { get; set; }
        /// <summary>
        /// >> buyer_status
        /// </summary>
        public XcavatePaseo.NetApi.Generated.Model.pallet_property_governance.pallet.EnumDocumentStatus BuyerStatus { get; set; }
        /// <summary>
        /// >> spv_lawyer_costs
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 SpvLawyerCosts { get; set; }
        /// <summary>
        /// >> buyer_lawyer_costs
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 BuyerLawyerCosts { get; set; }
        /// <summary>
        /// >> price
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> Price { get; set; }
        /// <summary>
        /// >> second_attempt
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool SecondAttempt { get; set; }
        /// <summary>
        /// >> lawyer_approved
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool LawyerApproved { get; set; }
        /// <summary>
        /// >> finalized
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool Finalized { get; set; }
        /// <summary>
        /// >> property_token_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 PropertyTokenAmount { get; set; }
        /// <summary>
        /// >> reserve
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.pallet_property_governance.pallet.Reserve> Reserve { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "PropertySaleInfo";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(SpvLawyer.Encode());
            result.AddRange(BuyerLawyer.Encode());
            result.AddRange(Buyer.Encode());
            result.AddRange(SpvStatus.Encode());
            result.AddRange(BuyerStatus.Encode());
            result.AddRange(SpvLawyerCosts.Encode());
            result.AddRange(BuyerLawyerCosts.Encode());
            result.AddRange(Price.Encode());
            result.AddRange(SecondAttempt.Encode());
            result.AddRange(LawyerApproved.Encode());
            result.AddRange(Finalized.Encode());
            result.AddRange(PropertyTokenAmount.Encode());
            result.AddRange(Reserve.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            SpvLawyer = new Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32>();
            SpvLawyer.Decode(byteArray, ref p);
            BuyerLawyer = new Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32>();
            BuyerLawyer.Decode(byteArray, ref p);
            Buyer = new Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32>();
            Buyer.Decode(byteArray, ref p);
            SpvStatus = new XcavatePaseo.NetApi.Generated.Model.pallet_property_governance.pallet.EnumDocumentStatus();
            SpvStatus.Decode(byteArray, ref p);
            BuyerStatus = new XcavatePaseo.NetApi.Generated.Model.pallet_property_governance.pallet.EnumDocumentStatus();
            BuyerStatus.Decode(byteArray, ref p);
            SpvLawyerCosts = new Substrate.NetApi.Model.Types.Primitive.U128();
            SpvLawyerCosts.Decode(byteArray, ref p);
            BuyerLawyerCosts = new Substrate.NetApi.Model.Types.Primitive.U128();
            BuyerLawyerCosts.Decode(byteArray, ref p);
            Price = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128>();
            Price.Decode(byteArray, ref p);
            SecondAttempt = new Substrate.NetApi.Model.Types.Primitive.Bool();
            SecondAttempt.Decode(byteArray, ref p);
            LawyerApproved = new Substrate.NetApi.Model.Types.Primitive.Bool();
            LawyerApproved.Decode(byteArray, ref p);
            Finalized = new Substrate.NetApi.Model.Types.Primitive.Bool();
            Finalized.Decode(byteArray, ref p);
            PropertyTokenAmount = new Substrate.NetApi.Model.Types.Primitive.U32();
            PropertyTokenAmount.Decode(byteArray, ref p);
            Reserve = new Substrate.NetApi.Model.Types.Base.BaseOpt<XcavatePaseo.NetApi.Generated.Model.pallet_property_governance.pallet.Reserve>();
            Reserve.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
