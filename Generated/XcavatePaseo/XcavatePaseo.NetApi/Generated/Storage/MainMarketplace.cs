//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace XcavatePaseo.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> MarketplaceStorage
    /// </summary>
    public sealed class MarketplaceStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> MarketplaceStorage Constructor
        /// </summary>
        public MarketplaceStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "NextListingId"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "OngoingObjectListing"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.PropertyListingDetails)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "TokenOwner"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32>), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.TokenOwnerDetails)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "TokenListings"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.TokenListingDetails)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "OngoingOffers"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32>), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.OfferDetails)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "PropertyLawyer"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.PropertyLawyerDetails)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "RefundToken"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.RefundInfos)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "RefundLegalExpired"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "ListingDeposits"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "ProposedLawyers"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.ProposedDeveloperLawyer)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "SpvLawyerProposal"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.ProposedSpvLawyer)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "OngoingLawyerVoting"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.VoteStats)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Marketplace", "UserLawyerVote"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U32), typeof(XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_btree_map.BoundedBTreeMapT5)));
        }
        
        /// <summary>
        /// >> NextListingIdParams
        ///  The Id for the next token listing.
        /// </summary>
        public static string NextListingIdParams()
        {
            return RequestGenerator.GetStorage("Marketplace", "NextListingId", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> NextListingIdDefault
        /// Default value as hex string
        /// </summary>
        public static string NextListingIdDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> NextListingId
        ///  The Id for the next token listing.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> NextListingId(string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.NextListingIdParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OngoingObjectListingParams
        ///  Mapping of the listing id to the ongoing property listing details.
        /// </summary>
        public static string OngoingObjectListingParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "OngoingObjectListing", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> OngoingObjectListingDefault
        /// Default value as hex string
        /// </summary>
        public static string OngoingObjectListingDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OngoingObjectListing
        ///  Mapping of the listing id to the ongoing property listing details.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.PropertyListingDetails> OngoingObjectListing(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.OngoingObjectListingParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.PropertyListingDetails>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenOwnerParams
        ///  Double mapping of the account id of the token owner
        ///  and the listing to the amount of token.
        /// </summary>
        public static string TokenOwnerParams(Substrate.NetApi.Model.Types.Base.BaseTuple<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32> key)
        {
            return RequestGenerator.GetStorage("Marketplace", "TokenOwner", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> TokenOwnerDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenOwnerDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenOwner
        ///  Double mapping of the account id of the token owner
        ///  and the listing to the amount of token.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.TokenOwnerDetails> TokenOwner(Substrate.NetApi.Model.Types.Base.BaseTuple<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32> key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.TokenOwnerParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.TokenOwnerDetails>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenListingsParams
        ///  Mapping of the listing id to the listing details of a token listing.
        /// </summary>
        public static string TokenListingsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "TokenListings", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> TokenListingsDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenListingsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenListings
        ///  Mapping of the listing id to the listing details of a token listing.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.TokenListingDetails> TokenListings(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.TokenListingsParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.TokenListingDetails>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OngoingOffersParams
        ///  Mapping from listing and offeror account id to the offer details.
        /// </summary>
        public static string OngoingOffersParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Marketplace", "OngoingOffers", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> OngoingOffersDefault
        /// Default value as hex string
        /// </summary>
        public static string OngoingOffersDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OngoingOffers
        ///  Mapping from listing and offeror account id to the offer details.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.OfferDetails> OngoingOffers(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32> key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.OngoingOffersParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.OfferDetails>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> PropertyLawyerParams
        ///  Stores the lawyer related infos of a listing.
        /// </summary>
        public static string PropertyLawyerParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "PropertyLawyer", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> PropertyLawyerDefault
        /// Default value as hex string
        /// </summary>
        public static string PropertyLawyerDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> PropertyLawyer
        ///  Stores the lawyer related infos of a listing.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.PropertyLawyerDetails> PropertyLawyer(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.PropertyLawyerParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.PropertyLawyerDetails>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> RefundTokenParams
        ///  Stores required infos in case of a refund.
        /// </summary>
        public static string RefundTokenParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "RefundToken", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> RefundTokenDefault
        /// Default value as hex string
        /// </summary>
        public static string RefundTokenDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> RefundToken
        ///  Stores required infos in case of a refund.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.RefundInfos> RefundToken(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.RefundTokenParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.RefundInfos>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> RefundLegalExpiredParams
        ///  Stores required infos in case of a refund is a legal process expired.
        /// </summary>
        public static string RefundLegalExpiredParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "RefundLegalExpired", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> RefundLegalExpiredDefault
        /// Default value as hex string
        /// </summary>
        public static string RefundLegalExpiredDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> RefundLegalExpired
        ///  Stores required infos in case of a refund is a legal process expired.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> RefundLegalExpired(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.RefundLegalExpiredParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ListingDepositsParams
        ///  Stores the deposit information of a listing.
        /// </summary>
        public static string ListingDepositsParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "ListingDeposits", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ListingDepositsDefault
        /// Default value as hex string
        /// </summary>
        public static string ListingDepositsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ListingDeposits
        ///  Stores the deposit information of a listing.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>> ListingDeposits(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.ListingDepositsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple<XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ProposedLawyersParams
        ///  Mapping of the listing to the real estate developer lawyer proposals.
        /// </summary>
        public static string ProposedLawyersParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "ProposedLawyers", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ProposedLawyersDefault
        /// Default value as hex string
        /// </summary>
        public static string ProposedLawyersDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ProposedLawyers
        ///  Mapping of the listing to the real estate developer lawyer proposals.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.ProposedDeveloperLawyer> ProposedLawyers(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.ProposedLawyersParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.ProposedDeveloperLawyer>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> SpvLawyerProposalParams
        ///  Mapping of listing to the ongoing spv lawyer proposal.
        /// </summary>
        public static string SpvLawyerProposalParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "SpvLawyerProposal", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> SpvLawyerProposalDefault
        /// Default value as hex string
        /// </summary>
        public static string SpvLawyerProposalDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> SpvLawyerProposal
        ///  Mapping of listing to the ongoing spv lawyer proposal.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.ProposedSpvLawyer> SpvLawyerProposal(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.SpvLawyerProposalParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.ProposedSpvLawyer>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OngoingLawyerVotingParams
        ///  Mapping of ongoing lawyer voted.
        /// </summary>
        public static string OngoingLawyerVotingParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "OngoingLawyerVoting", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> OngoingLawyerVotingDefault
        /// Default value as hex string
        /// </summary>
        public static string OngoingLawyerVotingDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> OngoingLawyerVoting
        ///  Mapping of ongoing lawyer voted.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.VoteStats> OngoingLawyerVoting(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.OngoingLawyerVotingParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.VoteStats>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> UserLawyerVoteParams
        ///  Mapping of a listing id and account id to the vote of a user.
        /// </summary>
        public static string UserLawyerVoteParams(Substrate.NetApi.Model.Types.Primitive.U32 key)
        {
            return RequestGenerator.GetStorage("Marketplace", "UserLawyerVote", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> UserLawyerVoteDefault
        /// Default value as hex string
        /// </summary>
        public static string UserLawyerVoteDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> UserLawyerVote
        ///  Mapping of a listing id and account id to the vote of a user.
        /// </summary>
        public async Task<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_btree_map.BoundedBTreeMapT5> UserLawyerVote(Substrate.NetApi.Model.Types.Primitive.U32 key, string blockhash, CancellationToken token)
        {
            string parameters = MarketplaceStorage.UserLawyerVoteParams(key);
            var result = await _client.GetStorageAsync<XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_btree_map.BoundedBTreeMapT5>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> MarketplaceCalls
    /// </summary>
    public sealed class MarketplaceCalls
    {
        
        /// <summary>
        /// >> list_property
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ListProperty(Substrate.NetApi.Model.Types.Primitive.U16 region, XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT10 location, Substrate.NetApi.Model.Types.Primitive.U128 token_price, Substrate.NetApi.Model.Types.Primitive.U32 token_amount, XcavatePaseo.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT2 data, Substrate.NetApi.Model.Types.Primitive.Bool tax_paid_by_developer)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(region.Encode());
            byteArray.AddRange(location.Encode());
            byteArray.AddRange(token_price.Encode());
            byteArray.AddRange(token_amount.Encode());
            byteArray.AddRange(data.Encode());
            byteArray.AddRange(tax_paid_by_developer.Encode());
            return new Method(93, "Marketplace", 0, "list_property", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> buy_property_token
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method BuyPropertyToken(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, Substrate.NetApi.Model.Types.Primitive.U32 amount, Substrate.NetApi.Model.Types.Primitive.U32 payment_asset)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(amount.Encode());
            byteArray.AddRange(payment_asset.Encode());
            return new Method(93, "Marketplace", 1, "buy_property_token", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> claim_property_token
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ClaimPropertyToken(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 2, "claim_property_token", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_spv
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CreateSpv(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 3, "create_spv", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> relist_token
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RelistToken(Substrate.NetApi.Model.Types.Primitive.U32 asset_id, Substrate.NetApi.Model.Types.Primitive.U128 token_price, Substrate.NetApi.Model.Types.Primitive.U32 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(asset_id.Encode());
            byteArray.AddRange(token_price.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(93, "Marketplace", 4, "relist_token", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> buy_relisted_token
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method BuyRelistedToken(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, Substrate.NetApi.Model.Types.Primitive.U32 amount, Substrate.NetApi.Model.Types.Primitive.U32 payment_asset)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(amount.Encode());
            byteArray.AddRange(payment_asset.Encode());
            return new Method(93, "Marketplace", 5, "buy_relisted_token", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> cancel_property_purchase
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CancelPropertyPurchase(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 6, "cancel_property_purchase", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> make_offer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method MakeOffer(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, Substrate.NetApi.Model.Types.Primitive.U128 offer_price, Substrate.NetApi.Model.Types.Primitive.U32 amount, Substrate.NetApi.Model.Types.Primitive.U32 payment_asset)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(offer_price.Encode());
            byteArray.AddRange(amount.Encode());
            byteArray.AddRange(payment_asset.Encode());
            return new Method(93, "Marketplace", 7, "make_offer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> handle_offer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method HandleOffer(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32 offeror, XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.EnumOffer offer)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(offeror.Encode());
            byteArray.AddRange(offer.Encode());
            return new Method(93, "Marketplace", 8, "handle_offer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> cancel_offer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CancelOffer(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 9, "cancel_offer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> withdraw_rejected
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method WithdrawRejected(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 10, "withdraw_rejected", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> withdraw_legal_process_expired
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method WithdrawLegalProcessExpired(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 11, "withdraw_legal_process_expired", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> withdraw_expired
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method WithdrawExpired(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 12, "withdraw_expired", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> withdraw_deposit_unsold
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method WithdrawDepositUnsold(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 13, "withdraw_deposit_unsold", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> upgrade_object
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method UpgradeObject(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, Substrate.NetApi.Model.Types.Primitive.U128 new_price)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(new_price.Encode());
            return new Method(93, "Marketplace", 14, "upgrade_object", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> delist_token
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method DelistToken(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 15, "delist_token", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> lawyer_claim_property
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method LawyerClaimProperty(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.EnumLegalProperty legal_side, Substrate.NetApi.Model.Types.Primitive.U128 costs)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(legal_side.Encode());
            byteArray.AddRange(costs.Encode());
            return new Method(93, "Marketplace", 16, "lawyer_claim_property", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> vote_on_spv_lawyer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method VoteOnSpvLawyer(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, XcavatePaseo.NetApi.Generated.Model.pallet_marketplace.types.EnumVote vote)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(vote.Encode());
            return new Method(93, "Marketplace", 17, "vote_on_spv_lawyer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve_developer_lawyer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ApproveDeveloperLawyer(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, Substrate.NetApi.Model.Types.Primitive.Bool approve)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(approve.Encode());
            return new Method(93, "Marketplace", 18, "approve_developer_lawyer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> finalize_spv_lawyer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method FinalizeSpvLawyer(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 19, "finalize_spv_lawyer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_lawyer_claim
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoveLawyerClaim(Substrate.NetApi.Model.Types.Primitive.U32 listing_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            return new Method(93, "Marketplace", 20, "remove_lawyer_claim", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> lawyer_confirm_documents
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method LawyerConfirmDocuments(Substrate.NetApi.Model.Types.Primitive.U32 listing_id, Substrate.NetApi.Model.Types.Primitive.Bool approve)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(listing_id.Encode());
            byteArray.AddRange(approve.Encode());
            return new Method(93, "Marketplace", 21, "lawyer_confirm_documents", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> send_property_token
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SendPropertyToken(Substrate.NetApi.Model.Types.Primitive.U32 asset_id, XcavatePaseo.NetApi.Generated.Model.sp_core.crypto.AccountId32 receiver, Substrate.NetApi.Model.Types.Primitive.U32 token_amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(asset_id.Encode());
            byteArray.AddRange(receiver.Encode());
            byteArray.AddRange(token_amount.Encode());
            return new Method(93, "Marketplace", 22, "send_property_token", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> MarketplaceConstants
    /// </summary>
    public sealed class MarketplaceConstants
    {
        
        /// <summary>
        /// >> PalletId
        ///  The marketplace's pallet id, used for deriving its sovereign account ID.
        /// </summary>
        public XcavatePaseo.NetApi.Generated.Model.frame_support.PalletId PalletId()
        {
            var result = new XcavatePaseo.NetApi.Generated.Model.frame_support.PalletId();
            result.Create("0x70792F6E66747863");
            return result;
        }
        
        /// <summary>
        /// >> MinPropertyToken
        ///  The minimum amount of token of a property.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MinPropertyToken()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x64000000");
            return result;
        }
        
        /// <summary>
        /// >> MaxPropertyToken
        ///  The maximum amount of token of a property.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxPropertyToken()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0xFA000000");
            return result;
        }
        
        /// <summary>
        /// >> TreasuryId
        ///  The Trasury's pallet id, used for deriving its sovereign account ID.
        /// </summary>
        public XcavatePaseo.NetApi.Generated.Model.frame_support.PalletId TreasuryId()
        {
            var result = new XcavatePaseo.NetApi.Generated.Model.frame_support.PalletId();
            result.Create("0x70792F7472737279");
            return result;
        }
        
        /// <summary>
        /// >> ListingDeposit
        ///  A deposit for listing a property.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 ListingDeposit()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x80969800000000000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MarketplaceFeePercentage
        ///  The fee percentage charged by the marketplace (e.g., 1 for 1%).
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 MarketplaceFeePercentage()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x01000000000000000000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> AcceptedAssets
        /// </summary>
        public XcavatePaseo.NetApi.Generated.Types.Base.Arr2U32 AcceptedAssets()
        {
            var result = new XcavatePaseo.NetApi.Generated.Types.Base.Arr2U32();
            result.Create("0x39050000C0070000");
            return result;
        }
        
        /// <summary>
        /// >> MaxAcceptedAssets
        ///  The maximum amount of accepted assets.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxAcceptedAssets()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x02000000");
            return result;
        }
        
        /// <summary>
        /// >> LawyerVotingTime
        ///  The amount of time given to vote for a lawyer proposal.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LawyerVotingTime()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x64000000");
            return result;
        }
        
        /// <summary>
        /// >> LegalProcessTime
        ///  The amount of time given for the lawyer to handle the legal process.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LegalProcessTime()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x40380000");
            return result;
        }
    }
    
    /// <summary>
    /// >> MarketplaceErrors
    /// </summary>
    public enum MarketplaceErrors
    {
        
        /// <summary>
        /// >> InvalidIndex
        /// This index is not taken.
        /// </summary>
        InvalidIndex,
        
        /// <summary>
        /// >> NotEnoughFunds
        /// The buyer doesn't have enough funds.
        /// </summary>
        NotEnoughFunds,
        
        /// <summary>
        /// >> NotEnoughTokenAvailable
        /// Not enough token available to buy.
        /// </summary>
        NotEnoughTokenAvailable,
        
        /// <summary>
        /// >> DivisionError
        /// Error by dividing a number.
        /// </summary>
        DivisionError,
        
        /// <summary>
        /// >> MultiplyError
        /// Error by multiplying a number.
        /// </summary>
        MultiplyError,
        
        /// <summary>
        /// >> NoPermission
        /// No sufficient permission.
        /// </summary>
        NoPermission,
        
        /// <summary>
        /// >> UserNotWhitelisted
        /// User did not pass the kyc.
        /// </summary>
        UserNotWhitelisted,
        
        /// <summary>
        /// >> ArithmeticUnderflow
        /// </summary>
        ArithmeticUnderflow,
        
        /// <summary>
        /// >> ArithmeticOverflow
        /// </summary>
        ArithmeticOverflow,
        
        /// <summary>
        /// >> TokenNotForSale
        /// The token is not for sale.
        /// </summary>
        TokenNotForSale,
        
        /// <summary>
        /// >> RegionUnknown
        /// This Region is not known.
        /// </summary>
        RegionUnknown,
        
        /// <summary>
        /// >> LocationUnknown
        /// The location is not registered.
        /// </summary>
        LocationUnknown,
        
        /// <summary>
        /// >> TooManyToken
        /// The object can not be divided in so many token.
        /// </summary>
        TooManyToken,
        
        /// <summary>
        /// >> TokenAmountTooLow
        /// The object needs more token.
        /// </summary>
        TokenAmountTooLow,
        
        /// <summary>
        /// >> OnlyOneOfferPerUser
        /// A user can only make one offer per listing.
        /// </summary>
        OnlyOneOfferPerUser,
        
        /// <summary>
        /// >> LawyerJobTaken
        /// The lawyer job has already been taken.
        /// </summary>
        LawyerJobTaken,
        
        /// <summary>
        /// >> LawyerNotFound
        /// A lawyer has not been set.
        /// </summary>
        LawyerNotFound,
        
        /// <summary>
        /// >> AlreadyConfirmed
        /// The lawyer already submitted his answer.
        /// </summary>
        AlreadyConfirmed,
        
        /// <summary>
        /// >> CostsTooHigh
        /// The costs of the lawyer can't be that high.
        /// </summary>
        CostsTooHigh,
        
        /// <summary>
        /// >> AssetNotSupported
        /// This Asset is not supported for payment.
        /// </summary>
        AssetNotSupported,
        
        /// <summary>
        /// >> PaymentAssetNotSupported
        /// This Asset is not supported for payment.
        /// </summary>
        PaymentAssetNotSupported,
        
        /// <summary>
        /// >> ExceedsMaxEntries
        /// </summary>
        ExceedsMaxEntries,
        
        /// <summary>
        /// >> TokenNotRefunded
        /// The property is not refunded.
        /// </summary>
        TokenNotRefunded,
        
        /// <summary>
        /// >> PropertyAlreadySold
        /// The property is already sold.
        /// </summary>
        PropertyAlreadySold,
        
        /// <summary>
        /// >> ListingExpired
        /// Listing has already expired.
        /// </summary>
        ListingExpired,
        
        /// <summary>
        /// >> NoTokenBought
        /// Signer has not bought any token.
        /// </summary>
        NoTokenBought,
        
        /// <summary>
        /// >> ListingNotExpired
        /// The listing has not expired.
        /// </summary>
        ListingNotExpired,
        
        /// <summary>
        /// >> InvalidTokenPrice
        /// Price of a token can not be zero.
        /// </summary>
        InvalidTokenPrice,
        
        /// <summary>
        /// >> AmountCannotBeZero
        /// Token amount can not be zero.
        /// </summary>
        AmountCannotBeZero,
        
        /// <summary>
        /// >> InvalidFeePercentage
        /// Marketplace fee needs to be below 100 %.
        /// </summary>
        InvalidFeePercentage,
        
        /// <summary>
        /// >> InvalidTaxPercentage
        /// Marketplace tax needs to be below 100 %.
        /// </summary>
        InvalidTaxPercentage,
        
        /// <summary>
        /// >> NotEnoughToken
        /// The sender has not enough token.
        /// </summary>
        NotEnoughToken,
        
        /// <summary>
        /// >> TokenNotReturned
        /// Token have not been returned yet.
        /// </summary>
        TokenNotReturned,
        
        /// <summary>
        /// >> NoObjectFound
        /// The real estate object could not be found.
        /// </summary>
        NoObjectFound,
        
        /// <summary>
        /// >> WrongRegion
        /// The lawyer has no permission for this region.
        /// </summary>
        WrongRegion,
        
        /// <summary>
        /// >> TokenOwnerNotFound
        /// TokenOwnerHasNotBeenFound.
        /// </summary>
        TokenOwnerNotFound,
        
        /// <summary>
        /// >> NoLawyerProposed
        /// No lawyer has been proposed to vote on.
        /// </summary>
        NoLawyerProposed,
        
        /// <summary>
        /// >> LawyerProposalOngoing
        /// There is already a lawyer proposal ongoing.
        /// </summary>
        LawyerProposalOngoing,
        
        /// <summary>
        /// >> VotingExpired
        /// The propal has expired.
        /// </summary>
        VotingExpired,
        
        /// <summary>
        /// >> VotingStillOngoing
        /// The voting is still ongoing.
        /// </summary>
        VotingStillOngoing,
        
        /// <summary>
        /// >> PropertyHasNotBeenSoldYet
        /// Property has not been sold yet.
        /// </summary>
        PropertyHasNotBeenSoldYet,
        
        /// <summary>
        /// >> LegalProcessFailed
        /// The legal process was not finished on time.
        /// </summary>
        LegalProcessFailed,
        
        /// <summary>
        /// >> LegalProcessOngoing
        /// The legal process is currently ongoing.
        /// </summary>
        LegalProcessOngoing,
    }
}
