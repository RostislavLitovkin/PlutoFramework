//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace KusamaAssetHub.NetApi.Generated.Storage
{
    
    
    /// <summary>
    /// >> RemoteProxyRelayChainStorage
    /// </summary>
    public sealed class RemoteProxyRelayChainStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> RemoteProxyRelayChainStorage Constructor
        /// </summary>
        public RemoteProxyRelayChainStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("RemoteProxyRelayChain", "BlockToRoot"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(KusamaAssetHub.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT27)));
        }
        
        /// <summary>
        /// >> BlockToRootParams
        ///  Stores the last [`Config::MaxStorageRootsToKeep`] block to storage root mappings of the
        ///  target chain.
        /// </summary>
        public static string BlockToRootParams()
        {
            return RequestGenerator.GetStorage("RemoteProxyRelayChain", "BlockToRoot", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> BlockToRootDefault
        /// Default value as hex string
        /// </summary>
        public static string BlockToRootDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> BlockToRoot
        ///  Stores the last [`Config::MaxStorageRootsToKeep`] block to storage root mappings of the
        ///  target chain.
        /// </summary>
        public async Task<KusamaAssetHub.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT27> BlockToRoot(string blockhash, CancellationToken token)
        {
            string parameters = RemoteProxyRelayChainStorage.BlockToRootParams();
            var result = await _client.GetStorageAsync<KusamaAssetHub.NetApi.Generated.Model.bounded_collections.bounded_vec.BoundedVecT27>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> RemoteProxyRelayChainCalls
    /// </summary>
    public sealed class RemoteProxyRelayChainCalls
    {
        
        /// <summary>
        /// >> remote_proxy
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoteProxy(KusamaAssetHub.NetApi.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress real, Substrate.NetApi.Model.Types.Base.BaseOpt<KusamaAssetHub.NetApi.Generated.Model.asset_hub_kusama_runtime.EnumProxyType> force_proxy_type, KusamaAssetHub.NetApi.Generated.Model.asset_hub_kusama_runtime.EnumRuntimeCall call, KusamaAssetHub.NetApi.Generated.Model.pallet_remote_proxy.pallet.EnumRemoteProxyProof proof)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(real.Encode());
            byteArray.AddRange(force_proxy_type.Encode());
            byteArray.AddRange(call.Encode());
            byteArray.AddRange(proof.Encode());
            return new Method(43, "RemoteProxyRelayChain", 0, "remote_proxy", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> register_remote_proxy_proof
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RegisterRemoteProxyProof(KusamaAssetHub.NetApi.Generated.Model.pallet_remote_proxy.pallet.EnumRemoteProxyProof proof)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(proof.Encode());
            return new Method(43, "RemoteProxyRelayChain", 1, "register_remote_proxy_proof", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remote_proxy_with_registered_proof
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoteProxyWithRegisteredProof(KusamaAssetHub.NetApi.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress real, Substrate.NetApi.Model.Types.Base.BaseOpt<KusamaAssetHub.NetApi.Generated.Model.asset_hub_kusama_runtime.EnumProxyType> force_proxy_type, KusamaAssetHub.NetApi.Generated.Model.asset_hub_kusama_runtime.EnumRuntimeCall call)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(real.Encode());
            byteArray.AddRange(force_proxy_type.Encode());
            byteArray.AddRange(call.Encode());
            return new Method(43, "RemoteProxyRelayChain", 2, "remote_proxy_with_registered_proof", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> RemoteProxyRelayChainConstants
    /// </summary>
    public sealed class RemoteProxyRelayChainConstants
    {
    }
    
    /// <summary>
    /// >> RemoteProxyRelayChainErrors
    /// </summary>
    public enum RemoteProxyRelayChainErrors
    {
        
        /// <summary>
        /// >> CouldNotConvertLocalToRemoteAccountId
        /// The local account id could not converted to the remote account id.
        /// </summary>
        CouldNotConvertLocalToRemoteAccountId,
        
        /// <summary>
        /// >> UnknownProofAnchorBlock
        /// The anchor block of the remote proof is unknown.
        /// </summary>
        UnknownProofAnchorBlock,
        
        /// <summary>
        /// >> InvalidProof
        /// The proxy definition could not be found in the proof.
        /// </summary>
        InvalidProof,
        
        /// <summary>
        /// >> ProxyDefinitionDecodingFailed
        /// Failed to decode the remote proxy definition from the proof.
        /// </summary>
        ProxyDefinitionDecodingFailed,
        
        /// <summary>
        /// >> Unannounced
        /// Announcement, if made at all, was made too recently.
        /// </summary>
        Unannounced,
        
        /// <summary>
        /// >> DidNotFindMatchingProxyDefinition
        /// Could not find any matching proxy definition in the proof.
        /// </summary>
        DidNotFindMatchingProxyDefinition,
        
        /// <summary>
        /// >> ProxyProofNotRegistered
        /// Proxy proof not registered.
        /// </summary>
        ProxyProofNotRegistered,
    }
}
